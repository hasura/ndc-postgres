version: "3.6"

name: ndc-postgres-component-benchmarks

services:
  benchmark:
    image: grafana/k6
    environment:
      AGENT_SOCKET: "agent:8100"
      OUTPUT_DIRECTORY: "/home/k6/output"
      K6_OUT: "experimental-prometheus-rw"
      K6_PROMETHEUS_RW_SERVER_URL: "http://prometheus:9090/api/v1/write"
      K6_PROMETHEUS_RW_TREND_AS_NATIVE_HISTOGRAM: "true"
    volumes:
      - type: volume
        source: benchmark_output
        target: /home/k6/output
      - type: bind
        source: ./benchmarks
        target: /benchmarks
        read_only: true
      - type: bind
        source: ./common.js
        target: /common.js
        read_only: true
    depends_on:
      agent:
        condition: service_started
      prometheus:
        condition: service_started
      benchmark-output-init:
        condition: service_completed_successfully

  benchmark-output-init:
    image: grafana/k6
    entrypoint:
      - sh
      - -c
    command:
      - |
        /bin/mkdir -p /home/k6/output/summaries
        /bin/chown -R k6: /home/k6/output
    user: root
    volumes:
      - type: volume
        source: benchmark_output
        target: /home/k6/output

  agent:
    image: ghcr.io/hasura/ndc-postgres:dev
    command:
      - serve
    init: true
    ports:
      - "8100:8100"
    environment:
      CONFIGURATION_FILE: "/deployment.json"
      # we don't care about traces right now, and the benchmarks flood the batch buffer
      OTEL_TRACES_SAMPLER: "always_off"
    volumes:
      - type: bind
        source: ./generated/deployment.json
        target: /deployment.json
        read_only: true
    depends_on:
      postgres:
        condition: service_started

  agent-configuration:
    image: ghcr.io/hasura/ndc-postgres:dev
    command:
      - configuration
      - serve
    init: true
    ports:
      - 9100
    depends_on:
      postgres:
        condition: service_started

  postgres:
    image: postgis/postgis:16-3.4-alpine
    platform: linux/amd64
    command:
      - -F # turn fsync off for speed
      - -N 1000 # increase max connections from 100 so we can run more HGEs
    ports:
      - 5432
    environment:
      POSTGRES_PASSWORD: "password"
    volumes:
      - type: tmpfs
        target: /var/lib/postgresql/data
      - type: bind
        source: ../../static/chinook-postgres.sql
        target: /docker-entrypoint-initdb.d/chinook-postgres.sql
        read_only: true
    healthcheck:
      test:
        - CMD-SHELL
        - psql -U "$${POSTGRES_USER:-postgres}" < /dev/null && sleep 5 && psql -U "$${POSTGRES_USER:-postgres}" < /dev/null
      start_period: 5s
      interval: 5s
      timeout: 10s
      retries: 20

  # k6 will push statistics to Prometheus
  prometheus:
    image: prom/prometheus
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --web.enable-remote-write-receiver
      - --enable-feature=native-histograms
    ports:
      - 9090
    volumes:
      - type: volume
        source: prometheus
        target: /prometheus

  # Grafana will visualize k6 statistics
  grafana:
    image: grafana/grafana
    ports:
      - 64300:3000
    environment:
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_BASIC_ENABLED=false
    volumes:
      - type: bind
        source: ../grafana
        target: /etc/grafana/provisioning
    depends_on:
      prometheus:
        condition: service_started

volumes:
  benchmark_output:
  metrics_output:
  prometheus:
