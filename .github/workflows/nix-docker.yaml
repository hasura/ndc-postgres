name: multi-architecture docker build

on:
  push:
    branches:
      - main
    tags:
      - "v*"

jobs:
  build_and_deploy:
    name: build and deploy
    runs-on: ubuntu-latest
    strategy:
      matrix:
        connector:
          - ndc-citus
          - ndc-cockroach
          - ndc-postgres
      fail-fast: false
    permissions:
      contents: read
      id-token: write
      packages: write

    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v4

      - name: Install Nix ❄
        uses: DeterminateSystems/nix-installer-action@v6

      - name: Run the Magic Nix Cache 🔌
        uses: DeterminateSystems/magic-nix-cache-action@v2

      - id: gcloud-auth
        name: Authenticate to Google Cloud 🔑
        uses: google-github-actions/auth@v1
        with:
          token_format: access_token
          service_account: "hasura-ci-docker-writer@hasura-ddn.iam.gserviceaccount.com"
          workload_identity_provider: "projects/1025009031284/locations/global/workloadIdentityPools/hasura-ddn/providers/github"

      - name: Login to Google Container Registry 📦
        uses: "docker/login-action@v3"
        with:
          registry: "us-docker.pkg.dev"
          username: "oauth2accesstoken"
          password: "${{ steps.gcloud-auth.outputs.access_token }}"

      - name: Login to GitHub Container Registry 📦
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and deploy Docker images to Google Container Registry 🚀
        run: nix run .#publish-docker-image '${{ github.ref }}' '${{ matrix.connector }}' 'us-docker.pkg.dev/hasura-ddn/ddn/${{ matrix.connector }}'

      - name: Build and deploy Docker images to GitHub Packages 🚀
        run: nix run .#publish-docker-image '${{ github.ref }}' '${{ matrix.connector }}' 'ghcr.io/hasura/${{ matrix.connector }}'

      # scream into Slack if something goes wrong
      - name: Report Status
        if: always()
        uses: ravsamhq/notify-slack-action@v2
        with:
          status: ${{ job.status }}
          notify_when: failure
          notification_title: "😧 Error on <{repo_url}|{repo}>"
          message_format: "🐴 *{workflow}* {status_message} for <{repo_url}|{repo}>"
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.BROKEN_BUILD_SLACK_WEBHOOK_URL }}
