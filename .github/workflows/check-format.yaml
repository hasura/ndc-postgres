name: Postgres NDC format

on:
  push:

jobs:
  cargo-fmt:
    name: check formatting with cargo fmt
    runs-on: ubuntu-latest
    env:
      CARGO_NET_GIT_FETCH_WITH_CLI: "true"
      RUSTFLAGS: "-D warnings" # fail on warnings
    steps:
      - uses: actions/checkout@v4

      - name: install tools
        run: |
          rustup show

      - name: check formatting
        run: |
          cargo fmt --all --check

      # scream into Slack if something goes wrong
      - name: Report Status
        if: always() && github.ref == 'refs/heads/main'
        uses: ravsamhq/notify-slack-action@v2
        with:
          status: ${{ job.status }}
          notify_when: failure
          notification_title: "üòß Error on <{repo_url}|{repo}>"
          message_format: "üê¥ *{workflow}* {status_message} for <{repo_url}|{repo}>"
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.BROKEN_BUILD_SLACK_WEBHOOK_URL }}

  nixpkgs-fmt:
    name: check formatting with nixpkgs-fmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Nix ‚ùÑ
        uses: cachix/install-nix-action@v22
        with:
          github_access_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up the Nix Cache üîå
        uses: cachix/cachix-action@v12
        with:
          name: hasura-v3-dev
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}

      - name: check formatting
        run: |
          nix develop --command nixpkgs-fmt --check .

  prettier:
    name: check formatting with prettier
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Nix ‚ùÑ
        uses: cachix/install-nix-action@v22
        with:
          github_access_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up the Nix Cache üîå
        uses: cachix/cachix-action@v12
        with:
          name: hasura-v3-dev
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}

      - name: check formatting
        run: |
          nix develop --command prettier --check .
