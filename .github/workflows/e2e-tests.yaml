name: Postgres E2E tests

on:
  push:

jobs:
  run_postgres_e2es:
    name: Run Postgres E2Es
    runs-on: ubuntu-latest

    steps:
      - name: Install Nix ❄
        uses: cachix/install-nix-action@v31
        with:
          github_access_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up the Nix Cache 🔌
        uses: cachix/cachix-action@v16
        with:
          name: hasura-v3-dev
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}

      - name: Install `just`
        uses: extractions/setup-just@v3

      - name: Check out ndc-postgres
        uses: actions/checkout@v4
        with:
          path: ndc-postgres

      - name: Check out v3-engine
        uses: actions/checkout@v4
        with:
          repository: hasura/v3-engine
          path: v3-engine
          token: ${{ secrets.HASURA_BOT_TOKEN }}

      - name: Check out v3-e2e-testing
        uses: actions/checkout@v4
        with:
          repository: hasura/v3-e2e-testing
          path: v3-e2e-testing
          token: ${{ secrets.HASURA_BOT_TOKEN }}

      - name: Cache v3-e2e-testing compilation
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: "v3-e2e-testing"
          shared-key: "build-v3-e2e-testing"

      - name: Install v3-e2e-testing tools
        working-directory: v3-e2e-testing
        run: rustup show

      - name: Build v3-engine
        working-directory: v3-engine
        run: nix build .

      - name: Build ndc-postgres
        working-directory: ndc-postgres
        run: nix build .

      - name: Run the tests
        working-directory: v3-e2e-testing
        env:
          ENGINE_BINARY: >-
            ${{ github.workspace }}/v3-engine/result/bin/engine
          NDC_POSTGRES_BINARY: >-
            ${{ github.workspace }}/ndc-postgres/result/bin/ndc-postgres
        run: |
          npm install
          just start-postgres_v0_2-dependencies start-apollo-subgraph
          trap 'just stop-everything' EXIT
          RUST_LOG=DEBUG ./crates/postgres_v0_2/static/run-postgres-tests.sh '.*' "$NDC_POSTGRES_BINARY" "$ENGINE_BINARY"

      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: logs
          path: v3-e2e-testing/crates/postgres/static/logs
