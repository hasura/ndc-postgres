use std::fmt::Write;
/// Checks that a given value conforms to the schema generated by `schemars`.
///
/// Panics with a human-readable error if the value does not conform, or if the
/// schema could not be compiled.
pub fn check_value_conforms_to_schema<T: schemars::JsonSchema>(value: &serde_json::Value) {
    let schema_json = serde_json::to_value(schemars::schema_for!(T))
        .expect("the schema could not be converted to JSON");
    let schema = jsonschema::JSONSchema::options()
        .with_draft(jsonschema::Draft::Draft7)
        .compile(&schema_json)
        .expect("the schema could not be compiled");

    let result = schema.validate(value);

    match result {
        Ok(()) => (),
        Err(errors) => {
            panic!(
                "The configuration does not conform to the schema.\n{}",
                errors.fold(String::new(), |mut str, error| {
                    let _ = write!(
                        str,
                        "{}\ninstance path: {}\nschema path:   {}\n\n",
                        error, error.instance_path, error.schema_path
                    );
                    str
                })
            )
        }
    }
}
