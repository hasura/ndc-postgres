---
source: crates/tests/databases-tests/src/postgres/explain_tests.rs
expression: result.details.query
---
EXPLAIN
SELECT
  coalesce(json_agg(row_to_json("%5_universe")), '[]') AS "universe"
FROM
  (
    SELECT
      *
    FROM
      (
        SELECT
          coalesce(json_agg(row_to_json("%6_rows")), '[]') AS "rows"
        FROM
          (
            SELECT
              "%4_Artist"."Name" AS "Name"
            FROM
              (
                SELECT
                  "%0_Artist".*
                FROM
                  "public"."Artist" AS "%0_Artist"
                WHERE
                  (
                    EXISTS (
                      SELECT
                        1 AS "one"
                      FROM
                        "public"."Album" AS "%1_Album"
                      WHERE
                        (
                          EXISTS (
                            SELECT
                              1 AS "one"
                            FROM
                              "public"."Track" AS "%2_Track"
                            WHERE
                              (
                                (
                                  "%2_Track"."Name" ~~ cast($1 as "pg_catalog"."varchar")
                                )
                                AND ("%1_Album"."AlbumId" = "%2_Track"."AlbumId")
                              )
                          )
                          AND ("%0_Artist"."ArtistId" = "%1_Album"."ArtistId")
                        )
                    )
                    OR EXISTS (
                      SELECT
                        1 AS "one"
                      FROM
                        "public"."Album" AS "%3_Album"
                      WHERE
                        (
                          (
                            "%3_Album"."Title" ~~ cast($2 as "pg_catalog"."varchar")
                          )
                          AND ("%0_Artist"."ArtistId" = "%3_Album"."ArtistId")
                        )
                    )
                  )
                ORDER BY
                  "%0_Artist"."ArtistId" ASC
                LIMIT
                  5
              ) AS "%4_Artist"
            ORDER BY
              "%4_Artist"."ArtistId" ASC
          ) AS "%6_rows"
      ) AS "%6_rows"
  ) AS "%5_universe"
