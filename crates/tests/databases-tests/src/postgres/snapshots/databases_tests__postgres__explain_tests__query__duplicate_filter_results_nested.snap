---
source: crates/tests/databases-tests/src/postgres/explain_tests.rs
expression: result.details.query
---
EXPLAIN
SELECT
  coalesce(json_agg(row_to_json("%7_universe")), '[]') AS "universe"
FROM
  (
    SELECT
      *
    FROM
      (
        SELECT
          coalesce(json_agg(row_to_json("%8_rows")), '[]') AS "rows"
        FROM
          (
            SELECT
              "%6_Artist"."Name" AS "Name"
            FROM
              (
                SELECT
                  "%0_Artist".*
                FROM
                  "public"."Artist" AS "%0_Artist"
                WHERE
                  EXISTS (
                    SELECT
                      1
                    FROM
                      (
                        SELECT
                          "%2_BOOLEXP_Track".*
                        FROM
                          (
                            SELECT
                              *
                            FROM
                              "public"."Album" AS "%1_BOOLEXP_Album"
                            WHERE
                              (
                                "%0_Artist"."ArtistId" = "%1_BOOLEXP_Album"."ArtistId"
                              )
                          ) AS "%1_BOOLEXP_Album"
                          INNER JOIN LATERAL (
                            SELECT
                              *
                            FROM
                              "public"."Track" AS "%2_BOOLEXP_Track"
                            WHERE
                              (
                                "%1_BOOLEXP_Album"."AlbumId" = "%2_BOOLEXP_Track"."AlbumId"
                              )
                          ) AS "%2_BOOLEXP_Track" ON ('true')
                      ) AS "%3_BOOLEXP_Track" FULL
                      OUTER JOIN LATERAL (
                        SELECT
                          "%4_BOOLEXP_Album".*
                        FROM
                          (
                            SELECT
                              *
                            FROM
                              "public"."Album" AS "%4_BOOLEXP_Album"
                            WHERE
                              (
                                "%0_Artist"."ArtistId" = "%4_BOOLEXP_Album"."ArtistId"
                              )
                          ) AS "%4_BOOLEXP_Album"
                      ) AS "%5_BOOLEXP_Album" ON ('true')
                    WHERE
                      (
                        (
                          "%3_BOOLEXP_Track"."Name" ~~ cast($1 as "pg_catalog"."varchar")
                        )
                        OR (
                          "%5_BOOLEXP_Album"."Title" ~~ cast($2 as "pg_catalog"."varchar")
                        )
                      )
                  )
                ORDER BY
                  "%0_Artist"."ArtistId" ASC
                LIMIT
                  5
              ) AS "%6_Artist"
            ORDER BY
              "%6_Artist"."ArtistId" ASC
          ) AS "%8_rows"
      ) AS "%8_rows"
  ) AS "%7_universe"
