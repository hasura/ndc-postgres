---
source: crates/tests/databases-tests/src/postgres/explain_tests.rs
expression: result.details.query
---
EXPLAIN WITH "%1_group_leader" AS (
  SELECT
    "%0_group_leader".*
  FROM
    "public"."group_leader" AS "%0_group_leader"
  ORDER BY
    ("%0_group_leader"."characters")."name" DESC
)
SELECT
  coalesce(json_agg(row_to_json("%12_universe")), '[]') AS "universe"
FROM
  (
    SELECT
      *
    FROM
      (
        SELECT
          coalesce(json_agg(row_to_json("%13_rows")), '[]') AS "rows"
        FROM
          (
            SELECT
              "%5_nested_fields_collect"."collected" AS "name",
              "%11_nested_fields_collect"."collected" AS "characters"
            FROM
              "%1_group_leader" AS "%2_group_leader"
              LEFT OUTER JOIN LATERAL (
                SELECT
                  row_to_json("%3_nested_fields") AS "collected"
                FROM
                  (
                    SELECT
                      "%4_nested_field_binding"."name" AS "name",
                      cast("%4_nested_field_binding"."popularity" as "text") AS "popularity"
                    FROM
                      (
                        SELECT
                          ("%2_group_leader"."name").*
                      ) AS "%4_nested_field_binding"
                  ) AS "%3_nested_fields"
              ) AS "%5_nested_fields_collect" ON ('true')
              LEFT OUTER JOIN LATERAL (
                SELECT
                  row_to_json("%6_nested_fields") AS "collected"
                FROM
                  (
                    SELECT
                      "%10_nested_fields_collect"."collected" AS "members",
                      "%7_nested_field_binding"."name" AS "name"
                    FROM
                      (
                        SELECT
                          ("%2_group_leader"."characters").*
                      ) AS "%7_nested_field_binding"
                      LEFT OUTER JOIN LATERAL (
                        SELECT
                          json_agg(row_to_json("%8_nested_fields")) AS "collected"
                        FROM
                          (
                            SELECT
                              "%9_nested_field_binding"."name" AS "name",
                              cast("%9_nested_field_binding"."popularity" as "text") AS "popularity"
                            FROM
                              (
                                SELECT
                                  (unnest("%7_nested_field_binding"."members")).*
                              ) AS "%9_nested_field_binding"
                          ) AS "%8_nested_fields"
                      ) AS "%10_nested_fields_collect" ON ('true')
                  ) AS "%6_nested_fields"
              ) AS "%11_nested_fields_collect" ON ('true')
            ORDER BY
              ("%2_group_leader"."characters")."name" DESC
          ) AS "%13_rows"
      ) AS "%13_rows"
  ) AS "%12_universe"
