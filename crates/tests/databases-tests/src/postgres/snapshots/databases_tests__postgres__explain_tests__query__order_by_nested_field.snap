---
source: crates/tests/databases-tests/src/postgres/explain_tests.rs
expression: result.details.query
---
EXPLAIN
SELECT
  coalesce(json_agg(row_to_json("%11_universe")), '[]') AS "universe"
FROM
  (
    SELECT
      *
    FROM
      (
        SELECT
          coalesce(json_agg(row_to_json("%12_rows")), '[]') AS "rows"
        FROM
          (
            SELECT
              "%4_nested_fields_collect"."collected" AS "name",
              "%10_nested_fields_collect"."collected" AS "characters"
            FROM
              (
                SELECT
                  "%0_group_leader".*
                FROM
                  "public"."group_leader" AS "%0_group_leader"
                ORDER BY
                  ("%0_group_leader"."characters")."name" DESC
              ) AS "%1_group_leader"
              LEFT OUTER JOIN LATERAL (
                SELECT
                  row_to_json("%2_nested_fields") AS "collected"
                FROM
                  (
                    SELECT
                      "%3_group_leader.name"."name" AS "name",
                      cast("%3_group_leader.name"."popularity" as "text") AS "popularity"
                    FROM
                      (
                        SELECT
                          ("%1_group_leader"."name").*
                      ) AS "%3_group_leader.name"
                  ) AS "%2_nested_fields"
              ) AS "%4_nested_fields_collect" ON ('true')
              LEFT OUTER JOIN LATERAL (
                SELECT
                  row_to_json("%5_nested_fields") AS "collected"
                FROM
                  (
                    SELECT
                      "%9_nested_fields_collect"."collected" AS "members",
                      "%6_group_leader.characters"."name" AS "name"
                    FROM
                      (
                        SELECT
                          ("%1_group_leader"."characters").*
                      ) AS "%6_group_leader.characters"
                      LEFT OUTER JOIN LATERAL (
                        SELECT
                          json_agg(row_to_json("%7_nested_fields")) AS "collected"
                        FROM
                          (
                            SELECT
                              "%8_group_leader.characters.members"."name" AS "name",
                              cast(
                                "%8_group_leader.characters.members"."popularity" as "text"
                              ) AS "popularity"
                            FROM
                              (
                                SELECT
                                  (unnest("%6_group_leader.characters"."members")).*
                              ) AS "%8_group_leader.characters.members"
                          ) AS "%7_nested_fields"
                      ) AS "%9_nested_fields_collect" ON ('true')
                  ) AS "%5_nested_fields"
              ) AS "%10_nested_fields_collect" ON ('true')
          ) AS "%12_rows"
      ) AS "%12_rows"
  ) AS "%11_universe"
