---
source: crates/tests/databases-tests/src/postgres/explain_tests.rs
expression: "result.details.get(\"0 insert_custom_dog SQL Mutation\").unwrap()"
---
EXPLAIN WITH "%0_generated_mutation" AS (
  INSERT INTO
    "custom"."dog"("adopter_name", "birthday", "height_cm", "name")
  VALUES
    (
      cast($1 as "pg_catalog"."text"),
      cast($2 as "pg_catalog"."date"),
      160,
      cast($3 as "pg_catalog"."text")
    ),
    (
      cast($4 as "pg_catalog"."text"),
      DEFAULT,
      160,
      cast($5 as "pg_catalog"."text")
    ) RETURNING *,
    (
      "custom"."dog"."adopter_name" = cast($6 as "pg_catalog"."text")
    ) AS "%check__constraint"
)
SELECT
  (
    SELECT
      json_build_object('result', row_to_json("%5_universe"), 'type', $7) AS "universe"
    FROM
      (
        SELECT
          *
        FROM
          (
            SELECT
              coalesce(json_agg(row_to_json("%6_returning")), '[]') AS "returning"
            FROM
              (
                SELECT
                  cast("%2_custom_dog"."id" as "text") AS "id",
                  "%2_custom_dog"."name" AS "name",
                  "%2_custom_dog"."birthday" AS "birthday",
                  cast("%2_custom_dog"."height_cm" as "text") AS "height_cm",
                  cast("%2_custom_dog"."height_in" as "text") AS "height_inch",
                  "%2_custom_dog"."adopter_name" AS "adopter_name"
                FROM
                  (
                    SELECT
                      "%1_custom_dog".*
                    FROM
                      "%0_generated_mutation" AS "%1_custom_dog"
                  ) AS "%2_custom_dog"
              ) AS "%6_returning"
          ) AS "%6_returning"
          CROSS JOIN (
            SELECT
              COUNT(*) AS "affected_rows"
            FROM
              (
                SELECT
                  "%3_custom_dog".*
                FROM
                  "%0_generated_mutation" AS "%3_custom_dog"
              ) AS "%4_custom_dog"
          ) AS "%7_aggregates"
      ) AS "%5_universe"
  ) AS "%results",
  (
    SELECT
      coalesce(
        bool_and("%8_insert_custom_dog"."%check__constraint"),
        true
      ) AS "%check__constraint"
    FROM
      "%0_generated_mutation" AS "%8_insert_custom_dog"
  ) AS "%check__constraint"
