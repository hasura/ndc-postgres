---
source: crates/tests/databases-tests/src/postgres/schema_tests.rs
expression: result
---
{
  "scalar_types": {
    "Phone": {
      "representation": {
        "type": "string"
      },
      "aggregate_functions": {
        "max": {
          "type": "max"
        },
        "min": {
          "type": "min"
        }
      },
      "comparison_operators": {
        "_eq": {
          "type": "equal"
        },
        "_gt": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "Phone"
          }
        },
        "_gte": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "Phone"
          }
        },
        "_ilike": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "Phone"
          }
        },
        "_in": {
          "type": "in"
        },
        "_iregex": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "Phone"
          }
        },
        "_like": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "Phone"
          }
        },
        "_lt": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "Phone"
          }
        },
        "_lte": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "Phone"
          }
        },
        "_neq": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "Phone"
          }
        },
        "_nilike": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "Phone"
          }
        },
        "_niregex": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "Phone"
          }
        },
        "_nlike": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "Phone"
          }
        },
        "_nregex": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "Phone"
          }
        },
        "_regex": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "Phone"
          }
        },
        "st_coveredby": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "Phone"
          }
        },
        "st_covers": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "Phone"
          }
        },
        "st_intersects": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "Phone"
          }
        },
        "st_relatematch": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "Phone"
          }
        },
        "starts_with": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "Phone"
          }
        },
        "ts_match_tt": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "Phone"
          }
        }
      },
      "extraction_functions": {}
    },
    "bool": {
      "representation": {
        "type": "boolean"
      },
      "aggregate_functions": {
        "bool_and": {
          "type": "custom",
          "result_type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "bool"
            }
          }
        },
        "bool_or": {
          "type": "custom",
          "result_type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "bool"
            }
          }
        },
        "every": {
          "type": "custom",
          "result_type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "bool"
            }
          }
        }
      },
      "comparison_operators": {
        "_eq": {
          "type": "equal"
        },
        "_gt": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "bool"
          }
        },
        "_gte": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "bool"
          }
        },
        "_in": {
          "type": "in"
        },
        "_lt": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "bool"
          }
        },
        "_lte": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "bool"
          }
        },
        "_neq": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "bool"
          }
        }
      },
      "extraction_functions": {}
    },
    "card_suit": {
      "representation": {
        "type": "enum",
        "one_of": [
          "hearts",
          "clubs",
          "diamonds",
          "spades"
        ]
      },
      "aggregate_functions": {
        "max": {
          "type": "max"
        },
        "min": {
          "type": "min"
        }
      },
      "comparison_operators": {
        "_eq": {
          "type": "equal"
        },
        "_gt": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "card_suit"
          }
        },
        "_gte": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "card_suit"
          }
        },
        "_in": {
          "type": "in"
        },
        "_lt": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "card_suit"
          }
        },
        "_lte": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "card_suit"
          }
        },
        "_neq": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "card_suit"
          }
        }
      },
      "extraction_functions": {}
    },
    "char": {
      "representation": {
        "type": "string"
      },
      "aggregate_functions": {
        "max": {
          "type": "max"
        },
        "min": {
          "type": "min"
        }
      },
      "comparison_operators": {
        "_eq": {
          "type": "equal"
        },
        "_gt": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "char"
          }
        },
        "_gte": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "char"
          }
        },
        "_ilike": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "char"
          }
        },
        "_in": {
          "type": "in"
        },
        "_iregex": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "char"
          }
        },
        "_like": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "char"
          }
        },
        "_lt": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "char"
          }
        },
        "_lte": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "char"
          }
        },
        "_neq": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "char"
          }
        },
        "_nilike": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "char"
          }
        },
        "_niregex": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "char"
          }
        },
        "_nlike": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "char"
          }
        },
        "_nregex": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "char"
          }
        },
        "_regex": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "char"
          }
        },
        "st_coveredby": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "char"
          }
        },
        "st_covers": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "char"
          }
        },
        "st_intersects": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "char"
          }
        },
        "st_relatematch": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "char"
          }
        },
        "starts_with": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "char"
          }
        },
        "ts_match_tt": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "char"
          }
        }
      },
      "extraction_functions": {}
    },
    "cidr": {
      "representation": {
        "type": "json"
      },
      "aggregate_functions": {
        "max": {
          "type": "max"
        },
        "min": {
          "type": "min"
        }
      },
      "comparison_operators": {
        "_eq": {
          "type": "equal"
        },
        "_gt": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "cidr"
          }
        },
        "_gte": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "cidr"
          }
        },
        "_in": {
          "type": "in"
        },
        "_lt": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "cidr"
          }
        },
        "_lte": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "cidr"
          }
        },
        "_neq": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "cidr"
          }
        },
        "inet_same_family": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "cidr"
          }
        },
        "network_overlap": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "cidr"
          }
        },
        "network_sub": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "cidr"
          }
        },
        "network_subeq": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "cidr"
          }
        },
        "network_sup": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "cidr"
          }
        },
        "network_supeq": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "cidr"
          }
        }
      },
      "extraction_functions": {}
    },
    "date": {
      "representation": {
        "type": "date"
      },
      "aggregate_functions": {
        "max": {
          "type": "max"
        },
        "min": {
          "type": "min"
        }
      },
      "comparison_operators": {
        "_eq": {
          "type": "equal"
        },
        "_gt": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "date"
          }
        },
        "_gte": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "date"
          }
        },
        "_in": {
          "type": "in"
        },
        "_lt": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "date"
          }
        },
        "_lte": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "date"
          }
        },
        "_neq": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "date"
          }
        }
      },
      "extraction_functions": {}
    },
    "even_number": {
      "representation": {
        "type": "int32"
      },
      "aggregate_functions": {
        "avg": {
          "type": "custom",
          "result_type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "numeric"
            }
          }
        },
        "bit_and": {
          "type": "custom",
          "result_type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "int4"
            }
          }
        },
        "bit_or": {
          "type": "custom",
          "result_type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "int4"
            }
          }
        },
        "bit_xor": {
          "type": "custom",
          "result_type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "int4"
            }
          }
        },
        "max": {
          "type": "max"
        },
        "min": {
          "type": "min"
        },
        "stddev": {
          "type": "custom",
          "result_type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "numeric"
            }
          }
        },
        "stddev_pop": {
          "type": "custom",
          "result_type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "numeric"
            }
          }
        },
        "stddev_samp": {
          "type": "custom",
          "result_type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "numeric"
            }
          }
        },
        "sum": {
          "type": "sum",
          "result_type": "int8"
        },
        "var_pop": {
          "type": "custom",
          "result_type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "numeric"
            }
          }
        },
        "var_samp": {
          "type": "custom",
          "result_type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "numeric"
            }
          }
        },
        "variance": {
          "type": "custom",
          "result_type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "numeric"
            }
          }
        }
      },
      "comparison_operators": {
        "_eq": {
          "type": "equal"
        },
        "_gt": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "even_number"
          }
        },
        "_gte": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "even_number"
          }
        },
        "_in": {
          "type": "in"
        },
        "_lt": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "even_number"
          }
        },
        "_lte": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "even_number"
          }
        },
        "_neq": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "even_number"
          }
        }
      },
      "extraction_functions": {}
    },
    "float4": {
      "representation": {
        "type": "float32"
      },
      "aggregate_functions": {
        "avg": {
          "type": "average",
          "result_type": "float8"
        },
        "max": {
          "type": "max"
        },
        "min": {
          "type": "min"
        },
        "stddev": {
          "type": "custom",
          "result_type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "float8"
            }
          }
        },
        "stddev_pop": {
          "type": "custom",
          "result_type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "float8"
            }
          }
        },
        "stddev_samp": {
          "type": "custom",
          "result_type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "float8"
            }
          }
        },
        "sum": {
          "type": "custom",
          "result_type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "float4"
            }
          }
        },
        "var_pop": {
          "type": "custom",
          "result_type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "float8"
            }
          }
        },
        "var_samp": {
          "type": "custom",
          "result_type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "float8"
            }
          }
        },
        "variance": {
          "type": "custom",
          "result_type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "float8"
            }
          }
        }
      },
      "comparison_operators": {
        "_eq": {
          "type": "equal"
        },
        "_gt": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "float4"
          }
        },
        "_gte": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "float4"
          }
        },
        "_in": {
          "type": "in"
        },
        "_lt": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "float4"
          }
        },
        "_lte": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "float4"
          }
        },
        "_neq": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "float4"
          }
        }
      },
      "extraction_functions": {}
    },
    "float8": {
      "representation": {
        "type": "float64"
      },
      "aggregate_functions": {
        "avg": {
          "type": "average",
          "result_type": "float8"
        },
        "max": {
          "type": "max"
        },
        "min": {
          "type": "min"
        },
        "stddev": {
          "type": "custom",
          "result_type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "float8"
            }
          }
        },
        "stddev_pop": {
          "type": "custom",
          "result_type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "float8"
            }
          }
        },
        "stddev_samp": {
          "type": "custom",
          "result_type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "float8"
            }
          }
        },
        "sum": {
          "type": "sum",
          "result_type": "float8"
        },
        "var_pop": {
          "type": "custom",
          "result_type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "float8"
            }
          }
        },
        "var_samp": {
          "type": "custom",
          "result_type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "float8"
            }
          }
        },
        "variance": {
          "type": "custom",
          "result_type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "float8"
            }
          }
        }
      },
      "comparison_operators": {
        "_eq": {
          "type": "equal"
        },
        "_gt": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "float8"
          }
        },
        "_gte": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "float8"
          }
        },
        "_in": {
          "type": "in"
        },
        "_lt": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "float8"
          }
        },
        "_lte": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "float8"
          }
        },
        "_neq": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "float8"
          }
        }
      },
      "extraction_functions": {}
    },
    "inet": {
      "representation": {
        "type": "json"
      },
      "aggregate_functions": {
        "max": {
          "type": "max"
        },
        "min": {
          "type": "min"
        }
      },
      "comparison_operators": {
        "_eq": {
          "type": "equal"
        },
        "_gt": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "inet"
          }
        },
        "_gte": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "inet"
          }
        },
        "_in": {
          "type": "in"
        },
        "_lt": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "inet"
          }
        },
        "_lte": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "inet"
          }
        },
        "_neq": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "inet"
          }
        },
        "inet_same_family": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "inet"
          }
        },
        "network_overlap": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "inet"
          }
        },
        "network_sub": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "inet"
          }
        },
        "network_subeq": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "inet"
          }
        },
        "network_sup": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "inet"
          }
        },
        "network_supeq": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "inet"
          }
        }
      },
      "extraction_functions": {}
    },
    "int2": {
      "representation": {
        "type": "int16"
      },
      "aggregate_functions": {
        "avg": {
          "type": "custom",
          "result_type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "numeric"
            }
          }
        },
        "bit_and": {
          "type": "custom",
          "result_type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "int2"
            }
          }
        },
        "bit_or": {
          "type": "custom",
          "result_type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "int2"
            }
          }
        },
        "bit_xor": {
          "type": "custom",
          "result_type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "int2"
            }
          }
        },
        "max": {
          "type": "max"
        },
        "min": {
          "type": "min"
        },
        "stddev": {
          "type": "custom",
          "result_type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "numeric"
            }
          }
        },
        "stddev_pop": {
          "type": "custom",
          "result_type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "numeric"
            }
          }
        },
        "stddev_samp": {
          "type": "custom",
          "result_type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "numeric"
            }
          }
        },
        "sum": {
          "type": "sum",
          "result_type": "int8"
        },
        "var_pop": {
          "type": "custom",
          "result_type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "numeric"
            }
          }
        },
        "var_samp": {
          "type": "custom",
          "result_type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "numeric"
            }
          }
        },
        "variance": {
          "type": "custom",
          "result_type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "numeric"
            }
          }
        }
      },
      "comparison_operators": {
        "_eq": {
          "type": "equal"
        },
        "_gt": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "int2"
          }
        },
        "_gte": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "int2"
          }
        },
        "_in": {
          "type": "in"
        },
        "_lt": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "int2"
          }
        },
        "_lte": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "int2"
          }
        },
        "_neq": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "int2"
          }
        }
      },
      "extraction_functions": {}
    },
    "int4": {
      "representation": {
        "type": "int32"
      },
      "aggregate_functions": {
        "avg": {
          "type": "custom",
          "result_type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "numeric"
            }
          }
        },
        "bit_and": {
          "type": "custom",
          "result_type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "int4"
            }
          }
        },
        "bit_or": {
          "type": "custom",
          "result_type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "int4"
            }
          }
        },
        "bit_xor": {
          "type": "custom",
          "result_type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "int4"
            }
          }
        },
        "max": {
          "type": "max"
        },
        "min": {
          "type": "min"
        },
        "stddev": {
          "type": "custom",
          "result_type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "numeric"
            }
          }
        },
        "stddev_pop": {
          "type": "custom",
          "result_type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "numeric"
            }
          }
        },
        "stddev_samp": {
          "type": "custom",
          "result_type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "numeric"
            }
          }
        },
        "sum": {
          "type": "sum",
          "result_type": "int8"
        },
        "var_pop": {
          "type": "custom",
          "result_type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "numeric"
            }
          }
        },
        "var_samp": {
          "type": "custom",
          "result_type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "numeric"
            }
          }
        },
        "variance": {
          "type": "custom",
          "result_type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "numeric"
            }
          }
        }
      },
      "comparison_operators": {
        "_eq": {
          "type": "equal"
        },
        "_gt": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "int4"
          }
        },
        "_gte": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "int4"
          }
        },
        "_in": {
          "type": "in"
        },
        "_lt": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "int4"
          }
        },
        "_lte": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "int4"
          }
        },
        "_neq": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "int4"
          }
        }
      },
      "extraction_functions": {}
    },
    "int8": {
      "representation": {
        "type": "int64"
      },
      "aggregate_functions": {
        "avg": {
          "type": "custom",
          "result_type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "numeric"
            }
          }
        },
        "bit_and": {
          "type": "custom",
          "result_type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "int8"
            }
          }
        },
        "bit_or": {
          "type": "custom",
          "result_type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "int8"
            }
          }
        },
        "bit_xor": {
          "type": "custom",
          "result_type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "int8"
            }
          }
        },
        "max": {
          "type": "max"
        },
        "min": {
          "type": "min"
        },
        "stddev": {
          "type": "custom",
          "result_type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "numeric"
            }
          }
        },
        "stddev_pop": {
          "type": "custom",
          "result_type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "numeric"
            }
          }
        },
        "stddev_samp": {
          "type": "custom",
          "result_type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "numeric"
            }
          }
        },
        "sum": {
          "type": "custom",
          "result_type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "numeric"
            }
          }
        },
        "var_pop": {
          "type": "custom",
          "result_type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "numeric"
            }
          }
        },
        "var_samp": {
          "type": "custom",
          "result_type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "numeric"
            }
          }
        },
        "variance": {
          "type": "custom",
          "result_type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "numeric"
            }
          }
        }
      },
      "comparison_operators": {
        "_eq": {
          "type": "equal"
        },
        "_gt": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "int8"
          }
        },
        "_gte": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "int8"
          }
        },
        "_in": {
          "type": "in"
        },
        "_lt": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "int8"
          }
        },
        "_lte": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "int8"
          }
        },
        "_neq": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "int8"
          }
        }
      },
      "extraction_functions": {}
    },
    "interval": {
      "representation": {
        "type": "json"
      },
      "aggregate_functions": {
        "avg": {
          "type": "custom",
          "result_type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "interval"
            }
          }
        },
        "max": {
          "type": "max"
        },
        "min": {
          "type": "min"
        },
        "sum": {
          "type": "custom",
          "result_type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "interval"
            }
          }
        }
      },
      "comparison_operators": {
        "_eq": {
          "type": "equal"
        },
        "_gt": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "interval"
          }
        },
        "_gte": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "interval"
          }
        },
        "_in": {
          "type": "in"
        },
        "_lt": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "interval"
          }
        },
        "_lte": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "interval"
          }
        },
        "_neq": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "interval"
          }
        }
      },
      "extraction_functions": {}
    },
    "numeric": {
      "representation": {
        "type": "bigdecimal"
      },
      "aggregate_functions": {
        "avg": {
          "type": "custom",
          "result_type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "numeric"
            }
          }
        },
        "max": {
          "type": "max"
        },
        "min": {
          "type": "min"
        },
        "stddev": {
          "type": "custom",
          "result_type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "numeric"
            }
          }
        },
        "stddev_pop": {
          "type": "custom",
          "result_type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "numeric"
            }
          }
        },
        "stddev_samp": {
          "type": "custom",
          "result_type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "numeric"
            }
          }
        },
        "sum": {
          "type": "custom",
          "result_type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "numeric"
            }
          }
        },
        "var_pop": {
          "type": "custom",
          "result_type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "numeric"
            }
          }
        },
        "var_samp": {
          "type": "custom",
          "result_type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "numeric"
            }
          }
        },
        "variance": {
          "type": "custom",
          "result_type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "numeric"
            }
          }
        }
      },
      "comparison_operators": {
        "_eq": {
          "type": "equal"
        },
        "_gt": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "numeric"
          }
        },
        "_gte": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "numeric"
          }
        },
        "_in": {
          "type": "in"
        },
        "_lt": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "numeric"
          }
        },
        "_lte": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "numeric"
          }
        },
        "_neq": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "numeric"
          }
        }
      },
      "extraction_functions": {}
    },
    "text": {
      "representation": {
        "type": "string"
      },
      "aggregate_functions": {
        "max": {
          "type": "max"
        },
        "min": {
          "type": "min"
        }
      },
      "comparison_operators": {
        "_eq": {
          "type": "equal"
        },
        "_gt": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "text"
          }
        },
        "_gte": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "text"
          }
        },
        "_ilike": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "text"
          }
        },
        "_in": {
          "type": "in"
        },
        "_iregex": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "text"
          }
        },
        "_like": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "text"
          }
        },
        "_lt": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "text"
          }
        },
        "_lte": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "text"
          }
        },
        "_neq": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "text"
          }
        },
        "_nilike": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "text"
          }
        },
        "_niregex": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "text"
          }
        },
        "_nlike": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "text"
          }
        },
        "_nregex": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "text"
          }
        },
        "_regex": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "text"
          }
        },
        "st_coveredby": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "text"
          }
        },
        "st_covers": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "text"
          }
        },
        "st_intersects": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "text"
          }
        },
        "st_relatematch": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "text"
          }
        },
        "starts_with": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "text"
          }
        },
        "ts_match_tt": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "text"
          }
        }
      },
      "extraction_functions": {}
    },
    "time": {
      "representation": {
        "type": "string"
      },
      "aggregate_functions": {
        "avg": {
          "type": "custom",
          "result_type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "interval"
            }
          }
        },
        "max": {
          "type": "max"
        },
        "min": {
          "type": "min"
        },
        "sum": {
          "type": "custom",
          "result_type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "interval"
            }
          }
        }
      },
      "comparison_operators": {
        "_eq": {
          "type": "equal"
        },
        "_gt": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "time"
          }
        },
        "_gte": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "time"
          }
        },
        "_in": {
          "type": "in"
        },
        "_lt": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "time"
          }
        },
        "_lte": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "time"
          }
        },
        "_neq": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "time"
          }
        }
      },
      "extraction_functions": {}
    },
    "timestamp": {
      "representation": {
        "type": "timestamp"
      },
      "aggregate_functions": {
        "max": {
          "type": "max"
        },
        "min": {
          "type": "min"
        }
      },
      "comparison_operators": {
        "_eq": {
          "type": "equal"
        },
        "_gt": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "timestamp"
          }
        },
        "_gte": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "timestamp"
          }
        },
        "_in": {
          "type": "in"
        },
        "_lt": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "timestamp"
          }
        },
        "_lte": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "timestamp"
          }
        },
        "_neq": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "timestamp"
          }
        }
      },
      "extraction_functions": {}
    },
    "timestamptz": {
      "representation": {
        "type": "timestamptz"
      },
      "aggregate_functions": {
        "max": {
          "type": "max"
        },
        "min": {
          "type": "min"
        }
      },
      "comparison_operators": {
        "_eq": {
          "type": "equal"
        },
        "_gt": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "timestamptz"
          }
        },
        "_gte": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "timestamptz"
          }
        },
        "_in": {
          "type": "in"
        },
        "_lt": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "timestamptz"
          }
        },
        "_lte": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "timestamptz"
          }
        },
        "_neq": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "timestamptz"
          }
        }
      },
      "extraction_functions": {}
    },
    "timetz": {
      "representation": {
        "type": "string"
      },
      "aggregate_functions": {
        "max": {
          "type": "max"
        },
        "min": {
          "type": "min"
        }
      },
      "comparison_operators": {
        "_eq": {
          "type": "equal"
        },
        "_gt": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "timetz"
          }
        },
        "_gte": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "timetz"
          }
        },
        "_in": {
          "type": "in"
        },
        "_lt": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "timetz"
          }
        },
        "_lte": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "timetz"
          }
        },
        "_neq": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "timetz"
          }
        }
      },
      "extraction_functions": {}
    },
    "uuid": {
      "representation": {
        "type": "uuid"
      },
      "aggregate_functions": {},
      "comparison_operators": {
        "_eq": {
          "type": "equal"
        },
        "_gt": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "uuid"
          }
        },
        "_gte": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "uuid"
          }
        },
        "_in": {
          "type": "in"
        },
        "_lt": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "uuid"
          }
        },
        "_lte": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "uuid"
          }
        },
        "_neq": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "uuid"
          }
        }
      },
      "extraction_functions": {}
    },
    "varchar": {
      "representation": {
        "type": "string"
      },
      "aggregate_functions": {
        "max": {
          "type": "max"
        },
        "min": {
          "type": "min"
        }
      },
      "comparison_operators": {
        "_eq": {
          "type": "equal"
        },
        "_gt": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "varchar"
          }
        },
        "_gte": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "varchar"
          }
        },
        "_ilike": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "varchar"
          }
        },
        "_in": {
          "type": "in"
        },
        "_iregex": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "varchar"
          }
        },
        "_like": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "varchar"
          }
        },
        "_lt": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "varchar"
          }
        },
        "_lte": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "varchar"
          }
        },
        "_neq": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "varchar"
          }
        },
        "_nilike": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "varchar"
          }
        },
        "_niregex": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "varchar"
          }
        },
        "_nlike": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "varchar"
          }
        },
        "_nregex": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "varchar"
          }
        },
        "_regex": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "varchar"
          }
        },
        "st_coveredby": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "varchar"
          }
        },
        "st_covers": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "varchar"
          }
        },
        "st_intersects": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "varchar"
          }
        },
        "st_relatematch": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "varchar"
          }
        },
        "starts_with": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "varchar"
          }
        },
        "ts_match_tt": {
          "type": "custom",
          "argument_type": {
            "type": "named",
            "name": "varchar"
          }
        }
      },
      "extraction_functions": {}
    }
  },
  "object_types": {
    "Album": {
      "description": "The record of all albums",
      "fields": {
        "AlbumId": {
          "description": "The identifier of an album",
          "type": {
            "type": "named",
            "name": "int4"
          }
        },
        "ArtistId": {
          "description": "The id of the artist that authored the album",
          "type": {
            "type": "named",
            "name": "int4"
          }
        },
        "Title": {
          "description": "The title of an album",
          "type": {
            "type": "named",
            "name": "varchar"
          }
        }
      },
      "foreign_keys": {
        "FK_AlbumArtistId": {
          "column_mapping": {
            "ArtistId": [
              "ArtistId"
            ]
          },
          "foreign_collection": "Artist"
        }
      }
    },
    "Artist": {
      "description": "The record of all artists",
      "fields": {
        "ArtistId": {
          "description": "The identifier of an artist",
          "type": {
            "type": "named",
            "name": "int4"
          }
        },
        "Name": {
          "description": "The name of an artist",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "varchar"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "Customer": {
      "description": "The record of all customers",
      "fields": {
        "Address": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "varchar"
            }
          }
        },
        "City": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "varchar"
            }
          }
        },
        "Company": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "varchar"
            }
          }
        },
        "Country": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "varchar"
            }
          }
        },
        "CustomerId": {
          "description": "The identifier of customer",
          "type": {
            "type": "named",
            "name": "int4"
          }
        },
        "Email": {
          "type": {
            "type": "named",
            "name": "varchar"
          }
        },
        "Fax": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "varchar"
            }
          }
        },
        "FirstName": {
          "description": "The first name of a customer",
          "type": {
            "type": "named",
            "name": "varchar"
          }
        },
        "LastName": {
          "description": "The last name of a customer",
          "type": {
            "type": "named",
            "name": "varchar"
          }
        },
        "Phone": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "varchar"
            }
          }
        },
        "PostalCode": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "varchar"
            }
          }
        },
        "State": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "varchar"
            }
          }
        },
        "SupportRepId": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "int4"
            }
          }
        }
      },
      "foreign_keys": {
        "FK_CustomerSupportRepId": {
          "column_mapping": {
            "SupportRepId": [
              "EmployeeId"
            ]
          },
          "foreign_collection": "Employee"
        }
      }
    },
    "Employee": {
      "fields": {
        "Address": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "varchar"
            }
          }
        },
        "BirthDate": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "timestamp"
            }
          }
        },
        "City": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "varchar"
            }
          }
        },
        "Country": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "varchar"
            }
          }
        },
        "Email": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "varchar"
            }
          }
        },
        "EmployeeId": {
          "type": {
            "type": "named",
            "name": "int4"
          }
        },
        "Fax": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "varchar"
            }
          }
        },
        "FirstName": {
          "type": {
            "type": "named",
            "name": "varchar"
          }
        },
        "HireDate": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "timestamp"
            }
          }
        },
        "LastName": {
          "type": {
            "type": "named",
            "name": "varchar"
          }
        },
        "Phone": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "varchar"
            }
          }
        },
        "PostalCode": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "varchar"
            }
          }
        },
        "ReportsTo": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "int4"
            }
          }
        },
        "State": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "varchar"
            }
          }
        },
        "Title": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "varchar"
            }
          }
        }
      },
      "foreign_keys": {
        "FK_EmployeeReportsTo": {
          "column_mapping": {
            "ReportsTo": [
              "EmployeeId"
            ]
          },
          "foreign_collection": "Employee"
        }
      }
    },
    "Genre": {
      "fields": {
        "GenreId": {
          "type": {
            "type": "named",
            "name": "int4"
          }
        },
        "Name": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "varchar"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "Invoice": {
      "fields": {
        "BillingAddress": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "varchar"
            }
          }
        },
        "BillingCity": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "varchar"
            }
          }
        },
        "BillingCountry": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "varchar"
            }
          }
        },
        "BillingPostalCode": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "varchar"
            }
          }
        },
        "BillingState": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "varchar"
            }
          }
        },
        "CustomerId": {
          "type": {
            "type": "named",
            "name": "int4"
          }
        },
        "InvoiceDate": {
          "type": {
            "type": "named",
            "name": "timestamp"
          }
        },
        "InvoiceId": {
          "type": {
            "type": "named",
            "name": "int4"
          }
        },
        "Total": {
          "type": {
            "type": "named",
            "name": "numeric"
          }
        }
      },
      "foreign_keys": {
        "FK_InvoiceCustomerId": {
          "column_mapping": {
            "CustomerId": [
              "CustomerId"
            ]
          },
          "foreign_collection": "Customer"
        }
      }
    },
    "InvoiceLine": {
      "fields": {
        "InvoiceId": {
          "type": {
            "type": "named",
            "name": "int4"
          }
        },
        "InvoiceLineId": {
          "type": {
            "type": "named",
            "name": "int4"
          }
        },
        "Quantity": {
          "type": {
            "type": "named",
            "name": "int4"
          }
        },
        "TrackId": {
          "type": {
            "type": "named",
            "name": "int4"
          }
        },
        "UnitPrice": {
          "type": {
            "type": "named",
            "name": "numeric"
          }
        }
      },
      "foreign_keys": {
        "FK_InvoiceLineInvoiceId": {
          "column_mapping": {
            "InvoiceId": [
              "InvoiceId"
            ]
          },
          "foreign_collection": "Invoice"
        },
        "FK_InvoiceLineTrackId": {
          "column_mapping": {
            "TrackId": [
              "TrackId"
            ]
          },
          "foreign_collection": "Track"
        }
      }
    },
    "MediaType": {
      "fields": {
        "MediaTypeId": {
          "type": {
            "type": "named",
            "name": "int4"
          }
        },
        "Name": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "varchar"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "Playlist": {
      "fields": {
        "Name": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "varchar"
            }
          }
        },
        "PlaylistId": {
          "type": {
            "type": "named",
            "name": "int4"
          }
        }
      },
      "foreign_keys": {}
    },
    "PlaylistTrack": {
      "fields": {
        "PlaylistId": {
          "type": {
            "type": "named",
            "name": "int4"
          }
        },
        "TrackId": {
          "type": {
            "type": "named",
            "name": "int4"
          }
        }
      },
      "foreign_keys": {
        "FK_PlaylistTrackPlaylistId": {
          "column_mapping": {
            "PlaylistId": [
              "PlaylistId"
            ]
          },
          "foreign_collection": "Playlist"
        },
        "FK_PlaylistTrackTrackId": {
          "column_mapping": {
            "TrackId": [
              "TrackId"
            ]
          },
          "foreign_collection": "Track"
        }
      }
    },
    "Track": {
      "fields": {
        "AlbumId": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "int4"
            }
          }
        },
        "Bytes": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "int4"
            }
          }
        },
        "Composer": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "varchar"
            }
          }
        },
        "GenreId": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "int4"
            }
          }
        },
        "MediaTypeId": {
          "type": {
            "type": "named",
            "name": "int4"
          }
        },
        "Milliseconds": {
          "type": {
            "type": "named",
            "name": "int4"
          }
        },
        "Name": {
          "type": {
            "type": "named",
            "name": "varchar"
          }
        },
        "TrackId": {
          "type": {
            "type": "named",
            "name": "int4"
          }
        },
        "UnitPrice": {
          "type": {
            "type": "named",
            "name": "numeric"
          }
        }
      },
      "foreign_keys": {
        "FK_TrackAlbumId": {
          "column_mapping": {
            "AlbumId": [
              "AlbumId"
            ]
          },
          "foreign_collection": "Album"
        },
        "FK_TrackGenreId": {
          "column_mapping": {
            "GenreId": [
              "GenreId"
            ]
          },
          "foreign_collection": "Genre"
        },
        "FK_TrackMediaTypeId": {
          "column_mapping": {
            "MediaTypeId": [
              "MediaTypeId"
            ]
          },
          "foreign_collection": "MediaType"
        }
      }
    },
    "address_identity_function": {
      "description": "A native query used to test support for composite types",
      "fields": {
        "result": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "person_address"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "album_by_title": {
      "fields": {
        "AlbumId": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "int4"
            }
          }
        },
        "ArtistId": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "int4"
            }
          }
        },
        "Title": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "varchar"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "array_reverse": {
      "description": "A native query used to test support for arrays as inputs",
      "fields": {
        "reversed": {
          "description": "The reversed array",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "array",
              "element_type": {
                "type": "nullable",
                "underlying_type": {
                  "type": "named",
                  "name": "varchar"
                }
              }
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "array_series": {
      "description": "A native query used to test support for arrays",
      "fields": {
        "series": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "array",
              "element_type": {
                "type": "nullable",
                "underlying_type": {
                  "type": "named",
                  "name": "int4"
                }
              }
            }
          }
        },
        "three": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "int4"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "artist": {
      "fields": {
        "ArtistId": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "int4"
            }
          }
        },
        "Name": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "varchar"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "artist_below_id": {
      "fields": {
        "id": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "int4"
            }
          }
        },
        "name": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "varchar"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "chara": {
      "fields": {
        "name": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "text"
            }
          }
        },
        "popularity": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "int8"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "characters": {
      "fields": {
        "members": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "array",
              "element_type": {
                "type": "nullable",
                "underlying_type": {
                  "type": "named",
                  "name": "chara"
                }
              }
            }
          }
        },
        "name": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "text"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "committee": {
      "fields": {
        "members": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "array",
              "element_type": {
                "type": "nullable",
                "underlying_type": {
                  "type": "named",
                  "name": "person_name"
                }
              }
            }
          }
        },
        "name": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "text"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "count_elements": {
      "description": "A native query used to test support array-valued variables",
      "fields": {
        "result": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "int4"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "custom_defaults": {
      "fields": {
        "birthday": {
          "type": {
            "type": "named",
            "name": "date"
          }
        },
        "height_cm": {
          "type": {
            "type": "named",
            "name": "numeric"
          }
        },
        "height_in": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "numeric"
            }
          }
        },
        "id": {
          "type": {
            "type": "named",
            "name": "int8"
          }
        },
        "name": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "text"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "custom_dog": {
      "fields": {
        "adopter_name": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "text"
            }
          }
        },
        "birthday": {
          "type": {
            "type": "named",
            "name": "date"
          }
        },
        "height_cm": {
          "type": {
            "type": "named",
            "name": "numeric"
          }
        },
        "height_in": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "numeric"
            }
          }
        },
        "id": {
          "type": {
            "type": "named",
            "name": "int8"
          }
        },
        "name": {
          "type": {
            "type": "named",
            "name": "text"
          }
        }
      },
      "foreign_keys": {}
    },
    "custom_test_cidr": {
      "fields": {
        "ip": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "cidr"
            }
          }
        },
        "service": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "text"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "deck_of_cards": {
      "fields": {
        "pips": {
          "type": {
            "type": "named",
            "name": "int2"
          }
        },
        "suit": {
          "type": {
            "type": "named",
            "name": "card_suit"
          }
        }
      },
      "foreign_keys": {}
    },
    "delete_Album_by_AlbumId_response": {
      "description": "Responses from the 'delete_Album_by_AlbumId' procedure",
      "fields": {
        "affected_rows": {
          "description": "The number of rows affected by the mutation",
          "type": {
            "type": "named",
            "name": "int4"
          }
        },
        "returning": {
          "description": "Data from rows affected by the mutation",
          "type": {
            "type": "array",
            "element_type": {
              "type": "named",
              "name": "Album"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "delete_Artist_by_ArtistId_response": {
      "description": "Responses from the 'delete_Artist_by_ArtistId' procedure",
      "fields": {
        "affected_rows": {
          "description": "The number of rows affected by the mutation",
          "type": {
            "type": "named",
            "name": "int4"
          }
        },
        "returning": {
          "description": "Data from rows affected by the mutation",
          "type": {
            "type": "array",
            "element_type": {
              "type": "named",
              "name": "Artist"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "delete_Customer_by_CustomerId_response": {
      "description": "Responses from the 'delete_Customer_by_CustomerId' procedure",
      "fields": {
        "affected_rows": {
          "description": "The number of rows affected by the mutation",
          "type": {
            "type": "named",
            "name": "int4"
          }
        },
        "returning": {
          "description": "Data from rows affected by the mutation",
          "type": {
            "type": "array",
            "element_type": {
              "type": "named",
              "name": "Customer"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "delete_Employee_by_EmployeeId_response": {
      "description": "Responses from the 'delete_Employee_by_EmployeeId' procedure",
      "fields": {
        "affected_rows": {
          "description": "The number of rows affected by the mutation",
          "type": {
            "type": "named",
            "name": "int4"
          }
        },
        "returning": {
          "description": "Data from rows affected by the mutation",
          "type": {
            "type": "array",
            "element_type": {
              "type": "named",
              "name": "Employee"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "delete_Genre_by_GenreId_response": {
      "description": "Responses from the 'delete_Genre_by_GenreId' procedure",
      "fields": {
        "affected_rows": {
          "description": "The number of rows affected by the mutation",
          "type": {
            "type": "named",
            "name": "int4"
          }
        },
        "returning": {
          "description": "Data from rows affected by the mutation",
          "type": {
            "type": "array",
            "element_type": {
              "type": "named",
              "name": "Genre"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "delete_InvoiceLine_by_InvoiceLineId_response": {
      "description": "Responses from the 'delete_InvoiceLine_by_InvoiceLineId' procedure",
      "fields": {
        "affected_rows": {
          "description": "The number of rows affected by the mutation",
          "type": {
            "type": "named",
            "name": "int4"
          }
        },
        "returning": {
          "description": "Data from rows affected by the mutation",
          "type": {
            "type": "array",
            "element_type": {
              "type": "named",
              "name": "InvoiceLine"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "delete_Invoice_by_InvoiceId_response": {
      "description": "Responses from the 'delete_Invoice_by_InvoiceId' procedure",
      "fields": {
        "affected_rows": {
          "description": "The number of rows affected by the mutation",
          "type": {
            "type": "named",
            "name": "int4"
          }
        },
        "returning": {
          "description": "Data from rows affected by the mutation",
          "type": {
            "type": "array",
            "element_type": {
              "type": "named",
              "name": "Invoice"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "delete_MediaType_by_MediaTypeId_response": {
      "description": "Responses from the 'delete_MediaType_by_MediaTypeId' procedure",
      "fields": {
        "affected_rows": {
          "description": "The number of rows affected by the mutation",
          "type": {
            "type": "named",
            "name": "int4"
          }
        },
        "returning": {
          "description": "Data from rows affected by the mutation",
          "type": {
            "type": "array",
            "element_type": {
              "type": "named",
              "name": "MediaType"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "delete_PlaylistTrack_by_PlaylistId_and_TrackId_response": {
      "description": "Responses from the 'delete_PlaylistTrack_by_PlaylistId_and_TrackId' procedure",
      "fields": {
        "affected_rows": {
          "description": "The number of rows affected by the mutation",
          "type": {
            "type": "named",
            "name": "int4"
          }
        },
        "returning": {
          "description": "Data from rows affected by the mutation",
          "type": {
            "type": "array",
            "element_type": {
              "type": "named",
              "name": "PlaylistTrack"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "delete_Playlist_by_PlaylistId_response": {
      "description": "Responses from the 'delete_Playlist_by_PlaylistId' procedure",
      "fields": {
        "affected_rows": {
          "description": "The number of rows affected by the mutation",
          "type": {
            "type": "named",
            "name": "int4"
          }
        },
        "returning": {
          "description": "Data from rows affected by the mutation",
          "type": {
            "type": "array",
            "element_type": {
              "type": "named",
              "name": "Playlist"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "delete_Track_by_TrackId_response": {
      "description": "Responses from the 'delete_Track_by_TrackId' procedure",
      "fields": {
        "affected_rows": {
          "description": "The number of rows affected by the mutation",
          "type": {
            "type": "named",
            "name": "int4"
          }
        },
        "returning": {
          "description": "Data from rows affected by the mutation",
          "type": {
            "type": "array",
            "element_type": {
              "type": "named",
              "name": "Track"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "delete_custom_defaults_by_id_response": {
      "description": "Responses from the 'delete_custom_defaults_by_id' procedure",
      "fields": {
        "affected_rows": {
          "description": "The number of rows affected by the mutation",
          "type": {
            "type": "named",
            "name": "int4"
          }
        },
        "returning": {
          "description": "Data from rows affected by the mutation",
          "type": {
            "type": "array",
            "element_type": {
              "type": "named",
              "name": "custom_defaults"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "delete_custom_dog_by_id_response": {
      "description": "Responses from the 'delete_custom_dog_by_id' procedure",
      "fields": {
        "affected_rows": {
          "description": "The number of rows affected by the mutation",
          "type": {
            "type": "named",
            "name": "int4"
          }
        },
        "returning": {
          "description": "Data from rows affected by the mutation",
          "type": {
            "type": "array",
            "element_type": {
              "type": "named",
              "name": "custom_dog"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "delete_institution_institution_by_id_response": {
      "description": "Responses from the 'delete_institution_institution_by_id' procedure",
      "fields": {
        "affected_rows": {
          "description": "The number of rows affected by the mutation",
          "type": {
            "type": "named",
            "name": "int4"
          }
        },
        "returning": {
          "description": "Data from rows affected by the mutation",
          "type": {
            "type": "array",
            "element_type": {
              "type": "named",
              "name": "institution_institution"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "delete_playlist_track": {
      "fields": {
        "PlaylistId": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "int4"
            }
          }
        },
        "TrackId": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "int4"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "delete_playlist_track_response": {
      "description": "Responses from the 'delete_playlist_track' procedure",
      "fields": {
        "affected_rows": {
          "description": "The number of rows affected by the mutation",
          "type": {
            "type": "named",
            "name": "int4"
          }
        },
        "returning": {
          "description": "Data from rows affected by the mutation",
          "type": {
            "type": "array",
            "element_type": {
              "type": "named",
              "name": "delete_playlist_track"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "delete_spatial_ref_sys_by_srid_response": {
      "description": "Responses from the 'delete_spatial_ref_sys_by_srid' procedure",
      "fields": {
        "affected_rows": {
          "description": "The number of rows affected by the mutation",
          "type": {
            "type": "named",
            "name": "int4"
          }
        },
        "returning": {
          "description": "Data from rows affected by the mutation",
          "type": {
            "type": "array",
            "element_type": {
              "type": "named",
              "name": "spatial_ref_sys"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "delete_topology_layer_by_feature_column_and_schema_name_and_table_name_response": {
      "description": "Responses from the 'delete_topology_layer_by_feature_column_and_schema_name_and_table_name' procedure",
      "fields": {
        "affected_rows": {
          "description": "The number of rows affected by the mutation",
          "type": {
            "type": "named",
            "name": "int4"
          }
        },
        "returning": {
          "description": "Data from rows affected by the mutation",
          "type": {
            "type": "array",
            "element_type": {
              "type": "named",
              "name": "topology_layer"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "delete_topology_layer_by_layer_id_and_topology_id_response": {
      "description": "Responses from the 'delete_topology_layer_by_layer_id_and_topology_id' procedure",
      "fields": {
        "affected_rows": {
          "description": "The number of rows affected by the mutation",
          "type": {
            "type": "named",
            "name": "int4"
          }
        },
        "returning": {
          "description": "Data from rows affected by the mutation",
          "type": {
            "type": "array",
            "element_type": {
              "type": "named",
              "name": "topology_layer"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "delete_topology_topology_by_id_response": {
      "description": "Responses from the 'delete_topology_topology_by_id' procedure",
      "fields": {
        "affected_rows": {
          "description": "The number of rows affected by the mutation",
          "type": {
            "type": "named",
            "name": "int4"
          }
        },
        "returning": {
          "description": "Data from rows affected by the mutation",
          "type": {
            "type": "array",
            "element_type": {
              "type": "named",
              "name": "topology_topology"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "delete_topology_topology_by_name_response": {
      "description": "Responses from the 'delete_topology_topology_by_name' procedure",
      "fields": {
        "affected_rows": {
          "description": "The number of rows affected by the mutation",
          "type": {
            "type": "named",
            "name": "int4"
          }
        },
        "returning": {
          "description": "Data from rows affected by the mutation",
          "type": {
            "type": "array",
            "element_type": {
              "type": "named",
              "name": "topology_topology"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "discoverable_types": {
      "fields": {
        "only_occurring_here1": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "int8"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "discoverable_types_root_occurrence": {
      "fields": {
        "col": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "discoverable_types"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "even_numbers": {
      "fields": {
        "the_number": {
          "type": {
            "type": "named",
            "name": "even_number"
          }
        }
      },
      "foreign_keys": {}
    },
    "group_leader": {
      "fields": {
        "characters": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "characters"
            }
          }
        },
        "id": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "int4"
            }
          }
        },
        "name": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "chara"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "insert_Album_object": {
      "fields": {
        "AlbumId": {
          "description": "The identifier of an album",
          "type": {
            "type": "named",
            "name": "int4"
          }
        },
        "ArtistId": {
          "description": "The id of the artist that authored the album",
          "type": {
            "type": "named",
            "name": "int4"
          }
        },
        "Title": {
          "description": "The title of an album",
          "type": {
            "type": "named",
            "name": "varchar"
          }
        }
      },
      "foreign_keys": {}
    },
    "insert_Album_response": {
      "description": "Responses from the 'insert_Album' procedure",
      "fields": {
        "affected_rows": {
          "description": "The number of rows affected by the mutation",
          "type": {
            "type": "named",
            "name": "int4"
          }
        },
        "returning": {
          "description": "Data from rows affected by the mutation",
          "type": {
            "type": "array",
            "element_type": {
              "type": "named",
              "name": "Album"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "insert_Artist_object": {
      "fields": {
        "ArtistId": {
          "description": "The identifier of an artist",
          "type": {
            "type": "named",
            "name": "int4"
          }
        },
        "Name": {
          "description": "The name of an artist",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "varchar"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "insert_Artist_response": {
      "description": "Responses from the 'insert_Artist' procedure",
      "fields": {
        "affected_rows": {
          "description": "The number of rows affected by the mutation",
          "type": {
            "type": "named",
            "name": "int4"
          }
        },
        "returning": {
          "description": "Data from rows affected by the mutation",
          "type": {
            "type": "array",
            "element_type": {
              "type": "named",
              "name": "Artist"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "insert_Customer_object": {
      "fields": {
        "Address": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "varchar"
            }
          }
        },
        "City": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "varchar"
            }
          }
        },
        "Company": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "varchar"
            }
          }
        },
        "Country": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "varchar"
            }
          }
        },
        "CustomerId": {
          "description": "The identifier of customer",
          "type": {
            "type": "named",
            "name": "int4"
          }
        },
        "Email": {
          "type": {
            "type": "named",
            "name": "varchar"
          }
        },
        "Fax": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "varchar"
            }
          }
        },
        "FirstName": {
          "description": "The first name of a customer",
          "type": {
            "type": "named",
            "name": "varchar"
          }
        },
        "LastName": {
          "description": "The last name of a customer",
          "type": {
            "type": "named",
            "name": "varchar"
          }
        },
        "Phone": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "varchar"
            }
          }
        },
        "PostalCode": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "varchar"
            }
          }
        },
        "State": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "varchar"
            }
          }
        },
        "SupportRepId": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "int4"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "insert_Customer_response": {
      "description": "Responses from the 'insert_Customer' procedure",
      "fields": {
        "affected_rows": {
          "description": "The number of rows affected by the mutation",
          "type": {
            "type": "named",
            "name": "int4"
          }
        },
        "returning": {
          "description": "Data from rows affected by the mutation",
          "type": {
            "type": "array",
            "element_type": {
              "type": "named",
              "name": "Customer"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "insert_Employee_object": {
      "fields": {
        "Address": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "varchar"
            }
          }
        },
        "BirthDate": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "timestamp"
            }
          }
        },
        "City": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "varchar"
            }
          }
        },
        "Country": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "varchar"
            }
          }
        },
        "Email": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "varchar"
            }
          }
        },
        "EmployeeId": {
          "type": {
            "type": "named",
            "name": "int4"
          }
        },
        "Fax": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "varchar"
            }
          }
        },
        "FirstName": {
          "type": {
            "type": "named",
            "name": "varchar"
          }
        },
        "HireDate": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "timestamp"
            }
          }
        },
        "LastName": {
          "type": {
            "type": "named",
            "name": "varchar"
          }
        },
        "Phone": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "varchar"
            }
          }
        },
        "PostalCode": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "varchar"
            }
          }
        },
        "ReportsTo": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "int4"
            }
          }
        },
        "State": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "varchar"
            }
          }
        },
        "Title": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "varchar"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "insert_Employee_response": {
      "description": "Responses from the 'insert_Employee' procedure",
      "fields": {
        "affected_rows": {
          "description": "The number of rows affected by the mutation",
          "type": {
            "type": "named",
            "name": "int4"
          }
        },
        "returning": {
          "description": "Data from rows affected by the mutation",
          "type": {
            "type": "array",
            "element_type": {
              "type": "named",
              "name": "Employee"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "insert_Genre_object": {
      "fields": {
        "GenreId": {
          "type": {
            "type": "named",
            "name": "int4"
          }
        },
        "Name": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "varchar"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "insert_Genre_response": {
      "description": "Responses from the 'insert_Genre' procedure",
      "fields": {
        "affected_rows": {
          "description": "The number of rows affected by the mutation",
          "type": {
            "type": "named",
            "name": "int4"
          }
        },
        "returning": {
          "description": "Data from rows affected by the mutation",
          "type": {
            "type": "array",
            "element_type": {
              "type": "named",
              "name": "Genre"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "insert_InvoiceLine_object": {
      "fields": {
        "InvoiceId": {
          "type": {
            "type": "named",
            "name": "int4"
          }
        },
        "InvoiceLineId": {
          "type": {
            "type": "named",
            "name": "int4"
          }
        },
        "Quantity": {
          "type": {
            "type": "named",
            "name": "int4"
          }
        },
        "TrackId": {
          "type": {
            "type": "named",
            "name": "int4"
          }
        },
        "UnitPrice": {
          "type": {
            "type": "named",
            "name": "numeric"
          }
        }
      },
      "foreign_keys": {}
    },
    "insert_InvoiceLine_response": {
      "description": "Responses from the 'insert_InvoiceLine' procedure",
      "fields": {
        "affected_rows": {
          "description": "The number of rows affected by the mutation",
          "type": {
            "type": "named",
            "name": "int4"
          }
        },
        "returning": {
          "description": "Data from rows affected by the mutation",
          "type": {
            "type": "array",
            "element_type": {
              "type": "named",
              "name": "InvoiceLine"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "insert_Invoice_object": {
      "fields": {
        "BillingAddress": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "varchar"
            }
          }
        },
        "BillingCity": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "varchar"
            }
          }
        },
        "BillingCountry": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "varchar"
            }
          }
        },
        "BillingPostalCode": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "varchar"
            }
          }
        },
        "BillingState": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "varchar"
            }
          }
        },
        "CustomerId": {
          "type": {
            "type": "named",
            "name": "int4"
          }
        },
        "InvoiceDate": {
          "type": {
            "type": "named",
            "name": "timestamp"
          }
        },
        "InvoiceId": {
          "type": {
            "type": "named",
            "name": "int4"
          }
        },
        "Total": {
          "type": {
            "type": "named",
            "name": "numeric"
          }
        }
      },
      "foreign_keys": {}
    },
    "insert_Invoice_response": {
      "description": "Responses from the 'insert_Invoice' procedure",
      "fields": {
        "affected_rows": {
          "description": "The number of rows affected by the mutation",
          "type": {
            "type": "named",
            "name": "int4"
          }
        },
        "returning": {
          "description": "Data from rows affected by the mutation",
          "type": {
            "type": "array",
            "element_type": {
              "type": "named",
              "name": "Invoice"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "insert_MediaType_object": {
      "fields": {
        "MediaTypeId": {
          "type": {
            "type": "named",
            "name": "int4"
          }
        },
        "Name": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "varchar"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "insert_MediaType_response": {
      "description": "Responses from the 'insert_MediaType' procedure",
      "fields": {
        "affected_rows": {
          "description": "The number of rows affected by the mutation",
          "type": {
            "type": "named",
            "name": "int4"
          }
        },
        "returning": {
          "description": "Data from rows affected by the mutation",
          "type": {
            "type": "array",
            "element_type": {
              "type": "named",
              "name": "MediaType"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "insert_PlaylistTrack_object": {
      "fields": {
        "PlaylistId": {
          "type": {
            "type": "named",
            "name": "int4"
          }
        },
        "TrackId": {
          "type": {
            "type": "named",
            "name": "int4"
          }
        }
      },
      "foreign_keys": {}
    },
    "insert_PlaylistTrack_response": {
      "description": "Responses from the 'insert_PlaylistTrack' procedure",
      "fields": {
        "affected_rows": {
          "description": "The number of rows affected by the mutation",
          "type": {
            "type": "named",
            "name": "int4"
          }
        },
        "returning": {
          "description": "Data from rows affected by the mutation",
          "type": {
            "type": "array",
            "element_type": {
              "type": "named",
              "name": "PlaylistTrack"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "insert_Playlist_object": {
      "fields": {
        "Name": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "varchar"
            }
          }
        },
        "PlaylistId": {
          "type": {
            "type": "named",
            "name": "int4"
          }
        }
      },
      "foreign_keys": {}
    },
    "insert_Playlist_response": {
      "description": "Responses from the 'insert_Playlist' procedure",
      "fields": {
        "affected_rows": {
          "description": "The number of rows affected by the mutation",
          "type": {
            "type": "named",
            "name": "int4"
          }
        },
        "returning": {
          "description": "Data from rows affected by the mutation",
          "type": {
            "type": "array",
            "element_type": {
              "type": "named",
              "name": "Playlist"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "insert_Track_object": {
      "fields": {
        "AlbumId": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "int4"
            }
          }
        },
        "Bytes": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "int4"
            }
          }
        },
        "Composer": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "varchar"
            }
          }
        },
        "GenreId": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "int4"
            }
          }
        },
        "MediaTypeId": {
          "type": {
            "type": "named",
            "name": "int4"
          }
        },
        "Milliseconds": {
          "type": {
            "type": "named",
            "name": "int4"
          }
        },
        "Name": {
          "type": {
            "type": "named",
            "name": "varchar"
          }
        },
        "TrackId": {
          "type": {
            "type": "named",
            "name": "int4"
          }
        },
        "UnitPrice": {
          "type": {
            "type": "named",
            "name": "numeric"
          }
        }
      },
      "foreign_keys": {}
    },
    "insert_Track_response": {
      "description": "Responses from the 'insert_Track' procedure",
      "fields": {
        "affected_rows": {
          "description": "The number of rows affected by the mutation",
          "type": {
            "type": "named",
            "name": "int4"
          }
        },
        "returning": {
          "description": "Data from rows affected by the mutation",
          "type": {
            "type": "array",
            "element_type": {
              "type": "named",
              "name": "Track"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "insert_album": {
      "fields": {
        "AlbumId": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "int4"
            }
          }
        },
        "ArtistId": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "int4"
            }
          }
        },
        "Title": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "varchar"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "insert_album_response": {
      "description": "Responses from the 'insert_album' procedure",
      "fields": {
        "affected_rows": {
          "description": "The number of rows affected by the mutation",
          "type": {
            "type": "named",
            "name": "int4"
          }
        },
        "returning": {
          "description": "Data from rows affected by the mutation",
          "type": {
            "type": "array",
            "element_type": {
              "type": "named",
              "name": "insert_album"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "insert_artist": {
      "fields": {
        "ArtistId": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "int4"
            }
          }
        },
        "Name": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "varchar"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "insert_artist_response": {
      "description": "Responses from the 'insert_artist' procedure",
      "fields": {
        "affected_rows": {
          "description": "The number of rows affected by the mutation",
          "type": {
            "type": "named",
            "name": "int4"
          }
        },
        "returning": {
          "description": "Data from rows affected by the mutation",
          "type": {
            "type": "array",
            "element_type": {
              "type": "named",
              "name": "insert_artist"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "insert_custom_defaults_object": {
      "fields": {
        "birthday": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "date"
            }
          }
        },
        "height_cm": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "numeric"
            }
          }
        },
        "name": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "text"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "insert_custom_defaults_response": {
      "description": "Responses from the 'insert_custom_defaults' procedure",
      "fields": {
        "affected_rows": {
          "description": "The number of rows affected by the mutation",
          "type": {
            "type": "named",
            "name": "int4"
          }
        },
        "returning": {
          "description": "Data from rows affected by the mutation",
          "type": {
            "type": "array",
            "element_type": {
              "type": "named",
              "name": "custom_defaults"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "insert_custom_dog_object": {
      "fields": {
        "adopter_name": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "text"
            }
          }
        },
        "birthday": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "date"
            }
          }
        },
        "height_cm": {
          "type": {
            "type": "named",
            "name": "numeric"
          }
        },
        "name": {
          "type": {
            "type": "named",
            "name": "text"
          }
        }
      },
      "foreign_keys": {}
    },
    "insert_custom_dog_response": {
      "description": "Responses from the 'insert_custom_dog' procedure",
      "fields": {
        "affected_rows": {
          "description": "The number of rows affected by the mutation",
          "type": {
            "type": "named",
            "name": "int4"
          }
        },
        "returning": {
          "description": "Data from rows affected by the mutation",
          "type": {
            "type": "array",
            "element_type": {
              "type": "named",
              "name": "custom_dog"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "insert_custom_test_cidr_object": {
      "fields": {
        "ip": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "cidr"
            }
          }
        },
        "service": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "text"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "insert_custom_test_cidr_response": {
      "description": "Responses from the 'insert_custom_test_cidr' procedure",
      "fields": {
        "affected_rows": {
          "description": "The number of rows affected by the mutation",
          "type": {
            "type": "named",
            "name": "int4"
          }
        },
        "returning": {
          "description": "Data from rows affected by the mutation",
          "type": {
            "type": "array",
            "element_type": {
              "type": "named",
              "name": "custom_test_cidr"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "insert_deck_of_cards_object": {
      "fields": {
        "pips": {
          "type": {
            "type": "named",
            "name": "int2"
          }
        },
        "suit": {
          "type": {
            "type": "named",
            "name": "card_suit"
          }
        }
      },
      "foreign_keys": {}
    },
    "insert_deck_of_cards_response": {
      "description": "Responses from the 'insert_deck_of_cards' procedure",
      "fields": {
        "affected_rows": {
          "description": "The number of rows affected by the mutation",
          "type": {
            "type": "named",
            "name": "int4"
          }
        },
        "returning": {
          "description": "Data from rows affected by the mutation",
          "type": {
            "type": "array",
            "element_type": {
              "type": "named",
              "name": "deck_of_cards"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "insert_discoverable_types_root_occurrence_object": {
      "fields": {
        "col": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "discoverable_types"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "insert_discoverable_types_root_occurrence_response": {
      "description": "Responses from the 'insert_discoverable_types_root_occurrence' procedure",
      "fields": {
        "affected_rows": {
          "description": "The number of rows affected by the mutation",
          "type": {
            "type": "named",
            "name": "int4"
          }
        },
        "returning": {
          "description": "Data from rows affected by the mutation",
          "type": {
            "type": "array",
            "element_type": {
              "type": "named",
              "name": "discoverable_types_root_occurrence"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "insert_even_numbers_object": {
      "fields": {
        "the_number": {
          "type": {
            "type": "named",
            "name": "even_number"
          }
        }
      },
      "foreign_keys": {}
    },
    "insert_even_numbers_response": {
      "description": "Responses from the 'insert_even_numbers' procedure",
      "fields": {
        "affected_rows": {
          "description": "The number of rows affected by the mutation",
          "type": {
            "type": "named",
            "name": "int4"
          }
        },
        "returning": {
          "description": "Data from rows affected by the mutation",
          "type": {
            "type": "array",
            "element_type": {
              "type": "named",
              "name": "even_numbers"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "insert_genre": {
      "fields": {
        "GenreId": {
          "type": {
            "type": "named",
            "name": "int4"
          }
        },
        "Name": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "varchar"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "insert_genre_response": {
      "description": "Responses from the 'insert_genre' procedure",
      "fields": {
        "affected_rows": {
          "description": "The number of rows affected by the mutation",
          "type": {
            "type": "named",
            "name": "int4"
          }
        },
        "returning": {
          "description": "Data from rows affected by the mutation",
          "type": {
            "type": "array",
            "element_type": {
              "type": "named",
              "name": "insert_genre"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "insert_group_leader_object": {
      "fields": {
        "characters": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "characters"
            }
          }
        },
        "id": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "int4"
            }
          }
        },
        "name": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "chara"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "insert_group_leader_response": {
      "description": "Responses from the 'insert_group_leader' procedure",
      "fields": {
        "affected_rows": {
          "description": "The number of rows affected by the mutation",
          "type": {
            "type": "named",
            "name": "int4"
          }
        },
        "returning": {
          "description": "Data from rows affected by the mutation",
          "type": {
            "type": "array",
            "element_type": {
              "type": "named",
              "name": "group_leader"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "insert_institution_institution_object": {
      "fields": {
        "departments": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "array",
              "element_type": {
                "type": "nullable",
                "underlying_type": {
                  "type": "named",
                  "name": "text"
                }
              }
            }
          }
        },
        "id": {
          "type": {
            "type": "named",
            "name": "int4"
          }
        },
        "location": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "institution_location"
            }
          }
        },
        "name": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "text"
            }
          }
        },
        "songs": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "institution_institution_songs"
            }
          }
        },
        "staff": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "array",
              "element_type": {
                "type": "nullable",
                "underlying_type": {
                  "type": "named",
                  "name": "institution_staff"
                }
              }
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "insert_institution_institution_response": {
      "description": "Responses from the 'insert_institution_institution' procedure",
      "fields": {
        "affected_rows": {
          "description": "The number of rows affected by the mutation",
          "type": {
            "type": "named",
            "name": "int4"
          }
        },
        "returning": {
          "description": "Data from rows affected by the mutation",
          "type": {
            "type": "array",
            "element_type": {
              "type": "named",
              "name": "institution_institution"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "insert_phone_numbers_object": {
      "fields": {
        "the_number": {
          "type": {
            "type": "named",
            "name": "Phone"
          }
        }
      },
      "foreign_keys": {}
    },
    "insert_phone_numbers_response": {
      "description": "Responses from the 'insert_phone_numbers' procedure",
      "fields": {
        "affected_rows": {
          "description": "The number of rows affected by the mutation",
          "type": {
            "type": "named",
            "name": "int4"
          }
        },
        "returning": {
          "description": "Data from rows affected by the mutation",
          "type": {
            "type": "array",
            "element_type": {
              "type": "named",
              "name": "phone_numbers"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "insert_spatial_ref_sys_object": {
      "fields": {
        "auth_name": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "varchar"
            }
          }
        },
        "auth_srid": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "int4"
            }
          }
        },
        "proj4text": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "varchar"
            }
          }
        },
        "srid": {
          "type": {
            "type": "named",
            "name": "int4"
          }
        },
        "srtext": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "varchar"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "insert_spatial_ref_sys_response": {
      "description": "Responses from the 'insert_spatial_ref_sys' procedure",
      "fields": {
        "affected_rows": {
          "description": "The number of rows affected by the mutation",
          "type": {
            "type": "named",
            "name": "int4"
          }
        },
        "returning": {
          "description": "Data from rows affected by the mutation",
          "type": {
            "type": "array",
            "element_type": {
              "type": "named",
              "name": "spatial_ref_sys"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "insert_text_table_object": {
      "fields": {
        "content": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "text"
            }
          }
        },
        "id": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "int4"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "insert_text_table_response": {
      "description": "Responses from the 'insert_text_table' procedure",
      "fields": {
        "affected_rows": {
          "description": "The number of rows affected by the mutation",
          "type": {
            "type": "named",
            "name": "int4"
          }
        },
        "returning": {
          "description": "Data from rows affected by the mutation",
          "type": {
            "type": "array",
            "element_type": {
              "type": "named",
              "name": "text_table"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "insert_topology_layer_object": {
      "fields": {
        "child_id": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "int4"
            }
          }
        },
        "feature_column": {
          "type": {
            "type": "named",
            "name": "varchar"
          }
        },
        "feature_type": {
          "type": {
            "type": "named",
            "name": "int4"
          }
        },
        "layer_id": {
          "type": {
            "type": "named",
            "name": "int4"
          }
        },
        "level": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "int4"
            }
          }
        },
        "schema_name": {
          "type": {
            "type": "named",
            "name": "varchar"
          }
        },
        "table_name": {
          "type": {
            "type": "named",
            "name": "varchar"
          }
        },
        "topology_id": {
          "type": {
            "type": "named",
            "name": "int4"
          }
        }
      },
      "foreign_keys": {}
    },
    "insert_topology_layer_response": {
      "description": "Responses from the 'insert_topology_layer' procedure",
      "fields": {
        "affected_rows": {
          "description": "The number of rows affected by the mutation",
          "type": {
            "type": "named",
            "name": "int4"
          }
        },
        "returning": {
          "description": "Data from rows affected by the mutation",
          "type": {
            "type": "array",
            "element_type": {
              "type": "named",
              "name": "topology_layer"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "insert_topology_topology_object": {
      "fields": {
        "hasz": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "bool"
            }
          }
        },
        "id": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "int4"
            }
          }
        },
        "name": {
          "type": {
            "type": "named",
            "name": "varchar"
          }
        },
        "precision": {
          "type": {
            "type": "named",
            "name": "float8"
          }
        },
        "srid": {
          "type": {
            "type": "named",
            "name": "int4"
          }
        }
      },
      "foreign_keys": {}
    },
    "insert_topology_topology_response": {
      "description": "Responses from the 'insert_topology_topology' procedure",
      "fields": {
        "affected_rows": {
          "description": "The number of rows affected by the mutation",
          "type": {
            "type": "named",
            "name": "int4"
          }
        },
        "returning": {
          "description": "Data from rows affected by the mutation",
          "type": {
            "type": "array",
            "element_type": {
              "type": "named",
              "name": "topology_topology"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "institution_country": {
      "fields": {
        "continent": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "text"
            }
          }
        },
        "name": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "text"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "institution_institution": {
      "fields": {
        "departments": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "array",
              "element_type": {
                "type": "nullable",
                "underlying_type": {
                  "type": "named",
                  "name": "text"
                }
              }
            }
          }
        },
        "id": {
          "type": {
            "type": "named",
            "name": "int4"
          }
        },
        "location": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "institution_location"
            }
          }
        },
        "name": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "text"
            }
          }
        },
        "songs": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "institution_institution_songs"
            }
          }
        },
        "staff": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "array",
              "element_type": {
                "type": "nullable",
                "underlying_type": {
                  "type": "named",
                  "name": "institution_staff"
                }
              }
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "institution_institution_songs": {
      "fields": {
        "primary_anthem_track_id": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "int4"
            }
          }
        },
        "secondary_anthem_track_id": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "int4"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "institution_location": {
      "fields": {
        "campuses": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "array",
              "element_type": {
                "type": "nullable",
                "underlying_type": {
                  "type": "named",
                  "name": "text"
                }
              }
            }
          }
        },
        "city": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "text"
            }
          }
        },
        "country": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "institution_country"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "institution_staff": {
      "fields": {
        "favourite_artist_id": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "int4"
            }
          }
        },
        "first_name": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "text"
            }
          }
        },
        "last_name": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "text"
            }
          }
        },
        "specialities": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "array",
              "element_type": {
                "type": "nullable",
                "underlying_type": {
                  "type": "named",
                  "name": "text"
                }
              }
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "make_person": {
      "description": "A native query used to test support for composite types",
      "fields": {
        "result": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "person"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "organization": {
      "fields": {
        "committees": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "array",
              "element_type": {
                "type": "nullable",
                "underlying_type": {
                  "type": "named",
                  "name": "committee"
                }
              }
            }
          }
        },
        "name": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "text"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "organization_identity_function": {
      "description": "A native query used to test support for composite types",
      "fields": {
        "result_the_field": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "organization"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "person": {
      "fields": {
        "address": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "person_address"
            }
          }
        },
        "name": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "person_name"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "person_address": {
      "description": "The address of a person, obviously",
      "fields": {
        "address_line_1": {
          "description": "Address line No 1",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "text"
            }
          }
        },
        "address_line_2": {
          "description": "Address line No 2",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "text"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "person_name": {
      "description": "The name of a person, obviously",
      "fields": {
        "first_name": {
          "description": "The first name of a person",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "text"
            }
          }
        },
        "last_name": {
          "description": "The last name of a person",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "text"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "phone_numbers": {
      "fields": {
        "the_number": {
          "type": {
            "type": "named",
            "name": "Phone"
          }
        }
      },
      "foreign_keys": {}
    },
    "spatial_ref_sys": {
      "fields": {
        "auth_name": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "varchar"
            }
          }
        },
        "auth_srid": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "int4"
            }
          }
        },
        "proj4text": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "varchar"
            }
          }
        },
        "srid": {
          "type": {
            "type": "named",
            "name": "int4"
          }
        },
        "srtext": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "varchar"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "summarize_organizations": {
      "description": "A native query used to test support array-valued variables",
      "fields": {
        "result": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "text"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "text_table": {
      "fields": {
        "content": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "text"
            }
          }
        },
        "id": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "int4"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "topology_layer": {
      "fields": {
        "child_id": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "int4"
            }
          }
        },
        "feature_column": {
          "type": {
            "type": "named",
            "name": "varchar"
          }
        },
        "feature_type": {
          "type": {
            "type": "named",
            "name": "int4"
          }
        },
        "layer_id": {
          "type": {
            "type": "named",
            "name": "int4"
          }
        },
        "level": {
          "type": {
            "type": "named",
            "name": "int4"
          }
        },
        "schema_name": {
          "type": {
            "type": "named",
            "name": "varchar"
          }
        },
        "table_name": {
          "type": {
            "type": "named",
            "name": "varchar"
          }
        },
        "topology_id": {
          "type": {
            "type": "named",
            "name": "int4"
          }
        }
      },
      "foreign_keys": {
        "layer_topology_id_fkey": {
          "column_mapping": {
            "topology_id": [
              "id"
            ]
          },
          "foreign_collection": "topology_topology"
        }
      }
    },
    "topology_topology": {
      "fields": {
        "hasz": {
          "type": {
            "type": "named",
            "name": "bool"
          }
        },
        "id": {
          "type": {
            "type": "named",
            "name": "int4"
          }
        },
        "name": {
          "type": {
            "type": "named",
            "name": "varchar"
          }
        },
        "precision": {
          "type": {
            "type": "named",
            "name": "float8"
          }
        },
        "srid": {
          "type": {
            "type": "named",
            "name": "int4"
          }
        }
      },
      "foreign_keys": {}
    },
    "update_Album_by_AlbumId_response": {
      "description": "Responses from the 'update_Album_by_AlbumId' procedure",
      "fields": {
        "affected_rows": {
          "description": "The number of rows affected by the mutation",
          "type": {
            "type": "named",
            "name": "int4"
          }
        },
        "returning": {
          "description": "Data from rows affected by the mutation",
          "type": {
            "type": "array",
            "element_type": {
              "type": "named",
              "name": "Album"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "update_Album_by_AlbumId_update_columns": {
      "description": "Update the columns of the 'Album' collection",
      "fields": {
        "AlbumId": {
          "description": "Update the 'AlbumId' column in the 'Album' collection.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "update_column_Album_AlbumId"
            }
          }
        },
        "ArtistId": {
          "description": "Update the 'ArtistId' column in the 'Album' collection.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "update_column_Album_ArtistId"
            }
          }
        },
        "Title": {
          "description": "Update the 'Title' column in the 'Album' collection.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "update_column_Album_Title"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "update_Artist_by_ArtistId_response": {
      "description": "Responses from the 'update_Artist_by_ArtistId' procedure",
      "fields": {
        "affected_rows": {
          "description": "The number of rows affected by the mutation",
          "type": {
            "type": "named",
            "name": "int4"
          }
        },
        "returning": {
          "description": "Data from rows affected by the mutation",
          "type": {
            "type": "array",
            "element_type": {
              "type": "named",
              "name": "Artist"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "update_Artist_by_ArtistId_update_columns": {
      "description": "Update the columns of the 'Artist' collection",
      "fields": {
        "ArtistId": {
          "description": "Update the 'ArtistId' column in the 'Artist' collection.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "update_column_Artist_ArtistId"
            }
          }
        },
        "Name": {
          "description": "Update the 'Name' column in the 'Artist' collection.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "update_column_Artist_Name"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "update_Customer_by_CustomerId_response": {
      "description": "Responses from the 'update_Customer_by_CustomerId' procedure",
      "fields": {
        "affected_rows": {
          "description": "The number of rows affected by the mutation",
          "type": {
            "type": "named",
            "name": "int4"
          }
        },
        "returning": {
          "description": "Data from rows affected by the mutation",
          "type": {
            "type": "array",
            "element_type": {
              "type": "named",
              "name": "Customer"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "update_Customer_by_CustomerId_update_columns": {
      "description": "Update the columns of the 'Customer' collection",
      "fields": {
        "Address": {
          "description": "Update the 'Address' column in the 'Customer' collection.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "update_column_Customer_Address"
            }
          }
        },
        "City": {
          "description": "Update the 'City' column in the 'Customer' collection.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "update_column_Customer_City"
            }
          }
        },
        "Company": {
          "description": "Update the 'Company' column in the 'Customer' collection.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "update_column_Customer_Company"
            }
          }
        },
        "Country": {
          "description": "Update the 'Country' column in the 'Customer' collection.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "update_column_Customer_Country"
            }
          }
        },
        "CustomerId": {
          "description": "Update the 'CustomerId' column in the 'Customer' collection.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "update_column_Customer_CustomerId"
            }
          }
        },
        "Email": {
          "description": "Update the 'Email' column in the 'Customer' collection.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "update_column_Customer_Email"
            }
          }
        },
        "Fax": {
          "description": "Update the 'Fax' column in the 'Customer' collection.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "update_column_Customer_Fax"
            }
          }
        },
        "FirstName": {
          "description": "Update the 'FirstName' column in the 'Customer' collection.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "update_column_Customer_FirstName"
            }
          }
        },
        "LastName": {
          "description": "Update the 'LastName' column in the 'Customer' collection.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "update_column_Customer_LastName"
            }
          }
        },
        "Phone": {
          "description": "Update the 'Phone' column in the 'Customer' collection.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "update_column_Customer_Phone"
            }
          }
        },
        "PostalCode": {
          "description": "Update the 'PostalCode' column in the 'Customer' collection.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "update_column_Customer_PostalCode"
            }
          }
        },
        "State": {
          "description": "Update the 'State' column in the 'Customer' collection.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "update_column_Customer_State"
            }
          }
        },
        "SupportRepId": {
          "description": "Update the 'SupportRepId' column in the 'Customer' collection.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "update_column_Customer_SupportRepId"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "update_Employee_by_EmployeeId_response": {
      "description": "Responses from the 'update_Employee_by_EmployeeId' procedure",
      "fields": {
        "affected_rows": {
          "description": "The number of rows affected by the mutation",
          "type": {
            "type": "named",
            "name": "int4"
          }
        },
        "returning": {
          "description": "Data from rows affected by the mutation",
          "type": {
            "type": "array",
            "element_type": {
              "type": "named",
              "name": "Employee"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "update_Employee_by_EmployeeId_update_columns": {
      "description": "Update the columns of the 'Employee' collection",
      "fields": {
        "Address": {
          "description": "Update the 'Address' column in the 'Employee' collection.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "update_column_Employee_Address"
            }
          }
        },
        "BirthDate": {
          "description": "Update the 'BirthDate' column in the 'Employee' collection.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "update_column_Employee_BirthDate"
            }
          }
        },
        "City": {
          "description": "Update the 'City' column in the 'Employee' collection.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "update_column_Employee_City"
            }
          }
        },
        "Country": {
          "description": "Update the 'Country' column in the 'Employee' collection.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "update_column_Employee_Country"
            }
          }
        },
        "Email": {
          "description": "Update the 'Email' column in the 'Employee' collection.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "update_column_Employee_Email"
            }
          }
        },
        "EmployeeId": {
          "description": "Update the 'EmployeeId' column in the 'Employee' collection.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "update_column_Employee_EmployeeId"
            }
          }
        },
        "Fax": {
          "description": "Update the 'Fax' column in the 'Employee' collection.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "update_column_Employee_Fax"
            }
          }
        },
        "FirstName": {
          "description": "Update the 'FirstName' column in the 'Employee' collection.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "update_column_Employee_FirstName"
            }
          }
        },
        "HireDate": {
          "description": "Update the 'HireDate' column in the 'Employee' collection.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "update_column_Employee_HireDate"
            }
          }
        },
        "LastName": {
          "description": "Update the 'LastName' column in the 'Employee' collection.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "update_column_Employee_LastName"
            }
          }
        },
        "Phone": {
          "description": "Update the 'Phone' column in the 'Employee' collection.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "update_column_Employee_Phone"
            }
          }
        },
        "PostalCode": {
          "description": "Update the 'PostalCode' column in the 'Employee' collection.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "update_column_Employee_PostalCode"
            }
          }
        },
        "ReportsTo": {
          "description": "Update the 'ReportsTo' column in the 'Employee' collection.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "update_column_Employee_ReportsTo"
            }
          }
        },
        "State": {
          "description": "Update the 'State' column in the 'Employee' collection.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "update_column_Employee_State"
            }
          }
        },
        "Title": {
          "description": "Update the 'Title' column in the 'Employee' collection.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "update_column_Employee_Title"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "update_Genre_by_GenreId_response": {
      "description": "Responses from the 'update_Genre_by_GenreId' procedure",
      "fields": {
        "affected_rows": {
          "description": "The number of rows affected by the mutation",
          "type": {
            "type": "named",
            "name": "int4"
          }
        },
        "returning": {
          "description": "Data from rows affected by the mutation",
          "type": {
            "type": "array",
            "element_type": {
              "type": "named",
              "name": "Genre"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "update_Genre_by_GenreId_update_columns": {
      "description": "Update the columns of the 'Genre' collection",
      "fields": {
        "GenreId": {
          "description": "Update the 'GenreId' column in the 'Genre' collection.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "update_column_Genre_GenreId"
            }
          }
        },
        "Name": {
          "description": "Update the 'Name' column in the 'Genre' collection.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "update_column_Genre_Name"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "update_InvoiceLine_by_InvoiceLineId_response": {
      "description": "Responses from the 'update_InvoiceLine_by_InvoiceLineId' procedure",
      "fields": {
        "affected_rows": {
          "description": "The number of rows affected by the mutation",
          "type": {
            "type": "named",
            "name": "int4"
          }
        },
        "returning": {
          "description": "Data from rows affected by the mutation",
          "type": {
            "type": "array",
            "element_type": {
              "type": "named",
              "name": "InvoiceLine"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "update_InvoiceLine_by_InvoiceLineId_update_columns": {
      "description": "Update the columns of the 'InvoiceLine' collection",
      "fields": {
        "InvoiceId": {
          "description": "Update the 'InvoiceId' column in the 'InvoiceLine' collection.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "update_column_InvoiceLine_InvoiceId"
            }
          }
        },
        "InvoiceLineId": {
          "description": "Update the 'InvoiceLineId' column in the 'InvoiceLine' collection.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "update_column_InvoiceLine_InvoiceLineId"
            }
          }
        },
        "Quantity": {
          "description": "Update the 'Quantity' column in the 'InvoiceLine' collection.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "update_column_InvoiceLine_Quantity"
            }
          }
        },
        "TrackId": {
          "description": "Update the 'TrackId' column in the 'InvoiceLine' collection.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "update_column_InvoiceLine_TrackId"
            }
          }
        },
        "UnitPrice": {
          "description": "Update the 'UnitPrice' column in the 'InvoiceLine' collection.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "update_column_InvoiceLine_UnitPrice"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "update_Invoice_by_InvoiceId_response": {
      "description": "Responses from the 'update_Invoice_by_InvoiceId' procedure",
      "fields": {
        "affected_rows": {
          "description": "The number of rows affected by the mutation",
          "type": {
            "type": "named",
            "name": "int4"
          }
        },
        "returning": {
          "description": "Data from rows affected by the mutation",
          "type": {
            "type": "array",
            "element_type": {
              "type": "named",
              "name": "Invoice"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "update_Invoice_by_InvoiceId_update_columns": {
      "description": "Update the columns of the 'Invoice' collection",
      "fields": {
        "BillingAddress": {
          "description": "Update the 'BillingAddress' column in the 'Invoice' collection.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "update_column_Invoice_BillingAddress"
            }
          }
        },
        "BillingCity": {
          "description": "Update the 'BillingCity' column in the 'Invoice' collection.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "update_column_Invoice_BillingCity"
            }
          }
        },
        "BillingCountry": {
          "description": "Update the 'BillingCountry' column in the 'Invoice' collection.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "update_column_Invoice_BillingCountry"
            }
          }
        },
        "BillingPostalCode": {
          "description": "Update the 'BillingPostalCode' column in the 'Invoice' collection.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "update_column_Invoice_BillingPostalCode"
            }
          }
        },
        "BillingState": {
          "description": "Update the 'BillingState' column in the 'Invoice' collection.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "update_column_Invoice_BillingState"
            }
          }
        },
        "CustomerId": {
          "description": "Update the 'CustomerId' column in the 'Invoice' collection.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "update_column_Invoice_CustomerId"
            }
          }
        },
        "InvoiceDate": {
          "description": "Update the 'InvoiceDate' column in the 'Invoice' collection.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "update_column_Invoice_InvoiceDate"
            }
          }
        },
        "InvoiceId": {
          "description": "Update the 'InvoiceId' column in the 'Invoice' collection.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "update_column_Invoice_InvoiceId"
            }
          }
        },
        "Total": {
          "description": "Update the 'Total' column in the 'Invoice' collection.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "update_column_Invoice_Total"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "update_MediaType_by_MediaTypeId_response": {
      "description": "Responses from the 'update_MediaType_by_MediaTypeId' procedure",
      "fields": {
        "affected_rows": {
          "description": "The number of rows affected by the mutation",
          "type": {
            "type": "named",
            "name": "int4"
          }
        },
        "returning": {
          "description": "Data from rows affected by the mutation",
          "type": {
            "type": "array",
            "element_type": {
              "type": "named",
              "name": "MediaType"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "update_MediaType_by_MediaTypeId_update_columns": {
      "description": "Update the columns of the 'MediaType' collection",
      "fields": {
        "MediaTypeId": {
          "description": "Update the 'MediaTypeId' column in the 'MediaType' collection.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "update_column_MediaType_MediaTypeId"
            }
          }
        },
        "Name": {
          "description": "Update the 'Name' column in the 'MediaType' collection.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "update_column_MediaType_Name"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "update_PlaylistTrack_by_PlaylistId_and_TrackId_response": {
      "description": "Responses from the 'update_PlaylistTrack_by_PlaylistId_and_TrackId' procedure",
      "fields": {
        "affected_rows": {
          "description": "The number of rows affected by the mutation",
          "type": {
            "type": "named",
            "name": "int4"
          }
        },
        "returning": {
          "description": "Data from rows affected by the mutation",
          "type": {
            "type": "array",
            "element_type": {
              "type": "named",
              "name": "PlaylistTrack"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "update_PlaylistTrack_by_PlaylistId_and_TrackId_update_columns": {
      "description": "Update the columns of the 'PlaylistTrack' collection",
      "fields": {
        "PlaylistId": {
          "description": "Update the 'PlaylistId' column in the 'PlaylistTrack' collection.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "update_column_PlaylistTrack_PlaylistId"
            }
          }
        },
        "TrackId": {
          "description": "Update the 'TrackId' column in the 'PlaylistTrack' collection.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "update_column_PlaylistTrack_TrackId"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "update_Playlist_by_PlaylistId_response": {
      "description": "Responses from the 'update_Playlist_by_PlaylistId' procedure",
      "fields": {
        "affected_rows": {
          "description": "The number of rows affected by the mutation",
          "type": {
            "type": "named",
            "name": "int4"
          }
        },
        "returning": {
          "description": "Data from rows affected by the mutation",
          "type": {
            "type": "array",
            "element_type": {
              "type": "named",
              "name": "Playlist"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "update_Playlist_by_PlaylistId_update_columns": {
      "description": "Update the columns of the 'Playlist' collection",
      "fields": {
        "Name": {
          "description": "Update the 'Name' column in the 'Playlist' collection.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "update_column_Playlist_Name"
            }
          }
        },
        "PlaylistId": {
          "description": "Update the 'PlaylistId' column in the 'Playlist' collection.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "update_column_Playlist_PlaylistId"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "update_Track_by_TrackId_response": {
      "description": "Responses from the 'update_Track_by_TrackId' procedure",
      "fields": {
        "affected_rows": {
          "description": "The number of rows affected by the mutation",
          "type": {
            "type": "named",
            "name": "int4"
          }
        },
        "returning": {
          "description": "Data from rows affected by the mutation",
          "type": {
            "type": "array",
            "element_type": {
              "type": "named",
              "name": "Track"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "update_Track_by_TrackId_update_columns": {
      "description": "Update the columns of the 'Track' collection",
      "fields": {
        "AlbumId": {
          "description": "Update the 'AlbumId' column in the 'Track' collection.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "update_column_Track_AlbumId"
            }
          }
        },
        "Bytes": {
          "description": "Update the 'Bytes' column in the 'Track' collection.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "update_column_Track_Bytes"
            }
          }
        },
        "Composer": {
          "description": "Update the 'Composer' column in the 'Track' collection.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "update_column_Track_Composer"
            }
          }
        },
        "GenreId": {
          "description": "Update the 'GenreId' column in the 'Track' collection.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "update_column_Track_GenreId"
            }
          }
        },
        "MediaTypeId": {
          "description": "Update the 'MediaTypeId' column in the 'Track' collection.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "update_column_Track_MediaTypeId"
            }
          }
        },
        "Milliseconds": {
          "description": "Update the 'Milliseconds' column in the 'Track' collection.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "update_column_Track_Milliseconds"
            }
          }
        },
        "Name": {
          "description": "Update the 'Name' column in the 'Track' collection.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "update_column_Track_Name"
            }
          }
        },
        "TrackId": {
          "description": "Update the 'TrackId' column in the 'Track' collection.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "update_column_Track_TrackId"
            }
          }
        },
        "UnitPrice": {
          "description": "Update the 'UnitPrice' column in the 'Track' collection.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "update_column_Track_UnitPrice"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "update_column_Album_AlbumId": {
      "description": "Update the 'AlbumId' column in the 'Album' collection",
      "fields": {
        "_set": {
          "description": "Set the column to this value",
          "type": {
            "type": "named",
            "name": "int4"
          }
        }
      },
      "foreign_keys": {}
    },
    "update_column_Album_ArtistId": {
      "description": "Update the 'ArtistId' column in the 'Album' collection",
      "fields": {
        "_set": {
          "description": "Set the column to this value",
          "type": {
            "type": "named",
            "name": "int4"
          }
        }
      },
      "foreign_keys": {}
    },
    "update_column_Album_Title": {
      "description": "Update the 'Title' column in the 'Album' collection",
      "fields": {
        "_set": {
          "description": "Set the column to this value",
          "type": {
            "type": "named",
            "name": "varchar"
          }
        }
      },
      "foreign_keys": {}
    },
    "update_column_Artist_ArtistId": {
      "description": "Update the 'ArtistId' column in the 'Artist' collection",
      "fields": {
        "_set": {
          "description": "Set the column to this value",
          "type": {
            "type": "named",
            "name": "int4"
          }
        }
      },
      "foreign_keys": {}
    },
    "update_column_Artist_Name": {
      "description": "Update the 'Name' column in the 'Artist' collection",
      "fields": {
        "_set": {
          "description": "Set the column to this value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "varchar"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "update_column_Customer_Address": {
      "description": "Update the 'Address' column in the 'Customer' collection",
      "fields": {
        "_set": {
          "description": "Set the column to this value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "varchar"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "update_column_Customer_City": {
      "description": "Update the 'City' column in the 'Customer' collection",
      "fields": {
        "_set": {
          "description": "Set the column to this value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "varchar"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "update_column_Customer_Company": {
      "description": "Update the 'Company' column in the 'Customer' collection",
      "fields": {
        "_set": {
          "description": "Set the column to this value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "varchar"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "update_column_Customer_Country": {
      "description": "Update the 'Country' column in the 'Customer' collection",
      "fields": {
        "_set": {
          "description": "Set the column to this value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "varchar"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "update_column_Customer_CustomerId": {
      "description": "Update the 'CustomerId' column in the 'Customer' collection",
      "fields": {
        "_set": {
          "description": "Set the column to this value",
          "type": {
            "type": "named",
            "name": "int4"
          }
        }
      },
      "foreign_keys": {}
    },
    "update_column_Customer_Email": {
      "description": "Update the 'Email' column in the 'Customer' collection",
      "fields": {
        "_set": {
          "description": "Set the column to this value",
          "type": {
            "type": "named",
            "name": "varchar"
          }
        }
      },
      "foreign_keys": {}
    },
    "update_column_Customer_Fax": {
      "description": "Update the 'Fax' column in the 'Customer' collection",
      "fields": {
        "_set": {
          "description": "Set the column to this value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "varchar"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "update_column_Customer_FirstName": {
      "description": "Update the 'FirstName' column in the 'Customer' collection",
      "fields": {
        "_set": {
          "description": "Set the column to this value",
          "type": {
            "type": "named",
            "name": "varchar"
          }
        }
      },
      "foreign_keys": {}
    },
    "update_column_Customer_LastName": {
      "description": "Update the 'LastName' column in the 'Customer' collection",
      "fields": {
        "_set": {
          "description": "Set the column to this value",
          "type": {
            "type": "named",
            "name": "varchar"
          }
        }
      },
      "foreign_keys": {}
    },
    "update_column_Customer_Phone": {
      "description": "Update the 'Phone' column in the 'Customer' collection",
      "fields": {
        "_set": {
          "description": "Set the column to this value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "varchar"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "update_column_Customer_PostalCode": {
      "description": "Update the 'PostalCode' column in the 'Customer' collection",
      "fields": {
        "_set": {
          "description": "Set the column to this value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "varchar"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "update_column_Customer_State": {
      "description": "Update the 'State' column in the 'Customer' collection",
      "fields": {
        "_set": {
          "description": "Set the column to this value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "varchar"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "update_column_Customer_SupportRepId": {
      "description": "Update the 'SupportRepId' column in the 'Customer' collection",
      "fields": {
        "_set": {
          "description": "Set the column to this value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "int4"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "update_column_Employee_Address": {
      "description": "Update the 'Address' column in the 'Employee' collection",
      "fields": {
        "_set": {
          "description": "Set the column to this value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "varchar"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "update_column_Employee_BirthDate": {
      "description": "Update the 'BirthDate' column in the 'Employee' collection",
      "fields": {
        "_set": {
          "description": "Set the column to this value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "timestamp"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "update_column_Employee_City": {
      "description": "Update the 'City' column in the 'Employee' collection",
      "fields": {
        "_set": {
          "description": "Set the column to this value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "varchar"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "update_column_Employee_Country": {
      "description": "Update the 'Country' column in the 'Employee' collection",
      "fields": {
        "_set": {
          "description": "Set the column to this value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "varchar"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "update_column_Employee_Email": {
      "description": "Update the 'Email' column in the 'Employee' collection",
      "fields": {
        "_set": {
          "description": "Set the column to this value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "varchar"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "update_column_Employee_EmployeeId": {
      "description": "Update the 'EmployeeId' column in the 'Employee' collection",
      "fields": {
        "_set": {
          "description": "Set the column to this value",
          "type": {
            "type": "named",
            "name": "int4"
          }
        }
      },
      "foreign_keys": {}
    },
    "update_column_Employee_Fax": {
      "description": "Update the 'Fax' column in the 'Employee' collection",
      "fields": {
        "_set": {
          "description": "Set the column to this value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "varchar"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "update_column_Employee_FirstName": {
      "description": "Update the 'FirstName' column in the 'Employee' collection",
      "fields": {
        "_set": {
          "description": "Set the column to this value",
          "type": {
            "type": "named",
            "name": "varchar"
          }
        }
      },
      "foreign_keys": {}
    },
    "update_column_Employee_HireDate": {
      "description": "Update the 'HireDate' column in the 'Employee' collection",
      "fields": {
        "_set": {
          "description": "Set the column to this value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "timestamp"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "update_column_Employee_LastName": {
      "description": "Update the 'LastName' column in the 'Employee' collection",
      "fields": {
        "_set": {
          "description": "Set the column to this value",
          "type": {
            "type": "named",
            "name": "varchar"
          }
        }
      },
      "foreign_keys": {}
    },
    "update_column_Employee_Phone": {
      "description": "Update the 'Phone' column in the 'Employee' collection",
      "fields": {
        "_set": {
          "description": "Set the column to this value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "varchar"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "update_column_Employee_PostalCode": {
      "description": "Update the 'PostalCode' column in the 'Employee' collection",
      "fields": {
        "_set": {
          "description": "Set the column to this value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "varchar"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "update_column_Employee_ReportsTo": {
      "description": "Update the 'ReportsTo' column in the 'Employee' collection",
      "fields": {
        "_set": {
          "description": "Set the column to this value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "int4"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "update_column_Employee_State": {
      "description": "Update the 'State' column in the 'Employee' collection",
      "fields": {
        "_set": {
          "description": "Set the column to this value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "varchar"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "update_column_Employee_Title": {
      "description": "Update the 'Title' column in the 'Employee' collection",
      "fields": {
        "_set": {
          "description": "Set the column to this value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "varchar"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "update_column_Genre_GenreId": {
      "description": "Update the 'GenreId' column in the 'Genre' collection",
      "fields": {
        "_set": {
          "description": "Set the column to this value",
          "type": {
            "type": "named",
            "name": "int4"
          }
        }
      },
      "foreign_keys": {}
    },
    "update_column_Genre_Name": {
      "description": "Update the 'Name' column in the 'Genre' collection",
      "fields": {
        "_set": {
          "description": "Set the column to this value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "varchar"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "update_column_InvoiceLine_InvoiceId": {
      "description": "Update the 'InvoiceId' column in the 'InvoiceLine' collection",
      "fields": {
        "_set": {
          "description": "Set the column to this value",
          "type": {
            "type": "named",
            "name": "int4"
          }
        }
      },
      "foreign_keys": {}
    },
    "update_column_InvoiceLine_InvoiceLineId": {
      "description": "Update the 'InvoiceLineId' column in the 'InvoiceLine' collection",
      "fields": {
        "_set": {
          "description": "Set the column to this value",
          "type": {
            "type": "named",
            "name": "int4"
          }
        }
      },
      "foreign_keys": {}
    },
    "update_column_InvoiceLine_Quantity": {
      "description": "Update the 'Quantity' column in the 'InvoiceLine' collection",
      "fields": {
        "_set": {
          "description": "Set the column to this value",
          "type": {
            "type": "named",
            "name": "int4"
          }
        }
      },
      "foreign_keys": {}
    },
    "update_column_InvoiceLine_TrackId": {
      "description": "Update the 'TrackId' column in the 'InvoiceLine' collection",
      "fields": {
        "_set": {
          "description": "Set the column to this value",
          "type": {
            "type": "named",
            "name": "int4"
          }
        }
      },
      "foreign_keys": {}
    },
    "update_column_InvoiceLine_UnitPrice": {
      "description": "Update the 'UnitPrice' column in the 'InvoiceLine' collection",
      "fields": {
        "_set": {
          "description": "Set the column to this value",
          "type": {
            "type": "named",
            "name": "numeric"
          }
        }
      },
      "foreign_keys": {}
    },
    "update_column_Invoice_BillingAddress": {
      "description": "Update the 'BillingAddress' column in the 'Invoice' collection",
      "fields": {
        "_set": {
          "description": "Set the column to this value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "varchar"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "update_column_Invoice_BillingCity": {
      "description": "Update the 'BillingCity' column in the 'Invoice' collection",
      "fields": {
        "_set": {
          "description": "Set the column to this value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "varchar"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "update_column_Invoice_BillingCountry": {
      "description": "Update the 'BillingCountry' column in the 'Invoice' collection",
      "fields": {
        "_set": {
          "description": "Set the column to this value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "varchar"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "update_column_Invoice_BillingPostalCode": {
      "description": "Update the 'BillingPostalCode' column in the 'Invoice' collection",
      "fields": {
        "_set": {
          "description": "Set the column to this value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "varchar"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "update_column_Invoice_BillingState": {
      "description": "Update the 'BillingState' column in the 'Invoice' collection",
      "fields": {
        "_set": {
          "description": "Set the column to this value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "varchar"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "update_column_Invoice_CustomerId": {
      "description": "Update the 'CustomerId' column in the 'Invoice' collection",
      "fields": {
        "_set": {
          "description": "Set the column to this value",
          "type": {
            "type": "named",
            "name": "int4"
          }
        }
      },
      "foreign_keys": {}
    },
    "update_column_Invoice_InvoiceDate": {
      "description": "Update the 'InvoiceDate' column in the 'Invoice' collection",
      "fields": {
        "_set": {
          "description": "Set the column to this value",
          "type": {
            "type": "named",
            "name": "timestamp"
          }
        }
      },
      "foreign_keys": {}
    },
    "update_column_Invoice_InvoiceId": {
      "description": "Update the 'InvoiceId' column in the 'Invoice' collection",
      "fields": {
        "_set": {
          "description": "Set the column to this value",
          "type": {
            "type": "named",
            "name": "int4"
          }
        }
      },
      "foreign_keys": {}
    },
    "update_column_Invoice_Total": {
      "description": "Update the 'Total' column in the 'Invoice' collection",
      "fields": {
        "_set": {
          "description": "Set the column to this value",
          "type": {
            "type": "named",
            "name": "numeric"
          }
        }
      },
      "foreign_keys": {}
    },
    "update_column_MediaType_MediaTypeId": {
      "description": "Update the 'MediaTypeId' column in the 'MediaType' collection",
      "fields": {
        "_set": {
          "description": "Set the column to this value",
          "type": {
            "type": "named",
            "name": "int4"
          }
        }
      },
      "foreign_keys": {}
    },
    "update_column_MediaType_Name": {
      "description": "Update the 'Name' column in the 'MediaType' collection",
      "fields": {
        "_set": {
          "description": "Set the column to this value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "varchar"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "update_column_PlaylistTrack_PlaylistId": {
      "description": "Update the 'PlaylistId' column in the 'PlaylistTrack' collection",
      "fields": {
        "_set": {
          "description": "Set the column to this value",
          "type": {
            "type": "named",
            "name": "int4"
          }
        }
      },
      "foreign_keys": {}
    },
    "update_column_PlaylistTrack_TrackId": {
      "description": "Update the 'TrackId' column in the 'PlaylistTrack' collection",
      "fields": {
        "_set": {
          "description": "Set the column to this value",
          "type": {
            "type": "named",
            "name": "int4"
          }
        }
      },
      "foreign_keys": {}
    },
    "update_column_Playlist_Name": {
      "description": "Update the 'Name' column in the 'Playlist' collection",
      "fields": {
        "_set": {
          "description": "Set the column to this value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "varchar"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "update_column_Playlist_PlaylistId": {
      "description": "Update the 'PlaylistId' column in the 'Playlist' collection",
      "fields": {
        "_set": {
          "description": "Set the column to this value",
          "type": {
            "type": "named",
            "name": "int4"
          }
        }
      },
      "foreign_keys": {}
    },
    "update_column_Track_AlbumId": {
      "description": "Update the 'AlbumId' column in the 'Track' collection",
      "fields": {
        "_set": {
          "description": "Set the column to this value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "int4"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "update_column_Track_Bytes": {
      "description": "Update the 'Bytes' column in the 'Track' collection",
      "fields": {
        "_set": {
          "description": "Set the column to this value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "int4"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "update_column_Track_Composer": {
      "description": "Update the 'Composer' column in the 'Track' collection",
      "fields": {
        "_set": {
          "description": "Set the column to this value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "varchar"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "update_column_Track_GenreId": {
      "description": "Update the 'GenreId' column in the 'Track' collection",
      "fields": {
        "_set": {
          "description": "Set the column to this value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "int4"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "update_column_Track_MediaTypeId": {
      "description": "Update the 'MediaTypeId' column in the 'Track' collection",
      "fields": {
        "_set": {
          "description": "Set the column to this value",
          "type": {
            "type": "named",
            "name": "int4"
          }
        }
      },
      "foreign_keys": {}
    },
    "update_column_Track_Milliseconds": {
      "description": "Update the 'Milliseconds' column in the 'Track' collection",
      "fields": {
        "_set": {
          "description": "Set the column to this value",
          "type": {
            "type": "named",
            "name": "int4"
          }
        }
      },
      "foreign_keys": {}
    },
    "update_column_Track_Name": {
      "description": "Update the 'Name' column in the 'Track' collection",
      "fields": {
        "_set": {
          "description": "Set the column to this value",
          "type": {
            "type": "named",
            "name": "varchar"
          }
        }
      },
      "foreign_keys": {}
    },
    "update_column_Track_TrackId": {
      "description": "Update the 'TrackId' column in the 'Track' collection",
      "fields": {
        "_set": {
          "description": "Set the column to this value",
          "type": {
            "type": "named",
            "name": "int4"
          }
        }
      },
      "foreign_keys": {}
    },
    "update_column_Track_UnitPrice": {
      "description": "Update the 'UnitPrice' column in the 'Track' collection",
      "fields": {
        "_set": {
          "description": "Set the column to this value",
          "type": {
            "type": "named",
            "name": "numeric"
          }
        }
      },
      "foreign_keys": {}
    },
    "update_column_custom_defaults_birthday": {
      "description": "Update the 'birthday' column in the 'custom_defaults' collection",
      "fields": {
        "_set": {
          "description": "Set the column to this value",
          "type": {
            "type": "named",
            "name": "date"
          }
        }
      },
      "foreign_keys": {}
    },
    "update_column_custom_defaults_height_cm": {
      "description": "Update the 'height_cm' column in the 'custom_defaults' collection",
      "fields": {
        "_set": {
          "description": "Set the column to this value",
          "type": {
            "type": "named",
            "name": "numeric"
          }
        }
      },
      "foreign_keys": {}
    },
    "update_column_custom_defaults_name": {
      "description": "Update the 'name' column in the 'custom_defaults' collection",
      "fields": {
        "_set": {
          "description": "Set the column to this value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "text"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "update_column_custom_dog_adopter_name": {
      "description": "Update the 'adopter_name' column in the 'custom_dog' collection",
      "fields": {
        "_set": {
          "description": "Set the column to this value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "text"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "update_column_custom_dog_birthday": {
      "description": "Update the 'birthday' column in the 'custom_dog' collection",
      "fields": {
        "_set": {
          "description": "Set the column to this value",
          "type": {
            "type": "named",
            "name": "date"
          }
        }
      },
      "foreign_keys": {}
    },
    "update_column_custom_dog_height_cm": {
      "description": "Update the 'height_cm' column in the 'custom_dog' collection",
      "fields": {
        "_set": {
          "description": "Set the column to this value",
          "type": {
            "type": "named",
            "name": "numeric"
          }
        }
      },
      "foreign_keys": {}
    },
    "update_column_custom_dog_name": {
      "description": "Update the 'name' column in the 'custom_dog' collection",
      "fields": {
        "_set": {
          "description": "Set the column to this value",
          "type": {
            "type": "named",
            "name": "text"
          }
        }
      },
      "foreign_keys": {}
    },
    "update_column_institution_institution_departments": {
      "description": "Update the 'departments' column in the 'institution_institution' collection",
      "fields": {
        "_set": {
          "description": "Set the column to this value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "array",
              "element_type": {
                "type": "nullable",
                "underlying_type": {
                  "type": "named",
                  "name": "text"
                }
              }
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "update_column_institution_institution_id": {
      "description": "Update the 'id' column in the 'institution_institution' collection",
      "fields": {
        "_set": {
          "description": "Set the column to this value",
          "type": {
            "type": "named",
            "name": "int4"
          }
        }
      },
      "foreign_keys": {}
    },
    "update_column_institution_institution_location": {
      "description": "Update the 'location' column in the 'institution_institution' collection",
      "fields": {
        "_set": {
          "description": "Set the column to this value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "institution_location"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "update_column_institution_institution_name": {
      "description": "Update the 'name' column in the 'institution_institution' collection",
      "fields": {
        "_set": {
          "description": "Set the column to this value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "text"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "update_column_institution_institution_songs": {
      "description": "Update the 'songs' column in the 'institution_institution' collection",
      "fields": {
        "_set": {
          "description": "Set the column to this value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "institution_institution_songs"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "update_column_institution_institution_staff": {
      "description": "Update the 'staff' column in the 'institution_institution' collection",
      "fields": {
        "_set": {
          "description": "Set the column to this value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "array",
              "element_type": {
                "type": "nullable",
                "underlying_type": {
                  "type": "named",
                  "name": "institution_staff"
                }
              }
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "update_column_spatial_ref_sys_auth_name": {
      "description": "Update the 'auth_name' column in the 'spatial_ref_sys' collection",
      "fields": {
        "_set": {
          "description": "Set the column to this value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "varchar"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "update_column_spatial_ref_sys_auth_srid": {
      "description": "Update the 'auth_srid' column in the 'spatial_ref_sys' collection",
      "fields": {
        "_set": {
          "description": "Set the column to this value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "int4"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "update_column_spatial_ref_sys_proj4text": {
      "description": "Update the 'proj4text' column in the 'spatial_ref_sys' collection",
      "fields": {
        "_set": {
          "description": "Set the column to this value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "varchar"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "update_column_spatial_ref_sys_srid": {
      "description": "Update the 'srid' column in the 'spatial_ref_sys' collection",
      "fields": {
        "_set": {
          "description": "Set the column to this value",
          "type": {
            "type": "named",
            "name": "int4"
          }
        }
      },
      "foreign_keys": {}
    },
    "update_column_spatial_ref_sys_srtext": {
      "description": "Update the 'srtext' column in the 'spatial_ref_sys' collection",
      "fields": {
        "_set": {
          "description": "Set the column to this value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "varchar"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "update_column_topology_layer_child_id": {
      "description": "Update the 'child_id' column in the 'topology_layer' collection",
      "fields": {
        "_set": {
          "description": "Set the column to this value",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "int4"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "update_column_topology_layer_feature_column": {
      "description": "Update the 'feature_column' column in the 'topology_layer' collection",
      "fields": {
        "_set": {
          "description": "Set the column to this value",
          "type": {
            "type": "named",
            "name": "varchar"
          }
        }
      },
      "foreign_keys": {}
    },
    "update_column_topology_layer_feature_type": {
      "description": "Update the 'feature_type' column in the 'topology_layer' collection",
      "fields": {
        "_set": {
          "description": "Set the column to this value",
          "type": {
            "type": "named",
            "name": "int4"
          }
        }
      },
      "foreign_keys": {}
    },
    "update_column_topology_layer_layer_id": {
      "description": "Update the 'layer_id' column in the 'topology_layer' collection",
      "fields": {
        "_set": {
          "description": "Set the column to this value",
          "type": {
            "type": "named",
            "name": "int4"
          }
        }
      },
      "foreign_keys": {}
    },
    "update_column_topology_layer_level": {
      "description": "Update the 'level' column in the 'topology_layer' collection",
      "fields": {
        "_set": {
          "description": "Set the column to this value",
          "type": {
            "type": "named",
            "name": "int4"
          }
        }
      },
      "foreign_keys": {}
    },
    "update_column_topology_layer_schema_name": {
      "description": "Update the 'schema_name' column in the 'topology_layer' collection",
      "fields": {
        "_set": {
          "description": "Set the column to this value",
          "type": {
            "type": "named",
            "name": "varchar"
          }
        }
      },
      "foreign_keys": {}
    },
    "update_column_topology_layer_table_name": {
      "description": "Update the 'table_name' column in the 'topology_layer' collection",
      "fields": {
        "_set": {
          "description": "Set the column to this value",
          "type": {
            "type": "named",
            "name": "varchar"
          }
        }
      },
      "foreign_keys": {}
    },
    "update_column_topology_layer_topology_id": {
      "description": "Update the 'topology_id' column in the 'topology_layer' collection",
      "fields": {
        "_set": {
          "description": "Set the column to this value",
          "type": {
            "type": "named",
            "name": "int4"
          }
        }
      },
      "foreign_keys": {}
    },
    "update_column_topology_topology_hasz": {
      "description": "Update the 'hasz' column in the 'topology_topology' collection",
      "fields": {
        "_set": {
          "description": "Set the column to this value",
          "type": {
            "type": "named",
            "name": "bool"
          }
        }
      },
      "foreign_keys": {}
    },
    "update_column_topology_topology_id": {
      "description": "Update the 'id' column in the 'topology_topology' collection",
      "fields": {
        "_set": {
          "description": "Set the column to this value",
          "type": {
            "type": "named",
            "name": "int4"
          }
        }
      },
      "foreign_keys": {}
    },
    "update_column_topology_topology_name": {
      "description": "Update the 'name' column in the 'topology_topology' collection",
      "fields": {
        "_set": {
          "description": "Set the column to this value",
          "type": {
            "type": "named",
            "name": "varchar"
          }
        }
      },
      "foreign_keys": {}
    },
    "update_column_topology_topology_precision": {
      "description": "Update the 'precision' column in the 'topology_topology' collection",
      "fields": {
        "_set": {
          "description": "Set the column to this value",
          "type": {
            "type": "named",
            "name": "float8"
          }
        }
      },
      "foreign_keys": {}
    },
    "update_column_topology_topology_srid": {
      "description": "Update the 'srid' column in the 'topology_topology' collection",
      "fields": {
        "_set": {
          "description": "Set the column to this value",
          "type": {
            "type": "named",
            "name": "int4"
          }
        }
      },
      "foreign_keys": {}
    },
    "update_custom_defaults_by_id_response": {
      "description": "Responses from the 'update_custom_defaults_by_id' procedure",
      "fields": {
        "affected_rows": {
          "description": "The number of rows affected by the mutation",
          "type": {
            "type": "named",
            "name": "int4"
          }
        },
        "returning": {
          "description": "Data from rows affected by the mutation",
          "type": {
            "type": "array",
            "element_type": {
              "type": "named",
              "name": "custom_defaults"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "update_custom_defaults_by_id_update_columns": {
      "description": "Update the columns of the 'custom_defaults' collection",
      "fields": {
        "birthday": {
          "description": "Update the 'birthday' column in the 'custom_defaults' collection.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "update_column_custom_defaults_birthday"
            }
          }
        },
        "height_cm": {
          "description": "Update the 'height_cm' column in the 'custom_defaults' collection.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "update_column_custom_defaults_height_cm"
            }
          }
        },
        "name": {
          "description": "Update the 'name' column in the 'custom_defaults' collection.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "update_column_custom_defaults_name"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "update_custom_dog_by_id_response": {
      "description": "Responses from the 'update_custom_dog_by_id' procedure",
      "fields": {
        "affected_rows": {
          "description": "The number of rows affected by the mutation",
          "type": {
            "type": "named",
            "name": "int4"
          }
        },
        "returning": {
          "description": "Data from rows affected by the mutation",
          "type": {
            "type": "array",
            "element_type": {
              "type": "named",
              "name": "custom_dog"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "update_custom_dog_by_id_update_columns": {
      "description": "Update the columns of the 'custom_dog' collection",
      "fields": {
        "adopter_name": {
          "description": "Update the 'adopter_name' column in the 'custom_dog' collection.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "update_column_custom_dog_adopter_name"
            }
          }
        },
        "birthday": {
          "description": "Update the 'birthday' column in the 'custom_dog' collection.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "update_column_custom_dog_birthday"
            }
          }
        },
        "height_cm": {
          "description": "Update the 'height_cm' column in the 'custom_dog' collection.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "update_column_custom_dog_height_cm"
            }
          }
        },
        "name": {
          "description": "Update the 'name' column in the 'custom_dog' collection.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "update_column_custom_dog_name"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "update_institution_institution_by_id_response": {
      "description": "Responses from the 'update_institution_institution_by_id' procedure",
      "fields": {
        "affected_rows": {
          "description": "The number of rows affected by the mutation",
          "type": {
            "type": "named",
            "name": "int4"
          }
        },
        "returning": {
          "description": "Data from rows affected by the mutation",
          "type": {
            "type": "array",
            "element_type": {
              "type": "named",
              "name": "institution_institution"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "update_institution_institution_by_id_update_columns": {
      "description": "Update the columns of the 'institution_institution' collection",
      "fields": {
        "departments": {
          "description": "Update the 'departments' column in the 'institution_institution' collection.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "update_column_institution_institution_departments"
            }
          }
        },
        "id": {
          "description": "Update the 'id' column in the 'institution_institution' collection.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "update_column_institution_institution_id"
            }
          }
        },
        "location": {
          "description": "Update the 'location' column in the 'institution_institution' collection.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "update_column_institution_institution_location"
            }
          }
        },
        "name": {
          "description": "Update the 'name' column in the 'institution_institution' collection.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "update_column_institution_institution_name"
            }
          }
        },
        "songs": {
          "description": "Update the 'songs' column in the 'institution_institution' collection.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "update_column_institution_institution_songs"
            }
          }
        },
        "staff": {
          "description": "Update the 'staff' column in the 'institution_institution' collection.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "update_column_institution_institution_staff"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "update_spatial_ref_sys_by_srid_response": {
      "description": "Responses from the 'update_spatial_ref_sys_by_srid' procedure",
      "fields": {
        "affected_rows": {
          "description": "The number of rows affected by the mutation",
          "type": {
            "type": "named",
            "name": "int4"
          }
        },
        "returning": {
          "description": "Data from rows affected by the mutation",
          "type": {
            "type": "array",
            "element_type": {
              "type": "named",
              "name": "spatial_ref_sys"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "update_spatial_ref_sys_by_srid_update_columns": {
      "description": "Update the columns of the 'spatial_ref_sys' collection",
      "fields": {
        "auth_name": {
          "description": "Update the 'auth_name' column in the 'spatial_ref_sys' collection.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "update_column_spatial_ref_sys_auth_name"
            }
          }
        },
        "auth_srid": {
          "description": "Update the 'auth_srid' column in the 'spatial_ref_sys' collection.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "update_column_spatial_ref_sys_auth_srid"
            }
          }
        },
        "proj4text": {
          "description": "Update the 'proj4text' column in the 'spatial_ref_sys' collection.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "update_column_spatial_ref_sys_proj4text"
            }
          }
        },
        "srid": {
          "description": "Update the 'srid' column in the 'spatial_ref_sys' collection.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "update_column_spatial_ref_sys_srid"
            }
          }
        },
        "srtext": {
          "description": "Update the 'srtext' column in the 'spatial_ref_sys' collection.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "update_column_spatial_ref_sys_srtext"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "update_topology_layer_by_feature_column_and_schema_name_and_table_name_response": {
      "description": "Responses from the 'update_topology_layer_by_feature_column_and_schema_name_and_table_name' procedure",
      "fields": {
        "affected_rows": {
          "description": "The number of rows affected by the mutation",
          "type": {
            "type": "named",
            "name": "int4"
          }
        },
        "returning": {
          "description": "Data from rows affected by the mutation",
          "type": {
            "type": "array",
            "element_type": {
              "type": "named",
              "name": "topology_layer"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "update_topology_layer_by_feature_column_and_schema_name_and_table_name_update_columns": {
      "description": "Update the columns of the 'topology_layer' collection",
      "fields": {
        "child_id": {
          "description": "Update the 'child_id' column in the 'topology_layer' collection.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "update_column_topology_layer_child_id"
            }
          }
        },
        "feature_column": {
          "description": "Update the 'feature_column' column in the 'topology_layer' collection.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "update_column_topology_layer_feature_column"
            }
          }
        },
        "feature_type": {
          "description": "Update the 'feature_type' column in the 'topology_layer' collection.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "update_column_topology_layer_feature_type"
            }
          }
        },
        "layer_id": {
          "description": "Update the 'layer_id' column in the 'topology_layer' collection.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "update_column_topology_layer_layer_id"
            }
          }
        },
        "level": {
          "description": "Update the 'level' column in the 'topology_layer' collection.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "update_column_topology_layer_level"
            }
          }
        },
        "schema_name": {
          "description": "Update the 'schema_name' column in the 'topology_layer' collection.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "update_column_topology_layer_schema_name"
            }
          }
        },
        "table_name": {
          "description": "Update the 'table_name' column in the 'topology_layer' collection.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "update_column_topology_layer_table_name"
            }
          }
        },
        "topology_id": {
          "description": "Update the 'topology_id' column in the 'topology_layer' collection.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "update_column_topology_layer_topology_id"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "update_topology_layer_by_layer_id_and_topology_id_response": {
      "description": "Responses from the 'update_topology_layer_by_layer_id_and_topology_id' procedure",
      "fields": {
        "affected_rows": {
          "description": "The number of rows affected by the mutation",
          "type": {
            "type": "named",
            "name": "int4"
          }
        },
        "returning": {
          "description": "Data from rows affected by the mutation",
          "type": {
            "type": "array",
            "element_type": {
              "type": "named",
              "name": "topology_layer"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "update_topology_layer_by_layer_id_and_topology_id_update_columns": {
      "description": "Update the columns of the 'topology_layer' collection",
      "fields": {
        "child_id": {
          "description": "Update the 'child_id' column in the 'topology_layer' collection.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "update_column_topology_layer_child_id"
            }
          }
        },
        "feature_column": {
          "description": "Update the 'feature_column' column in the 'topology_layer' collection.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "update_column_topology_layer_feature_column"
            }
          }
        },
        "feature_type": {
          "description": "Update the 'feature_type' column in the 'topology_layer' collection.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "update_column_topology_layer_feature_type"
            }
          }
        },
        "layer_id": {
          "description": "Update the 'layer_id' column in the 'topology_layer' collection.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "update_column_topology_layer_layer_id"
            }
          }
        },
        "level": {
          "description": "Update the 'level' column in the 'topology_layer' collection.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "update_column_topology_layer_level"
            }
          }
        },
        "schema_name": {
          "description": "Update the 'schema_name' column in the 'topology_layer' collection.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "update_column_topology_layer_schema_name"
            }
          }
        },
        "table_name": {
          "description": "Update the 'table_name' column in the 'topology_layer' collection.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "update_column_topology_layer_table_name"
            }
          }
        },
        "topology_id": {
          "description": "Update the 'topology_id' column in the 'topology_layer' collection.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "update_column_topology_layer_topology_id"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "update_topology_topology_by_id_response": {
      "description": "Responses from the 'update_topology_topology_by_id' procedure",
      "fields": {
        "affected_rows": {
          "description": "The number of rows affected by the mutation",
          "type": {
            "type": "named",
            "name": "int4"
          }
        },
        "returning": {
          "description": "Data from rows affected by the mutation",
          "type": {
            "type": "array",
            "element_type": {
              "type": "named",
              "name": "topology_topology"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "update_topology_topology_by_id_update_columns": {
      "description": "Update the columns of the 'topology_topology' collection",
      "fields": {
        "hasz": {
          "description": "Update the 'hasz' column in the 'topology_topology' collection.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "update_column_topology_topology_hasz"
            }
          }
        },
        "id": {
          "description": "Update the 'id' column in the 'topology_topology' collection.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "update_column_topology_topology_id"
            }
          }
        },
        "name": {
          "description": "Update the 'name' column in the 'topology_topology' collection.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "update_column_topology_topology_name"
            }
          }
        },
        "precision": {
          "description": "Update the 'precision' column in the 'topology_topology' collection.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "update_column_topology_topology_precision"
            }
          }
        },
        "srid": {
          "description": "Update the 'srid' column in the 'topology_topology' collection.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "update_column_topology_topology_srid"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "update_topology_topology_by_name_response": {
      "description": "Responses from the 'update_topology_topology_by_name' procedure",
      "fields": {
        "affected_rows": {
          "description": "The number of rows affected by the mutation",
          "type": {
            "type": "named",
            "name": "int4"
          }
        },
        "returning": {
          "description": "Data from rows affected by the mutation",
          "type": {
            "type": "array",
            "element_type": {
              "type": "named",
              "name": "topology_topology"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "update_topology_topology_by_name_update_columns": {
      "description": "Update the columns of the 'topology_topology' collection",
      "fields": {
        "hasz": {
          "description": "Update the 'hasz' column in the 'topology_topology' collection.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "update_column_topology_topology_hasz"
            }
          }
        },
        "id": {
          "description": "Update the 'id' column in the 'topology_topology' collection.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "update_column_topology_topology_id"
            }
          }
        },
        "name": {
          "description": "Update the 'name' column in the 'topology_topology' collection.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "update_column_topology_topology_name"
            }
          }
        },
        "precision": {
          "description": "Update the 'precision' column in the 'topology_topology' collection.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "update_column_topology_topology_precision"
            }
          }
        },
        "srid": {
          "description": "Update the 'srid' column in the 'topology_topology' collection.",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "update_column_topology_topology_srid"
            }
          }
        }
      },
      "foreign_keys": {}
    },
    "value_types": {
      "fields": {
        "bool": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "bool"
            }
          }
        },
        "char": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "char"
            }
          }
        },
        "date": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "date"
            }
          }
        },
        "float4": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "float4"
            }
          }
        },
        "float8": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "float8"
            }
          }
        },
        "int2": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "int2"
            }
          }
        },
        "int4": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "int4"
            }
          }
        },
        "int8": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "int8"
            }
          }
        },
        "numeric": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "numeric"
            }
          }
        },
        "text": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "text"
            }
          }
        },
        "time": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "time"
            }
          }
        },
        "timestamp": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "timestamp"
            }
          }
        },
        "timestamptz": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "timestamptz"
            }
          }
        },
        "timetz": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "timetz"
            }
          }
        },
        "uuid": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "uuid"
            }
          }
        },
        "varchar": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "varchar"
            }
          }
        }
      },
      "foreign_keys": {}
    }
  },
  "collections": [
    {
      "name": "Album",
      "description": "The record of all albums",
      "arguments": {},
      "type": "Album",
      "uniqueness_constraints": {
        "PK_Album": {
          "unique_columns": [
            "AlbumId"
          ]
        }
      }
    },
    {
      "name": "Artist",
      "description": "The record of all artists",
      "arguments": {},
      "type": "Artist",
      "uniqueness_constraints": {
        "PK_Artist": {
          "unique_columns": [
            "ArtistId"
          ]
        }
      }
    },
    {
      "name": "Customer",
      "description": "The record of all customers",
      "arguments": {},
      "type": "Customer",
      "uniqueness_constraints": {
        "PK_Customer": {
          "unique_columns": [
            "CustomerId"
          ]
        }
      }
    },
    {
      "name": "Employee",
      "arguments": {},
      "type": "Employee",
      "uniqueness_constraints": {
        "PK_Employee": {
          "unique_columns": [
            "EmployeeId"
          ]
        }
      }
    },
    {
      "name": "Genre",
      "arguments": {},
      "type": "Genre",
      "uniqueness_constraints": {
        "PK_Genre": {
          "unique_columns": [
            "GenreId"
          ]
        }
      }
    },
    {
      "name": "Invoice",
      "arguments": {},
      "type": "Invoice",
      "uniqueness_constraints": {
        "PK_Invoice": {
          "unique_columns": [
            "InvoiceId"
          ]
        }
      }
    },
    {
      "name": "InvoiceLine",
      "arguments": {},
      "type": "InvoiceLine",
      "uniqueness_constraints": {
        "PK_InvoiceLine": {
          "unique_columns": [
            "InvoiceLineId"
          ]
        }
      }
    },
    {
      "name": "MediaType",
      "arguments": {},
      "type": "MediaType",
      "uniqueness_constraints": {
        "PK_MediaType": {
          "unique_columns": [
            "MediaTypeId"
          ]
        }
      }
    },
    {
      "name": "Playlist",
      "arguments": {},
      "type": "Playlist",
      "uniqueness_constraints": {
        "PK_Playlist": {
          "unique_columns": [
            "PlaylistId"
          ]
        }
      }
    },
    {
      "name": "PlaylistTrack",
      "arguments": {},
      "type": "PlaylistTrack",
      "uniqueness_constraints": {
        "PK_PlaylistTrack": {
          "unique_columns": [
            "PlaylistId",
            "TrackId"
          ]
        }
      }
    },
    {
      "name": "Track",
      "arguments": {},
      "type": "Track",
      "uniqueness_constraints": {
        "PK_Track": {
          "unique_columns": [
            "TrackId"
          ]
        }
      }
    },
    {
      "name": "custom_defaults",
      "arguments": {},
      "type": "custom_defaults",
      "uniqueness_constraints": {
        "defaults_pkey": {
          "unique_columns": [
            "id"
          ]
        }
      }
    },
    {
      "name": "custom_dog",
      "arguments": {},
      "type": "custom_dog",
      "uniqueness_constraints": {
        "dog_pkey": {
          "unique_columns": [
            "id"
          ]
        }
      }
    },
    {
      "name": "custom_test_cidr",
      "arguments": {},
      "type": "custom_test_cidr",
      "uniqueness_constraints": {}
    },
    {
      "name": "deck_of_cards",
      "arguments": {},
      "type": "deck_of_cards",
      "uniqueness_constraints": {}
    },
    {
      "name": "discoverable_types_root_occurrence",
      "arguments": {},
      "type": "discoverable_types_root_occurrence",
      "uniqueness_constraints": {}
    },
    {
      "name": "even_numbers",
      "arguments": {},
      "type": "even_numbers",
      "uniqueness_constraints": {}
    },
    {
      "name": "group_leader",
      "arguments": {},
      "type": "group_leader",
      "uniqueness_constraints": {}
    },
    {
      "name": "institution_institution",
      "arguments": {},
      "type": "institution_institution",
      "uniqueness_constraints": {
        "institution_pkey": {
          "unique_columns": [
            "id"
          ]
        }
      }
    },
    {
      "name": "phone_numbers",
      "arguments": {},
      "type": "phone_numbers",
      "uniqueness_constraints": {}
    },
    {
      "name": "spatial_ref_sys",
      "arguments": {},
      "type": "spatial_ref_sys",
      "uniqueness_constraints": {
        "spatial_ref_sys_pkey": {
          "unique_columns": [
            "srid"
          ]
        }
      }
    },
    {
      "name": "text_table",
      "arguments": {},
      "type": "text_table",
      "uniqueness_constraints": {}
    },
    {
      "name": "topology_layer",
      "arguments": {},
      "type": "topology_layer",
      "uniqueness_constraints": {
        "layer_pkey": {
          "unique_columns": [
            "layer_id",
            "topology_id"
          ]
        },
        "layer_schema_name_table_name_feature_column_key": {
          "unique_columns": [
            "feature_column",
            "schema_name",
            "table_name"
          ]
        }
      }
    },
    {
      "name": "topology_topology",
      "arguments": {},
      "type": "topology_topology",
      "uniqueness_constraints": {
        "topology_name_key": {
          "unique_columns": [
            "name"
          ]
        },
        "topology_pkey": {
          "unique_columns": [
            "id"
          ]
        }
      }
    },
    {
      "name": "address_identity_function",
      "description": "A native query used to test support for composite types",
      "arguments": {
        "address": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "person_address"
            }
          }
        }
      },
      "type": "address_identity_function",
      "uniqueness_constraints": {}
    },
    {
      "name": "album_by_title",
      "arguments": {
        "id": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "int4"
            }
          }
        },
        "title": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "varchar"
            }
          }
        }
      },
      "type": "album_by_title",
      "uniqueness_constraints": {}
    },
    {
      "name": "array_reverse",
      "description": "A native query used to test support for arrays as inputs",
      "arguments": {
        "array": {
          "description": "The array to reverse. This is necessarily of a monomorphic type.",
          "type": {
            "type": "array",
            "element_type": {
              "type": "nullable",
              "underlying_type": {
                "type": "named",
                "name": "varchar"
              }
            }
          }
        }
      },
      "type": "array_reverse",
      "uniqueness_constraints": {}
    },
    {
      "name": "array_series",
      "description": "A native query used to test support for arrays",
      "arguments": {
        "from": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "int4"
            }
          }
        },
        "to": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "int4"
            }
          }
        }
      },
      "type": "array_series",
      "uniqueness_constraints": {}
    },
    {
      "name": "artist",
      "arguments": {},
      "type": "artist",
      "uniqueness_constraints": {}
    },
    {
      "name": "artist_below_id",
      "arguments": {
        "id": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "int4"
            }
          }
        }
      },
      "type": "artist_below_id",
      "uniqueness_constraints": {}
    },
    {
      "name": "count_elements",
      "description": "A native query used to test support array-valued variables",
      "arguments": {
        "array_argument": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "array",
              "element_type": {
                "type": "nullable",
                "underlying_type": {
                  "type": "named",
                  "name": "text"
                }
              }
            }
          }
        }
      },
      "type": "count_elements",
      "uniqueness_constraints": {}
    },
    {
      "name": "make_person",
      "description": "A native query used to test support for composite types",
      "arguments": {
        "address": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "person_address"
            }
          }
        },
        "name": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "person_name"
            }
          }
        }
      },
      "type": "make_person",
      "uniqueness_constraints": {}
    },
    {
      "name": "organization_identity_function",
      "description": "A native query used to test support for composite types",
      "arguments": {
        "organization": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "organization"
            }
          }
        }
      },
      "type": "organization_identity_function",
      "uniqueness_constraints": {}
    },
    {
      "name": "summarize_organizations",
      "description": "A native query used to test support array-valued variables",
      "arguments": {
        "organizations": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "array",
              "element_type": {
                "type": "nullable",
                "underlying_type": {
                  "type": "named",
                  "name": "organization"
                }
              }
            }
          }
        }
      },
      "type": "summarize_organizations",
      "uniqueness_constraints": {}
    },
    {
      "name": "value_types",
      "arguments": {
        "bool": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "bool"
            }
          }
        },
        "char": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "char"
            }
          }
        },
        "date": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "date"
            }
          }
        },
        "float4": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "float4"
            }
          }
        },
        "float8": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "float8"
            }
          }
        },
        "int2": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "int2"
            }
          }
        },
        "int4": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "int4"
            }
          }
        },
        "int8": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "int8"
            }
          }
        },
        "numeric": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "numeric"
            }
          }
        },
        "text": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "text"
            }
          }
        },
        "time": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "time"
            }
          }
        },
        "timestamp": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "timestamp"
            }
          }
        },
        "timestamptz": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "timestamptz"
            }
          }
        },
        "timetz": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "timetz"
            }
          }
        },
        "uuid": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "uuid"
            }
          }
        },
        "varchar": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "varchar"
            }
          }
        }
      },
      "type": "value_types",
      "uniqueness_constraints": {}
    }
  ],
  "functions": [],
  "procedures": [
    {
      "name": "delete_playlist_track",
      "arguments": {
        "track_id": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "int4"
            }
          }
        }
      },
      "result_type": {
        "type": "named",
        "name": "delete_playlist_track_response"
      }
    },
    {
      "name": "insert_album",
      "arguments": {
        "artist_id": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "int4"
            }
          }
        },
        "id": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "int4"
            }
          }
        },
        "title": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "varchar"
            }
          }
        }
      },
      "result_type": {
        "type": "named",
        "name": "insert_album_response"
      }
    },
    {
      "name": "insert_artist",
      "arguments": {
        "id": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "int4"
            }
          }
        },
        "name": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "varchar"
            }
          }
        }
      },
      "result_type": {
        "type": "named",
        "name": "insert_artist_response"
      }
    },
    {
      "name": "insert_genre",
      "arguments": {
        "id": {
          "type": {
            "type": "named",
            "name": "int4"
          }
        },
        "name": {
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "named",
              "name": "varchar"
            }
          }
        }
      },
      "result_type": {
        "type": "named",
        "name": "insert_genre_response"
      }
    },
    {
      "name": "delete_Album_by_AlbumId",
      "description": "Delete any row on the 'Album' collection using the 'AlbumId' key",
      "arguments": {
        "key_AlbumId": {
          "description": "The identifier of an album",
          "type": {
            "type": "named",
            "name": "int4"
          }
        },
        "pre_check": {
          "description": "Delete permission predicate over the 'Album' collection",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "predicate",
              "object_type_name": "Album"
            }
          }
        }
      },
      "result_type": {
        "type": "named",
        "name": "delete_Album_by_AlbumId_response"
      }
    },
    {
      "name": "delete_Artist_by_ArtistId",
      "description": "Delete any row on the 'Artist' collection using the 'ArtistId' key",
      "arguments": {
        "key_ArtistId": {
          "description": "The identifier of an artist",
          "type": {
            "type": "named",
            "name": "int4"
          }
        },
        "pre_check": {
          "description": "Delete permission predicate over the 'Artist' collection",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "predicate",
              "object_type_name": "Artist"
            }
          }
        }
      },
      "result_type": {
        "type": "named",
        "name": "delete_Artist_by_ArtistId_response"
      }
    },
    {
      "name": "delete_Customer_by_CustomerId",
      "description": "Delete any row on the 'Customer' collection using the 'CustomerId' key",
      "arguments": {
        "key_CustomerId": {
          "description": "The identifier of customer",
          "type": {
            "type": "named",
            "name": "int4"
          }
        },
        "pre_check": {
          "description": "Delete permission predicate over the 'Customer' collection",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "predicate",
              "object_type_name": "Customer"
            }
          }
        }
      },
      "result_type": {
        "type": "named",
        "name": "delete_Customer_by_CustomerId_response"
      }
    },
    {
      "name": "delete_Employee_by_EmployeeId",
      "description": "Delete any row on the 'Employee' collection using the 'EmployeeId' key",
      "arguments": {
        "key_EmployeeId": {
          "type": {
            "type": "named",
            "name": "int4"
          }
        },
        "pre_check": {
          "description": "Delete permission predicate over the 'Employee' collection",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "predicate",
              "object_type_name": "Employee"
            }
          }
        }
      },
      "result_type": {
        "type": "named",
        "name": "delete_Employee_by_EmployeeId_response"
      }
    },
    {
      "name": "delete_Genre_by_GenreId",
      "description": "Delete any row on the 'Genre' collection using the 'GenreId' key",
      "arguments": {
        "key_GenreId": {
          "type": {
            "type": "named",
            "name": "int4"
          }
        },
        "pre_check": {
          "description": "Delete permission predicate over the 'Genre' collection",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "predicate",
              "object_type_name": "Genre"
            }
          }
        }
      },
      "result_type": {
        "type": "named",
        "name": "delete_Genre_by_GenreId_response"
      }
    },
    {
      "name": "delete_InvoiceLine_by_InvoiceLineId",
      "description": "Delete any row on the 'InvoiceLine' collection using the 'InvoiceLineId' key",
      "arguments": {
        "key_InvoiceLineId": {
          "type": {
            "type": "named",
            "name": "int4"
          }
        },
        "pre_check": {
          "description": "Delete permission predicate over the 'InvoiceLine' collection",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "predicate",
              "object_type_name": "InvoiceLine"
            }
          }
        }
      },
      "result_type": {
        "type": "named",
        "name": "delete_InvoiceLine_by_InvoiceLineId_response"
      }
    },
    {
      "name": "delete_Invoice_by_InvoiceId",
      "description": "Delete any row on the 'Invoice' collection using the 'InvoiceId' key",
      "arguments": {
        "key_InvoiceId": {
          "type": {
            "type": "named",
            "name": "int4"
          }
        },
        "pre_check": {
          "description": "Delete permission predicate over the 'Invoice' collection",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "predicate",
              "object_type_name": "Invoice"
            }
          }
        }
      },
      "result_type": {
        "type": "named",
        "name": "delete_Invoice_by_InvoiceId_response"
      }
    },
    {
      "name": "delete_MediaType_by_MediaTypeId",
      "description": "Delete any row on the 'MediaType' collection using the 'MediaTypeId' key",
      "arguments": {
        "key_MediaTypeId": {
          "type": {
            "type": "named",
            "name": "int4"
          }
        },
        "pre_check": {
          "description": "Delete permission predicate over the 'MediaType' collection",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "predicate",
              "object_type_name": "MediaType"
            }
          }
        }
      },
      "result_type": {
        "type": "named",
        "name": "delete_MediaType_by_MediaTypeId_response"
      }
    },
    {
      "name": "delete_PlaylistTrack_by_PlaylistId_and_TrackId",
      "description": "Delete any row on the 'PlaylistTrack' collection using the 'PlaylistId' and 'TrackId' keys",
      "arguments": {
        "key_PlaylistId": {
          "type": {
            "type": "named",
            "name": "int4"
          }
        },
        "key_TrackId": {
          "type": {
            "type": "named",
            "name": "int4"
          }
        },
        "pre_check": {
          "description": "Delete permission predicate over the 'PlaylistTrack' collection",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "predicate",
              "object_type_name": "PlaylistTrack"
            }
          }
        }
      },
      "result_type": {
        "type": "named",
        "name": "delete_PlaylistTrack_by_PlaylistId_and_TrackId_response"
      }
    },
    {
      "name": "delete_Playlist_by_PlaylistId",
      "description": "Delete any row on the 'Playlist' collection using the 'PlaylistId' key",
      "arguments": {
        "key_PlaylistId": {
          "type": {
            "type": "named",
            "name": "int4"
          }
        },
        "pre_check": {
          "description": "Delete permission predicate over the 'Playlist' collection",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "predicate",
              "object_type_name": "Playlist"
            }
          }
        }
      },
      "result_type": {
        "type": "named",
        "name": "delete_Playlist_by_PlaylistId_response"
      }
    },
    {
      "name": "delete_Track_by_TrackId",
      "description": "Delete any row on the 'Track' collection using the 'TrackId' key",
      "arguments": {
        "key_TrackId": {
          "type": {
            "type": "named",
            "name": "int4"
          }
        },
        "pre_check": {
          "description": "Delete permission predicate over the 'Track' collection",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "predicate",
              "object_type_name": "Track"
            }
          }
        }
      },
      "result_type": {
        "type": "named",
        "name": "delete_Track_by_TrackId_response"
      }
    },
    {
      "name": "delete_custom_defaults_by_id",
      "description": "Delete any row on the 'custom_defaults' collection using the 'id' key",
      "arguments": {
        "key_id": {
          "type": {
            "type": "named",
            "name": "int8"
          }
        },
        "pre_check": {
          "description": "Delete permission predicate over the 'custom_defaults' collection",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "predicate",
              "object_type_name": "custom_defaults"
            }
          }
        }
      },
      "result_type": {
        "type": "named",
        "name": "delete_custom_defaults_by_id_response"
      }
    },
    {
      "name": "delete_custom_dog_by_id",
      "description": "Delete any row on the 'custom_dog' collection using the 'id' key",
      "arguments": {
        "key_id": {
          "type": {
            "type": "named",
            "name": "int8"
          }
        },
        "pre_check": {
          "description": "Delete permission predicate over the 'custom_dog' collection",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "predicate",
              "object_type_name": "custom_dog"
            }
          }
        }
      },
      "result_type": {
        "type": "named",
        "name": "delete_custom_dog_by_id_response"
      }
    },
    {
      "name": "delete_institution_institution_by_id",
      "description": "Delete any row on the 'institution_institution' collection using the 'id' key",
      "arguments": {
        "key_id": {
          "type": {
            "type": "named",
            "name": "int4"
          }
        },
        "pre_check": {
          "description": "Delete permission predicate over the 'institution_institution' collection",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "predicate",
              "object_type_name": "institution_institution"
            }
          }
        }
      },
      "result_type": {
        "type": "named",
        "name": "delete_institution_institution_by_id_response"
      }
    },
    {
      "name": "delete_spatial_ref_sys_by_srid",
      "description": "Delete any row on the 'spatial_ref_sys' collection using the 'srid' key",
      "arguments": {
        "key_srid": {
          "type": {
            "type": "named",
            "name": "int4"
          }
        },
        "pre_check": {
          "description": "Delete permission predicate over the 'spatial_ref_sys' collection",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "predicate",
              "object_type_name": "spatial_ref_sys"
            }
          }
        }
      },
      "result_type": {
        "type": "named",
        "name": "delete_spatial_ref_sys_by_srid_response"
      }
    },
    {
      "name": "delete_topology_layer_by_feature_column_and_schema_name_and_table_name",
      "description": "Delete any row on the 'topology_layer' collection using the 'feature_column', 'schema_name' and 'table_name' keys",
      "arguments": {
        "key_feature_column": {
          "type": {
            "type": "named",
            "name": "varchar"
          }
        },
        "key_schema_name": {
          "type": {
            "type": "named",
            "name": "varchar"
          }
        },
        "key_table_name": {
          "type": {
            "type": "named",
            "name": "varchar"
          }
        },
        "pre_check": {
          "description": "Delete permission predicate over the 'topology_layer' collection",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "predicate",
              "object_type_name": "topology_layer"
            }
          }
        }
      },
      "result_type": {
        "type": "named",
        "name": "delete_topology_layer_by_feature_column_and_schema_name_and_table_name_response"
      }
    },
    {
      "name": "delete_topology_layer_by_layer_id_and_topology_id",
      "description": "Delete any row on the 'topology_layer' collection using the 'layer_id' and 'topology_id' keys",
      "arguments": {
        "key_layer_id": {
          "type": {
            "type": "named",
            "name": "int4"
          }
        },
        "key_topology_id": {
          "type": {
            "type": "named",
            "name": "int4"
          }
        },
        "pre_check": {
          "description": "Delete permission predicate over the 'topology_layer' collection",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "predicate",
              "object_type_name": "topology_layer"
            }
          }
        }
      },
      "result_type": {
        "type": "named",
        "name": "delete_topology_layer_by_layer_id_and_topology_id_response"
      }
    },
    {
      "name": "delete_topology_topology_by_id",
      "description": "Delete any row on the 'topology_topology' collection using the 'id' key",
      "arguments": {
        "key_id": {
          "type": {
            "type": "named",
            "name": "int4"
          }
        },
        "pre_check": {
          "description": "Delete permission predicate over the 'topology_topology' collection",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "predicate",
              "object_type_name": "topology_topology"
            }
          }
        }
      },
      "result_type": {
        "type": "named",
        "name": "delete_topology_topology_by_id_response"
      }
    },
    {
      "name": "delete_topology_topology_by_name",
      "description": "Delete any row on the 'topology_topology' collection using the 'name' key",
      "arguments": {
        "key_name": {
          "type": {
            "type": "named",
            "name": "varchar"
          }
        },
        "pre_check": {
          "description": "Delete permission predicate over the 'topology_topology' collection",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "predicate",
              "object_type_name": "topology_topology"
            }
          }
        }
      },
      "result_type": {
        "type": "named",
        "name": "delete_topology_topology_by_name_response"
      }
    },
    {
      "name": "insert_Album",
      "description": "Insert into the Album table",
      "arguments": {
        "objects": {
          "type": {
            "type": "array",
            "element_type": {
              "type": "named",
              "name": "insert_Album_object"
            }
          }
        },
        "post_check": {
          "description": "Insert permission predicate over the 'Album' collection",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "predicate",
              "object_type_name": "Album"
            }
          }
        }
      },
      "result_type": {
        "type": "named",
        "name": "insert_Album_response"
      }
    },
    {
      "name": "insert_Artist",
      "description": "Insert into the Artist table",
      "arguments": {
        "objects": {
          "type": {
            "type": "array",
            "element_type": {
              "type": "named",
              "name": "insert_Artist_object"
            }
          }
        },
        "post_check": {
          "description": "Insert permission predicate over the 'Artist' collection",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "predicate",
              "object_type_name": "Artist"
            }
          }
        }
      },
      "result_type": {
        "type": "named",
        "name": "insert_Artist_response"
      }
    },
    {
      "name": "insert_Customer",
      "description": "Insert into the Customer table",
      "arguments": {
        "objects": {
          "type": {
            "type": "array",
            "element_type": {
              "type": "named",
              "name": "insert_Customer_object"
            }
          }
        },
        "post_check": {
          "description": "Insert permission predicate over the 'Customer' collection",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "predicate",
              "object_type_name": "Customer"
            }
          }
        }
      },
      "result_type": {
        "type": "named",
        "name": "insert_Customer_response"
      }
    },
    {
      "name": "insert_Employee",
      "description": "Insert into the Employee table",
      "arguments": {
        "objects": {
          "type": {
            "type": "array",
            "element_type": {
              "type": "named",
              "name": "insert_Employee_object"
            }
          }
        },
        "post_check": {
          "description": "Insert permission predicate over the 'Employee' collection",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "predicate",
              "object_type_name": "Employee"
            }
          }
        }
      },
      "result_type": {
        "type": "named",
        "name": "insert_Employee_response"
      }
    },
    {
      "name": "insert_Genre",
      "description": "Insert into the Genre table",
      "arguments": {
        "objects": {
          "type": {
            "type": "array",
            "element_type": {
              "type": "named",
              "name": "insert_Genre_object"
            }
          }
        },
        "post_check": {
          "description": "Insert permission predicate over the 'Genre' collection",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "predicate",
              "object_type_name": "Genre"
            }
          }
        }
      },
      "result_type": {
        "type": "named",
        "name": "insert_Genre_response"
      }
    },
    {
      "name": "insert_Invoice",
      "description": "Insert into the Invoice table",
      "arguments": {
        "objects": {
          "type": {
            "type": "array",
            "element_type": {
              "type": "named",
              "name": "insert_Invoice_object"
            }
          }
        },
        "post_check": {
          "description": "Insert permission predicate over the 'Invoice' collection",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "predicate",
              "object_type_name": "Invoice"
            }
          }
        }
      },
      "result_type": {
        "type": "named",
        "name": "insert_Invoice_response"
      }
    },
    {
      "name": "insert_InvoiceLine",
      "description": "Insert into the InvoiceLine table",
      "arguments": {
        "objects": {
          "type": {
            "type": "array",
            "element_type": {
              "type": "named",
              "name": "insert_InvoiceLine_object"
            }
          }
        },
        "post_check": {
          "description": "Insert permission predicate over the 'InvoiceLine' collection",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "predicate",
              "object_type_name": "InvoiceLine"
            }
          }
        }
      },
      "result_type": {
        "type": "named",
        "name": "insert_InvoiceLine_response"
      }
    },
    {
      "name": "insert_MediaType",
      "description": "Insert into the MediaType table",
      "arguments": {
        "objects": {
          "type": {
            "type": "array",
            "element_type": {
              "type": "named",
              "name": "insert_MediaType_object"
            }
          }
        },
        "post_check": {
          "description": "Insert permission predicate over the 'MediaType' collection",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "predicate",
              "object_type_name": "MediaType"
            }
          }
        }
      },
      "result_type": {
        "type": "named",
        "name": "insert_MediaType_response"
      }
    },
    {
      "name": "insert_Playlist",
      "description": "Insert into the Playlist table",
      "arguments": {
        "objects": {
          "type": {
            "type": "array",
            "element_type": {
              "type": "named",
              "name": "insert_Playlist_object"
            }
          }
        },
        "post_check": {
          "description": "Insert permission predicate over the 'Playlist' collection",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "predicate",
              "object_type_name": "Playlist"
            }
          }
        }
      },
      "result_type": {
        "type": "named",
        "name": "insert_Playlist_response"
      }
    },
    {
      "name": "insert_PlaylistTrack",
      "description": "Insert into the PlaylistTrack table",
      "arguments": {
        "objects": {
          "type": {
            "type": "array",
            "element_type": {
              "type": "named",
              "name": "insert_PlaylistTrack_object"
            }
          }
        },
        "post_check": {
          "description": "Insert permission predicate over the 'PlaylistTrack' collection",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "predicate",
              "object_type_name": "PlaylistTrack"
            }
          }
        }
      },
      "result_type": {
        "type": "named",
        "name": "insert_PlaylistTrack_response"
      }
    },
    {
      "name": "insert_Track",
      "description": "Insert into the Track table",
      "arguments": {
        "objects": {
          "type": {
            "type": "array",
            "element_type": {
              "type": "named",
              "name": "insert_Track_object"
            }
          }
        },
        "post_check": {
          "description": "Insert permission predicate over the 'Track' collection",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "predicate",
              "object_type_name": "Track"
            }
          }
        }
      },
      "result_type": {
        "type": "named",
        "name": "insert_Track_response"
      }
    },
    {
      "name": "insert_custom_defaults",
      "description": "Insert into the custom_defaults table",
      "arguments": {
        "objects": {
          "type": {
            "type": "array",
            "element_type": {
              "type": "named",
              "name": "insert_custom_defaults_object"
            }
          }
        },
        "post_check": {
          "description": "Insert permission predicate over the 'custom_defaults' collection",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "predicate",
              "object_type_name": "custom_defaults"
            }
          }
        }
      },
      "result_type": {
        "type": "named",
        "name": "insert_custom_defaults_response"
      }
    },
    {
      "name": "insert_custom_dog",
      "description": "Insert into the custom_dog table",
      "arguments": {
        "objects": {
          "type": {
            "type": "array",
            "element_type": {
              "type": "named",
              "name": "insert_custom_dog_object"
            }
          }
        },
        "post_check": {
          "description": "Insert permission predicate over the 'custom_dog' collection",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "predicate",
              "object_type_name": "custom_dog"
            }
          }
        }
      },
      "result_type": {
        "type": "named",
        "name": "insert_custom_dog_response"
      }
    },
    {
      "name": "insert_custom_test_cidr",
      "description": "Insert into the custom_test_cidr table",
      "arguments": {
        "objects": {
          "type": {
            "type": "array",
            "element_type": {
              "type": "named",
              "name": "insert_custom_test_cidr_object"
            }
          }
        },
        "post_check": {
          "description": "Insert permission predicate over the 'custom_test_cidr' collection",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "predicate",
              "object_type_name": "custom_test_cidr"
            }
          }
        }
      },
      "result_type": {
        "type": "named",
        "name": "insert_custom_test_cidr_response"
      }
    },
    {
      "name": "insert_deck_of_cards",
      "description": "Insert into the deck_of_cards table",
      "arguments": {
        "objects": {
          "type": {
            "type": "array",
            "element_type": {
              "type": "named",
              "name": "insert_deck_of_cards_object"
            }
          }
        },
        "post_check": {
          "description": "Insert permission predicate over the 'deck_of_cards' collection",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "predicate",
              "object_type_name": "deck_of_cards"
            }
          }
        }
      },
      "result_type": {
        "type": "named",
        "name": "insert_deck_of_cards_response"
      }
    },
    {
      "name": "insert_discoverable_types_root_occurrence",
      "description": "Insert into the discoverable_types_root_occurrence table",
      "arguments": {
        "objects": {
          "type": {
            "type": "array",
            "element_type": {
              "type": "named",
              "name": "insert_discoverable_types_root_occurrence_object"
            }
          }
        },
        "post_check": {
          "description": "Insert permission predicate over the 'discoverable_types_root_occurrence' collection",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "predicate",
              "object_type_name": "discoverable_types_root_occurrence"
            }
          }
        }
      },
      "result_type": {
        "type": "named",
        "name": "insert_discoverable_types_root_occurrence_response"
      }
    },
    {
      "name": "insert_even_numbers",
      "description": "Insert into the even_numbers table",
      "arguments": {
        "objects": {
          "type": {
            "type": "array",
            "element_type": {
              "type": "named",
              "name": "insert_even_numbers_object"
            }
          }
        },
        "post_check": {
          "description": "Insert permission predicate over the 'even_numbers' collection",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "predicate",
              "object_type_name": "even_numbers"
            }
          }
        }
      },
      "result_type": {
        "type": "named",
        "name": "insert_even_numbers_response"
      }
    },
    {
      "name": "insert_group_leader",
      "description": "Insert into the group_leader table",
      "arguments": {
        "objects": {
          "type": {
            "type": "array",
            "element_type": {
              "type": "named",
              "name": "insert_group_leader_object"
            }
          }
        },
        "post_check": {
          "description": "Insert permission predicate over the 'group_leader' collection",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "predicate",
              "object_type_name": "group_leader"
            }
          }
        }
      },
      "result_type": {
        "type": "named",
        "name": "insert_group_leader_response"
      }
    },
    {
      "name": "insert_institution_institution",
      "description": "Insert into the institution_institution table",
      "arguments": {
        "objects": {
          "type": {
            "type": "array",
            "element_type": {
              "type": "named",
              "name": "insert_institution_institution_object"
            }
          }
        },
        "post_check": {
          "description": "Insert permission predicate over the 'institution_institution' collection",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "predicate",
              "object_type_name": "institution_institution"
            }
          }
        }
      },
      "result_type": {
        "type": "named",
        "name": "insert_institution_institution_response"
      }
    },
    {
      "name": "insert_phone_numbers",
      "description": "Insert into the phone_numbers table",
      "arguments": {
        "objects": {
          "type": {
            "type": "array",
            "element_type": {
              "type": "named",
              "name": "insert_phone_numbers_object"
            }
          }
        },
        "post_check": {
          "description": "Insert permission predicate over the 'phone_numbers' collection",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "predicate",
              "object_type_name": "phone_numbers"
            }
          }
        }
      },
      "result_type": {
        "type": "named",
        "name": "insert_phone_numbers_response"
      }
    },
    {
      "name": "insert_spatial_ref_sys",
      "description": "Insert into the spatial_ref_sys table",
      "arguments": {
        "objects": {
          "type": {
            "type": "array",
            "element_type": {
              "type": "named",
              "name": "insert_spatial_ref_sys_object"
            }
          }
        },
        "post_check": {
          "description": "Insert permission predicate over the 'spatial_ref_sys' collection",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "predicate",
              "object_type_name": "spatial_ref_sys"
            }
          }
        }
      },
      "result_type": {
        "type": "named",
        "name": "insert_spatial_ref_sys_response"
      }
    },
    {
      "name": "insert_text_table",
      "description": "Insert into the text_table table",
      "arguments": {
        "objects": {
          "type": {
            "type": "array",
            "element_type": {
              "type": "named",
              "name": "insert_text_table_object"
            }
          }
        },
        "post_check": {
          "description": "Insert permission predicate over the 'text_table' collection",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "predicate",
              "object_type_name": "text_table"
            }
          }
        }
      },
      "result_type": {
        "type": "named",
        "name": "insert_text_table_response"
      }
    },
    {
      "name": "insert_topology_layer",
      "description": "Insert into the topology_layer table",
      "arguments": {
        "objects": {
          "type": {
            "type": "array",
            "element_type": {
              "type": "named",
              "name": "insert_topology_layer_object"
            }
          }
        },
        "post_check": {
          "description": "Insert permission predicate over the 'topology_layer' collection",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "predicate",
              "object_type_name": "topology_layer"
            }
          }
        }
      },
      "result_type": {
        "type": "named",
        "name": "insert_topology_layer_response"
      }
    },
    {
      "name": "insert_topology_topology",
      "description": "Insert into the topology_topology table",
      "arguments": {
        "objects": {
          "type": {
            "type": "array",
            "element_type": {
              "type": "named",
              "name": "insert_topology_topology_object"
            }
          }
        },
        "post_check": {
          "description": "Insert permission predicate over the 'topology_topology' collection",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "predicate",
              "object_type_name": "topology_topology"
            }
          }
        }
      },
      "result_type": {
        "type": "named",
        "name": "insert_topology_topology_response"
      }
    },
    {
      "name": "update_Album_by_AlbumId",
      "description": "Update any row on the 'Album' collection using the 'AlbumId' key",
      "arguments": {
        "key_AlbumId": {
          "description": "The identifier of an album",
          "type": {
            "type": "named",
            "name": "int4"
          }
        },
        "post_check": {
          "description": "Update permission post-condition predicate over the 'Album' collection",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "predicate",
              "object_type_name": "Album"
            }
          }
        },
        "pre_check": {
          "description": "Update permission pre-condition predicate over the 'Album' collection",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "predicate",
              "object_type_name": "Album"
            }
          }
        },
        "update_columns": {
          "type": {
            "type": "named",
            "name": "update_Album_by_AlbumId_update_columns"
          }
        }
      },
      "result_type": {
        "type": "named",
        "name": "update_Album_by_AlbumId_response"
      }
    },
    {
      "name": "update_Artist_by_ArtistId",
      "description": "Update any row on the 'Artist' collection using the 'ArtistId' key",
      "arguments": {
        "key_ArtistId": {
          "description": "The identifier of an artist",
          "type": {
            "type": "named",
            "name": "int4"
          }
        },
        "post_check": {
          "description": "Update permission post-condition predicate over the 'Artist' collection",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "predicate",
              "object_type_name": "Artist"
            }
          }
        },
        "pre_check": {
          "description": "Update permission pre-condition predicate over the 'Artist' collection",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "predicate",
              "object_type_name": "Artist"
            }
          }
        },
        "update_columns": {
          "type": {
            "type": "named",
            "name": "update_Artist_by_ArtistId_update_columns"
          }
        }
      },
      "result_type": {
        "type": "named",
        "name": "update_Artist_by_ArtistId_response"
      }
    },
    {
      "name": "update_Customer_by_CustomerId",
      "description": "Update any row on the 'Customer' collection using the 'CustomerId' key",
      "arguments": {
        "key_CustomerId": {
          "description": "The identifier of customer",
          "type": {
            "type": "named",
            "name": "int4"
          }
        },
        "post_check": {
          "description": "Update permission post-condition predicate over the 'Customer' collection",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "predicate",
              "object_type_name": "Customer"
            }
          }
        },
        "pre_check": {
          "description": "Update permission pre-condition predicate over the 'Customer' collection",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "predicate",
              "object_type_name": "Customer"
            }
          }
        },
        "update_columns": {
          "type": {
            "type": "named",
            "name": "update_Customer_by_CustomerId_update_columns"
          }
        }
      },
      "result_type": {
        "type": "named",
        "name": "update_Customer_by_CustomerId_response"
      }
    },
    {
      "name": "update_Employee_by_EmployeeId",
      "description": "Update any row on the 'Employee' collection using the 'EmployeeId' key",
      "arguments": {
        "key_EmployeeId": {
          "type": {
            "type": "named",
            "name": "int4"
          }
        },
        "post_check": {
          "description": "Update permission post-condition predicate over the 'Employee' collection",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "predicate",
              "object_type_name": "Employee"
            }
          }
        },
        "pre_check": {
          "description": "Update permission pre-condition predicate over the 'Employee' collection",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "predicate",
              "object_type_name": "Employee"
            }
          }
        },
        "update_columns": {
          "type": {
            "type": "named",
            "name": "update_Employee_by_EmployeeId_update_columns"
          }
        }
      },
      "result_type": {
        "type": "named",
        "name": "update_Employee_by_EmployeeId_response"
      }
    },
    {
      "name": "update_Genre_by_GenreId",
      "description": "Update any row on the 'Genre' collection using the 'GenreId' key",
      "arguments": {
        "key_GenreId": {
          "type": {
            "type": "named",
            "name": "int4"
          }
        },
        "post_check": {
          "description": "Update permission post-condition predicate over the 'Genre' collection",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "predicate",
              "object_type_name": "Genre"
            }
          }
        },
        "pre_check": {
          "description": "Update permission pre-condition predicate over the 'Genre' collection",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "predicate",
              "object_type_name": "Genre"
            }
          }
        },
        "update_columns": {
          "type": {
            "type": "named",
            "name": "update_Genre_by_GenreId_update_columns"
          }
        }
      },
      "result_type": {
        "type": "named",
        "name": "update_Genre_by_GenreId_response"
      }
    },
    {
      "name": "update_InvoiceLine_by_InvoiceLineId",
      "description": "Update any row on the 'InvoiceLine' collection using the 'InvoiceLineId' key",
      "arguments": {
        "key_InvoiceLineId": {
          "type": {
            "type": "named",
            "name": "int4"
          }
        },
        "post_check": {
          "description": "Update permission post-condition predicate over the 'InvoiceLine' collection",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "predicate",
              "object_type_name": "InvoiceLine"
            }
          }
        },
        "pre_check": {
          "description": "Update permission pre-condition predicate over the 'InvoiceLine' collection",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "predicate",
              "object_type_name": "InvoiceLine"
            }
          }
        },
        "update_columns": {
          "type": {
            "type": "named",
            "name": "update_InvoiceLine_by_InvoiceLineId_update_columns"
          }
        }
      },
      "result_type": {
        "type": "named",
        "name": "update_InvoiceLine_by_InvoiceLineId_response"
      }
    },
    {
      "name": "update_Invoice_by_InvoiceId",
      "description": "Update any row on the 'Invoice' collection using the 'InvoiceId' key",
      "arguments": {
        "key_InvoiceId": {
          "type": {
            "type": "named",
            "name": "int4"
          }
        },
        "post_check": {
          "description": "Update permission post-condition predicate over the 'Invoice' collection",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "predicate",
              "object_type_name": "Invoice"
            }
          }
        },
        "pre_check": {
          "description": "Update permission pre-condition predicate over the 'Invoice' collection",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "predicate",
              "object_type_name": "Invoice"
            }
          }
        },
        "update_columns": {
          "type": {
            "type": "named",
            "name": "update_Invoice_by_InvoiceId_update_columns"
          }
        }
      },
      "result_type": {
        "type": "named",
        "name": "update_Invoice_by_InvoiceId_response"
      }
    },
    {
      "name": "update_MediaType_by_MediaTypeId",
      "description": "Update any row on the 'MediaType' collection using the 'MediaTypeId' key",
      "arguments": {
        "key_MediaTypeId": {
          "type": {
            "type": "named",
            "name": "int4"
          }
        },
        "post_check": {
          "description": "Update permission post-condition predicate over the 'MediaType' collection",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "predicate",
              "object_type_name": "MediaType"
            }
          }
        },
        "pre_check": {
          "description": "Update permission pre-condition predicate over the 'MediaType' collection",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "predicate",
              "object_type_name": "MediaType"
            }
          }
        },
        "update_columns": {
          "type": {
            "type": "named",
            "name": "update_MediaType_by_MediaTypeId_update_columns"
          }
        }
      },
      "result_type": {
        "type": "named",
        "name": "update_MediaType_by_MediaTypeId_response"
      }
    },
    {
      "name": "update_PlaylistTrack_by_PlaylistId_and_TrackId",
      "description": "Update any row on the 'PlaylistTrack' collection using the 'PlaylistId' and 'TrackId' keys",
      "arguments": {
        "key_PlaylistId": {
          "type": {
            "type": "named",
            "name": "int4"
          }
        },
        "key_TrackId": {
          "type": {
            "type": "named",
            "name": "int4"
          }
        },
        "post_check": {
          "description": "Update permission post-condition predicate over the 'PlaylistTrack' collection",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "predicate",
              "object_type_name": "PlaylistTrack"
            }
          }
        },
        "pre_check": {
          "description": "Update permission pre-condition predicate over the 'PlaylistTrack' collection",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "predicate",
              "object_type_name": "PlaylistTrack"
            }
          }
        },
        "update_columns": {
          "type": {
            "type": "named",
            "name": "update_PlaylistTrack_by_PlaylistId_and_TrackId_update_columns"
          }
        }
      },
      "result_type": {
        "type": "named",
        "name": "update_PlaylistTrack_by_PlaylistId_and_TrackId_response"
      }
    },
    {
      "name": "update_Playlist_by_PlaylistId",
      "description": "Update any row on the 'Playlist' collection using the 'PlaylistId' key",
      "arguments": {
        "key_PlaylistId": {
          "type": {
            "type": "named",
            "name": "int4"
          }
        },
        "post_check": {
          "description": "Update permission post-condition predicate over the 'Playlist' collection",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "predicate",
              "object_type_name": "Playlist"
            }
          }
        },
        "pre_check": {
          "description": "Update permission pre-condition predicate over the 'Playlist' collection",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "predicate",
              "object_type_name": "Playlist"
            }
          }
        },
        "update_columns": {
          "type": {
            "type": "named",
            "name": "update_Playlist_by_PlaylistId_update_columns"
          }
        }
      },
      "result_type": {
        "type": "named",
        "name": "update_Playlist_by_PlaylistId_response"
      }
    },
    {
      "name": "update_Track_by_TrackId",
      "description": "Update any row on the 'Track' collection using the 'TrackId' key",
      "arguments": {
        "key_TrackId": {
          "type": {
            "type": "named",
            "name": "int4"
          }
        },
        "post_check": {
          "description": "Update permission post-condition predicate over the 'Track' collection",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "predicate",
              "object_type_name": "Track"
            }
          }
        },
        "pre_check": {
          "description": "Update permission pre-condition predicate over the 'Track' collection",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "predicate",
              "object_type_name": "Track"
            }
          }
        },
        "update_columns": {
          "type": {
            "type": "named",
            "name": "update_Track_by_TrackId_update_columns"
          }
        }
      },
      "result_type": {
        "type": "named",
        "name": "update_Track_by_TrackId_response"
      }
    },
    {
      "name": "update_custom_defaults_by_id",
      "description": "Update any row on the 'custom_defaults' collection using the 'id' key",
      "arguments": {
        "key_id": {
          "type": {
            "type": "named",
            "name": "int8"
          }
        },
        "post_check": {
          "description": "Update permission post-condition predicate over the 'custom_defaults' collection",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "predicate",
              "object_type_name": "custom_defaults"
            }
          }
        },
        "pre_check": {
          "description": "Update permission pre-condition predicate over the 'custom_defaults' collection",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "predicate",
              "object_type_name": "custom_defaults"
            }
          }
        },
        "update_columns": {
          "type": {
            "type": "named",
            "name": "update_custom_defaults_by_id_update_columns"
          }
        }
      },
      "result_type": {
        "type": "named",
        "name": "update_custom_defaults_by_id_response"
      }
    },
    {
      "name": "update_custom_dog_by_id",
      "description": "Update any row on the 'custom_dog' collection using the 'id' key",
      "arguments": {
        "key_id": {
          "type": {
            "type": "named",
            "name": "int8"
          }
        },
        "post_check": {
          "description": "Update permission post-condition predicate over the 'custom_dog' collection",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "predicate",
              "object_type_name": "custom_dog"
            }
          }
        },
        "pre_check": {
          "description": "Update permission pre-condition predicate over the 'custom_dog' collection",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "predicate",
              "object_type_name": "custom_dog"
            }
          }
        },
        "update_columns": {
          "type": {
            "type": "named",
            "name": "update_custom_dog_by_id_update_columns"
          }
        }
      },
      "result_type": {
        "type": "named",
        "name": "update_custom_dog_by_id_response"
      }
    },
    {
      "name": "update_institution_institution_by_id",
      "description": "Update any row on the 'institution_institution' collection using the 'id' key",
      "arguments": {
        "key_id": {
          "type": {
            "type": "named",
            "name": "int4"
          }
        },
        "post_check": {
          "description": "Update permission post-condition predicate over the 'institution_institution' collection",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "predicate",
              "object_type_name": "institution_institution"
            }
          }
        },
        "pre_check": {
          "description": "Update permission pre-condition predicate over the 'institution_institution' collection",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "predicate",
              "object_type_name": "institution_institution"
            }
          }
        },
        "update_columns": {
          "type": {
            "type": "named",
            "name": "update_institution_institution_by_id_update_columns"
          }
        }
      },
      "result_type": {
        "type": "named",
        "name": "update_institution_institution_by_id_response"
      }
    },
    {
      "name": "update_spatial_ref_sys_by_srid",
      "description": "Update any row on the 'spatial_ref_sys' collection using the 'srid' key",
      "arguments": {
        "key_srid": {
          "type": {
            "type": "named",
            "name": "int4"
          }
        },
        "post_check": {
          "description": "Update permission post-condition predicate over the 'spatial_ref_sys' collection",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "predicate",
              "object_type_name": "spatial_ref_sys"
            }
          }
        },
        "pre_check": {
          "description": "Update permission pre-condition predicate over the 'spatial_ref_sys' collection",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "predicate",
              "object_type_name": "spatial_ref_sys"
            }
          }
        },
        "update_columns": {
          "type": {
            "type": "named",
            "name": "update_spatial_ref_sys_by_srid_update_columns"
          }
        }
      },
      "result_type": {
        "type": "named",
        "name": "update_spatial_ref_sys_by_srid_response"
      }
    },
    {
      "name": "update_topology_layer_by_feature_column_and_schema_name_and_table_name",
      "description": "Update any row on the 'topology_layer' collection using the 'feature_column', 'schema_name' and 'table_name' keys",
      "arguments": {
        "key_feature_column": {
          "type": {
            "type": "named",
            "name": "varchar"
          }
        },
        "key_schema_name": {
          "type": {
            "type": "named",
            "name": "varchar"
          }
        },
        "key_table_name": {
          "type": {
            "type": "named",
            "name": "varchar"
          }
        },
        "post_check": {
          "description": "Update permission post-condition predicate over the 'topology_layer' collection",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "predicate",
              "object_type_name": "topology_layer"
            }
          }
        },
        "pre_check": {
          "description": "Update permission pre-condition predicate over the 'topology_layer' collection",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "predicate",
              "object_type_name": "topology_layer"
            }
          }
        },
        "update_columns": {
          "type": {
            "type": "named",
            "name": "update_topology_layer_by_feature_column_and_schema_name_and_table_name_update_columns"
          }
        }
      },
      "result_type": {
        "type": "named",
        "name": "update_topology_layer_by_feature_column_and_schema_name_and_table_name_response"
      }
    },
    {
      "name": "update_topology_layer_by_layer_id_and_topology_id",
      "description": "Update any row on the 'topology_layer' collection using the 'layer_id' and 'topology_id' keys",
      "arguments": {
        "key_layer_id": {
          "type": {
            "type": "named",
            "name": "int4"
          }
        },
        "key_topology_id": {
          "type": {
            "type": "named",
            "name": "int4"
          }
        },
        "post_check": {
          "description": "Update permission post-condition predicate over the 'topology_layer' collection",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "predicate",
              "object_type_name": "topology_layer"
            }
          }
        },
        "pre_check": {
          "description": "Update permission pre-condition predicate over the 'topology_layer' collection",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "predicate",
              "object_type_name": "topology_layer"
            }
          }
        },
        "update_columns": {
          "type": {
            "type": "named",
            "name": "update_topology_layer_by_layer_id_and_topology_id_update_columns"
          }
        }
      },
      "result_type": {
        "type": "named",
        "name": "update_topology_layer_by_layer_id_and_topology_id_response"
      }
    },
    {
      "name": "update_topology_topology_by_id",
      "description": "Update any row on the 'topology_topology' collection using the 'id' key",
      "arguments": {
        "key_id": {
          "type": {
            "type": "named",
            "name": "int4"
          }
        },
        "post_check": {
          "description": "Update permission post-condition predicate over the 'topology_topology' collection",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "predicate",
              "object_type_name": "topology_topology"
            }
          }
        },
        "pre_check": {
          "description": "Update permission pre-condition predicate over the 'topology_topology' collection",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "predicate",
              "object_type_name": "topology_topology"
            }
          }
        },
        "update_columns": {
          "type": {
            "type": "named",
            "name": "update_topology_topology_by_id_update_columns"
          }
        }
      },
      "result_type": {
        "type": "named",
        "name": "update_topology_topology_by_id_response"
      }
    },
    {
      "name": "update_topology_topology_by_name",
      "description": "Update any row on the 'topology_topology' collection using the 'name' key",
      "arguments": {
        "key_name": {
          "type": {
            "type": "named",
            "name": "varchar"
          }
        },
        "post_check": {
          "description": "Update permission post-condition predicate over the 'topology_topology' collection",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "predicate",
              "object_type_name": "topology_topology"
            }
          }
        },
        "pre_check": {
          "description": "Update permission pre-condition predicate over the 'topology_topology' collection",
          "type": {
            "type": "nullable",
            "underlying_type": {
              "type": "predicate",
              "object_type_name": "topology_topology"
            }
          }
        },
        "update_columns": {
          "type": {
            "type": "named",
            "name": "update_topology_topology_by_name_update_columns"
          }
        }
      },
      "result_type": {
        "type": "named",
        "name": "update_topology_topology_by_name_response"
      }
    }
  ],
  "capabilities": {
    "query": {
      "aggregates": {
        "count_scalar_type": "int8"
      }
    }
  }
}
