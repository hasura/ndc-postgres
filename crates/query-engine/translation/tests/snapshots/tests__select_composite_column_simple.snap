---
source: crates/query-engine/translation/tests/tests.rs
expression: result
---
WITH "%1_NATIVE_QUERY_address_identity_function" AS (
  WITH "%9_NATIVE_QUERY_address_identity_function" AS (
    SELECT
      jsonb_populate_record(cast(null as "public"."person_address"), $1) as result
  )
  SELECT
    *
  FROM
    "%9_NATIVE_QUERY_address_identity_function" AS "%10_NATIVE_QUERY_address_identity_function"
)
SELECT
  coalesce(json_agg(row_to_json("%5_universe")), '[]') AS "universe"
FROM
  (
    SELECT
      *
    FROM
      (
        SELECT
          coalesce(json_agg(row_to_json("%6_rows")), '[]') AS "rows"
        FROM
          (
            SELECT
              "%4_nested_fields_collect"."collected" AS "result"
            FROM
              "%1_NATIVE_QUERY_address_identity_function" AS "%0_address_identity_function"
              LEFT OUTER JOIN LATERAL (
                SELECT
                  row_to_json("%2_nested_fields") AS "collected"
                FROM
                  (
                    SELECT
                      "%3_address_identity_function.result"."address_line_1" AS "address_line_1",
                      "%3_address_identity_function.result"."address_line_2" AS "address_line_2"
                    FROM
                      (
                        SELECT
                          ("%0_address_identity_function"."result").*
                      ) AS "%3_address_identity_function.result"
                  ) AS "%2_nested_fields"
              ) AS "%4_nested_fields_collect" ON ('true')
          ) AS "%6_rows"
      ) AS "%6_rows"
  ) AS "%5_universe";

{
    1: Value(
        Object {
            "address_line_1": String("Somstreet 159"),
            "address_line_2": String("Second door to the right"),
        },
    ),
}
