---
source: crates/query-engine/translation/tests/tests.rs
expression: result
---
SELECT
  coalesce(json_agg("%6_universe_agg"."universe"), '[]') AS "universe"
FROM
  (
    SELECT
      row_to_json("%3_universe") AS "universe"
    FROM
      jsonb_to_recordset($1) AS "%0_%variables_table"("%variable_order" int, "%variables" jsonb)
      CROSS JOIN LATERAL (
        WITH "%2_NATIVE_QUERY_make_person" AS (
          WITH "%7_NATIVE_QUERY_make_person" AS (
            SELECT
              ROW(
                jsonb_populate_record(
                  cast(null as person_name),
                  ("%0_%variables_table"."%variables" -> $2)
                ),
                jsonb_populate_record(
                  cast(null as person_address),
                  ("%0_%variables_table"."%variables" -> $3)
                )
              ) :: person as result
          )
          SELECT
            *
          FROM
            "%7_NATIVE_QUERY_make_person" AS "%8_NATIVE_QUERY_make_person"
        )
        SELECT
          *
        FROM
          (
            SELECT
              coalesce(json_agg(row_to_json("%4_rows")), '[]') AS "rows"
            FROM
              (
                SELECT
                  "%1_make_person"."result" AS "result"
                FROM
                  "%2_NATIVE_QUERY_make_person" AS "%1_make_person"
              ) AS "%4_rows"
          ) AS "%4_rows"
      ) AS "%3_universe"
    ORDER BY
      "%0_%variables_table"."%variable_order" ASC
  ) AS "%6_universe_agg";

{
    1: Variable(
        "%VARIABLES_OBJECT_PLACEHOLDER",
    ),
    2: String(
        "variable_name",
    ),
    3: String(
        "variable_address",
    ),
}
