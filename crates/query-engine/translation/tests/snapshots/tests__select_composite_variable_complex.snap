---
source: crates/query-engine/translation/tests/tests.rs
expression: result
---
SELECT
  coalesce(json_agg("%16_universe_agg"."universe"), '[]') AS "universe"
FROM
  (
    SELECT
      row_to_json("%13_universe") AS "universe"
    FROM
      jsonb_to_recordset($1) AS "%0_%variables_table"("%variable_order" "int4", "%variables" "jsonb")
      CROSS JOIN LATERAL (
        WITH "%2_NATIVE_QUERY_make_person" AS (
          WITH "%17_NATIVE_QUERY_make_person" AS (
            SELECT
              ROW(
                jsonb_populate_record(
                  cast(null as "public"."person_name"),
                  ("%0_%variables_table"."%variables" -> $2)
                ),
                jsonb_populate_record(
                  cast(null as "public"."person_address"),
                  ("%0_%variables_table"."%variables" -> $3)
                )
              ) :: person as result
          )
          SELECT
            *
          FROM
            "%17_NATIVE_QUERY_make_person" AS "%18_NATIVE_QUERY_make_person"
        )
        SELECT
          *
        FROM
          (
            SELECT
              coalesce(json_agg(row_to_json("%14_rows")), '[]') AS "rows"
            FROM
              (
                SELECT
                  "%12_nested_fields_collect"."collected" AS "result"
                FROM
                  (
                    SELECT
                      "%1_make_person".*
                    FROM
                      "%2_NATIVE_QUERY_make_person" AS "%1_make_person"
                  ) AS "%3_make_person"
                  LEFT OUTER JOIN LATERAL (
                    SELECT
                      row_to_json("%4_nested_fields") AS "collected"
                    FROM
                      (
                        SELECT
                          "%8_nested_fields_collect"."collected" AS "address",
                          "%11_nested_fields_collect"."collected" AS "name"
                        FROM
                          (
                            SELECT
                              ("%3_make_person"."result").*
                          ) AS "%5_make_person.result"
                          LEFT OUTER JOIN LATERAL (
                            SELECT
                              row_to_json("%6_nested_fields") AS "collected"
                            FROM
                              (
                                SELECT
                                  "%7_make_person.result.address"."address_line_1" AS "address_line_1",
                                  "%7_make_person.result.address"."address_line_2" AS "address_line_2"
                                FROM
                                  (
                                    SELECT
                                      ("%5_make_person.result"."address").*
                                  ) AS "%7_make_person.result.address"
                              ) AS "%6_nested_fields"
                          ) AS "%8_nested_fields_collect" ON ('true')
                          LEFT OUTER JOIN LATERAL (
                            SELECT
                              row_to_json("%9_nested_fields") AS "collected"
                            FROM
                              (
                                SELECT
                                  "%10_make_person.result.name"."first_name" AS "first_name",
                                  "%10_make_person.result.name"."last_name" AS "last_name"
                                FROM
                                  (
                                    SELECT
                                      ("%5_make_person.result"."name").*
                                  ) AS "%10_make_person.result.name"
                              ) AS "%9_nested_fields"
                          ) AS "%11_nested_fields_collect" ON ('true')
                      ) AS "%4_nested_fields"
                  ) AS "%12_nested_fields_collect" ON ('true')
              ) AS "%14_rows"
          ) AS "%14_rows"
      ) AS "%13_universe"
    ORDER BY
      "%0_%variables_table"."%variable_order" ASC
  ) AS "%16_universe_agg";

{
    1: Variable(
        "%VARIABLES_OBJECT_PLACEHOLDER",
    ),
    2: String(
        "variable_name",
    ),
    3: String(
        "variable_address",
    ),
}
