---
source: crates/query-engine/translation/tests/tests.rs
expression: result
---
SELECT
  coalesce(json_agg(row_to_json("%12_universe")), '[]') AS "universe"
FROM
  (
    SELECT
      *
    FROM
      (
        SELECT
          coalesce(json_agg(row_to_json("%13_rows")), '[]') AS "rows"
        FROM
          (
            SELECT
              "%0_Track"."Name" AS "track",
              "%0_Track"."AlbumId" AS "AlbumId",
              "%1_RELATIONSHIP_Album"."Album" AS "Album"
            FROM
              "public"."Track" AS "%0_Track"
              LEFT OUTER JOIN LATERAL (
                SELECT
                  row_to_json("%1_RELATIONSHIP_Album") AS "Album"
                FROM
                  (
                    SELECT
                      *
                    FROM
                      (
                        SELECT
                          coalesce(json_agg(row_to_json("%10_rows")), '[]') AS "rows"
                        FROM
                          (
                            SELECT
                              "%5_Album"."Title" AS "album",
                              "%6_RELATIONSHIP_Artist"."Artist" AS "Artist"
                            FROM
                              "public"."Album" AS "%5_Album"
                              LEFT OUTER JOIN LATERAL (
                                SELECT
                                  row_to_json("%6_RELATIONSHIP_Artist") AS "Artist"
                                FROM
                                  (
                                    SELECT
                                      *
                                    FROM
                                      (
                                        SELECT
                                          coalesce(json_agg(row_to_json("%8_rows")), '[]') AS "rows"
                                        FROM
                                          (
                                            SELECT
                                              "%7_Artist"."Name" AS "artist",
                                              "%7_Artist"."ArtistId" AS "ArtistId"
                                            FROM
                                              "public"."Artist" AS "%7_Artist"
                                            WHERE
                                              ("%5_Album"."ArtistId" = "%7_Artist"."ArtistId")
                                          ) AS "%8_rows"
                                      ) AS "%8_rows"
                                  ) AS "%6_RELATIONSHIP_Artist"
                              ) AS "%6_RELATIONSHIP_Artist" ON ('true')
                            WHERE
                              ("%0_Track"."AlbumId" = "%5_Album"."AlbumId")
                          ) AS "%10_rows"
                      ) AS "%10_rows"
                  ) AS "%1_RELATIONSHIP_Album"
              ) AS "%1_RELATIONSHIP_Album" ON ('true')
            WHERE
              EXISTS (
                SELECT
                  1 AS "one"
                FROM
                  "public"."Album" AS "%2_Album" FULL
                  OUTER JOIN LATERAL (
                    SELECT
                      "%3_BOOLEXP_Artist".*
                    FROM
                      (
                        SELECT
                          *
                        FROM
                          "public"."Artist" AS "%3_BOOLEXP_Artist"
                        WHERE
                          (
                            (
                              "%3_BOOLEXP_Artist"."Name" = cast($1 as "pg_catalog"."varchar")
                            )
                            AND (
                              "%2_Album"."ArtistId" = "%3_BOOLEXP_Artist"."ArtistId"
                            )
                          )
                      ) AS "%3_BOOLEXP_Artist"
                  ) AS "%4_BOOLEXP_Artist" ON ('true')
                WHERE
                  (
                    (
                      (
                        "%2_Album"."Title" = cast($2 as "pg_catalog"."varchar")
                      )
                      AND (
                        "%2_Album"."AlbumId" > "%4_BOOLEXP_Artist"."ArtistId"
                      )
                    )
                    AND ("%0_Track"."AlbumId" = "%2_Album"."AlbumId")
                  )
              )
            ORDER BY
              "%0_Track"."TrackId" ASC
            LIMIT
              5
          ) AS "%13_rows"
      ) AS "%13_rows"
  ) AS "%12_universe";

{
    1: String(
        "The Artist name",
    ),
    2: String(
        "The album title (1)",
    ),
}
