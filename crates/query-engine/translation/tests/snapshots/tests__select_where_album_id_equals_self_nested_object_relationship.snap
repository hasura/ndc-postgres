---
source: crates/query-engine/translation/tests/tests.rs
expression: result
---
WITH "%6_Track" AS (
  SELECT
    "%0_Track".*
  FROM
    "public"."Track" AS "%0_Track"
  WHERE
    EXISTS (
      SELECT
        1
      FROM
        (
          SELECT
            "%1_BOOLEXP_Album".*
          FROM
            (
              SELECT
                *
              FROM
                "public"."Album" AS "%1_BOOLEXP_Album"
              WHERE
                (
                  (
                    "%1_BOOLEXP_Album"."Title" = cast($1 as "pg_catalog"."varchar")
                  )
                  AND (
                    "%0_Track"."AlbumId" = "%1_BOOLEXP_Album"."AlbumId"
                  )
                )
            ) AS "%1_BOOLEXP_Album"
        ) AS "%2_BOOLEXP_Album" FULL
        OUTER JOIN LATERAL (
          SELECT
            "%4_BOOLEXP_Artist".*
          FROM
            (
              SELECT
                *
              FROM
                "public"."Album" AS "%3_BOOLEXP_Album"
              WHERE
                (
                  (
                    "%3_BOOLEXP_Album"."Title" = cast($2 as "pg_catalog"."varchar")
                  )
                  AND (
                    "%0_Track"."AlbumId" = "%3_BOOLEXP_Album"."AlbumId"
                  )
                )
            ) AS "%3_BOOLEXP_Album"
            INNER JOIN LATERAL (
              SELECT
                *
              FROM
                "public"."Artist" AS "%4_BOOLEXP_Artist"
              WHERE
                (
                  (
                    "%4_BOOLEXP_Artist"."Name" = cast($3 as "pg_catalog"."varchar")
                  )
                  AND (
                    "%3_BOOLEXP_Album"."ArtistId" = "%4_BOOLEXP_Artist"."ArtistId"
                  )
                )
            ) AS "%4_BOOLEXP_Artist" ON ('true')
        ) AS "%5_BOOLEXP_Artist" ON ('true')
      WHERE
        (
          "%2_BOOLEXP_Album"."AlbumId" > "%5_BOOLEXP_Artist"."ArtistId"
        )
    )
  ORDER BY
    "%0_Track"."TrackId" ASC
  LIMIT
    5
)
SELECT
  coalesce(json_agg(row_to_json("%20_universe")), '[]') AS "universe"
FROM
  (
    SELECT
      *
    FROM
      (
        SELECT
          coalesce(json_agg(row_to_json("%21_rows")), '[]') AS "rows"
        FROM
          (
            SELECT
              "%7_Track"."Name" AS "track",
              "%7_Track"."AlbumId" AS "AlbumId",
              "%8_RELATIONSHIP_Album"."Album" AS "Album"
            FROM
              "%6_Track" AS "%7_Track"
              LEFT OUTER JOIN LATERAL (
                WITH "%10_Album" AS (
                  SELECT
                    "%9_Album".*
                  FROM
                    "public"."Album" AS "%9_Album"
                  WHERE
                    ("%7_Track"."AlbumId" = "%9_Album"."AlbumId")
                )
                SELECT
                  row_to_json("%8_RELATIONSHIP_Album") AS "Album"
                FROM
                  (
                    SELECT
                      *
                    FROM
                      (
                        SELECT
                          coalesce(json_agg(row_to_json("%18_rows")), '[]') AS "rows"
                        FROM
                          (
                            SELECT
                              "%11_Album"."Title" AS "album",
                              "%12_RELATIONSHIP_Artist"."Artist" AS "Artist"
                            FROM
                              "%10_Album" AS "%11_Album"
                              LEFT OUTER JOIN LATERAL (
                                WITH "%14_Artist" AS (
                                  SELECT
                                    "%13_Artist".*
                                  FROM
                                    "public"."Artist" AS "%13_Artist"
                                  WHERE
                                    ("%11_Album"."ArtistId" = "%13_Artist"."ArtistId")
                                )
                                SELECT
                                  row_to_json("%12_RELATIONSHIP_Artist") AS "Artist"
                                FROM
                                  (
                                    SELECT
                                      *
                                    FROM
                                      (
                                        SELECT
                                          coalesce(json_agg(row_to_json("%16_rows")), '[]') AS "rows"
                                        FROM
                                          (
                                            SELECT
                                              "%15_Artist"."Name" AS "artist",
                                              "%15_Artist"."ArtistId" AS "ArtistId"
                                            FROM
                                              "%14_Artist" AS "%15_Artist"
                                          ) AS "%16_rows"
                                      ) AS "%16_rows"
                                  ) AS "%12_RELATIONSHIP_Artist"
                              ) AS "%12_RELATIONSHIP_Artist" ON ('true')
                          ) AS "%18_rows"
                      ) AS "%18_rows"
                  ) AS "%8_RELATIONSHIP_Album"
              ) AS "%8_RELATIONSHIP_Album" ON ('true')
            ORDER BY
              "%7_Track"."TrackId" ASC
          ) AS "%21_rows"
      ) AS "%21_rows"
  ) AS "%20_universe";

{
    1: String(
        "The album title (1)",
    ),
    2: String(
        "The album title (2)",
    ),
    3: String(
        "The Artist name",
    ),
}
