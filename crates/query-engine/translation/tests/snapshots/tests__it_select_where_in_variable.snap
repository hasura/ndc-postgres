---
source: crates/query-engine/translation/tests/tests.rs
expression: result
---
SELECT
  coalesce(json_agg("%10_universe_agg"."universe"), '[]') AS "universe"
FROM
  (
    SELECT
      row_to_json("%7_universe") AS "universe"
    FROM
      jsonb_to_recordset($1) AS "%0_%variables_table"("%variable_order" "int4", "%variables" "jsonb")
      CROSS JOIN LATERAL (
        WITH "%2_NATIVE_QUERY_array_series" AS (
          WITH "%11_NATIVE_QUERY_array_series" AS (
            SELECT
              3 as three,
              array_agg(arr.series) AS series
            FROM
              (
                SELECT
                  generate_series(
                    cast(
                      (
                        ("%0_%variables_table"."%variables" -> $2) #>> cast(ARRAY [] as "text"[])) as "pg_catalog"."int4"),cast((("%0_%variables_table"."%variables" -> $3) #>> cast(ARRAY [] as "text"[])) as "pg_catalog"."int4")) AS series) AS arr
                      )
                      SELECT
                        *
                      FROM
                        "%11_NATIVE_QUERY_array_series" AS "%12_NATIVE_QUERY_array_series"
                    ),
                    "%5_array_series" AS (
                      SELECT
                        "%1_array_series".*
                      FROM
                        "%2_NATIVE_QUERY_array_series" AS "%1_array_series"
                      WHERE
                        (
                          "%1_array_series"."three" IN (
                            SELECT
                              "%4_in_subquery"."value" AS "value"
                            FROM
                              UNNEST(
                                (
                                  SELECT
                                    array_agg(
                                      cast(
                                        (
                                          "%3_array"."element" #>> cast(ARRAY [] as "text"[])) as "pg_catalog"."int4")) AS "element" FROM jsonb_array_elements(("%0_%variables_table"."%variables" -> $4)) AS "%3_array"("element"))) AS "%4_in_subquery"("value")))
                                        )
                                        SELECT
                                          *
                                        FROM
                                          (
                                            SELECT
                                              coalesce(json_agg(row_to_json("%8_rows")), '[]') AS "rows"
                                            FROM
                                              (
                                                SELECT
                                                  "%6_array_series"."series" AS "series"
                                                FROM
                                                  "%5_array_series" AS "%6_array_series"
                                              ) AS "%8_rows"
                                          ) AS "%8_rows"
                                      ) AS "%7_universe"
                                      ORDER BY
                                        "%0_%variables_table"."%variable_order" ASC
                                    ) AS "%10_universe_agg";

{
    1: Variable(
        "%VARIABLES_OBJECT_PLACEHOLDER",
    ),
    2: String(
        "from",
    ),
    3: String(
        "to",
    ),
    4: String(
        "array",
    ),
}
